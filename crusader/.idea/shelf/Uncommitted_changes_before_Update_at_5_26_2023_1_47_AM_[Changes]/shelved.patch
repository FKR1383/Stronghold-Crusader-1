Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_4_30_2023_7_58_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_4_30_2023_7_58_PM__Changes_.xml b/../.idea/shelf/Uncommitted_changes_before_Update_at_4_30_2023_7_58_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1682922788000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_4_30_2023_7_58_PM__Changes_.xml	(date 1682922788000)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_4_30_2023_7_58_PM_[Changes]" date="1682872118302" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_4_30_2023_7_58_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 4/30/2023 7:58 PM [Changes]" />
+</changelist>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml b/../.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apiguardian:apiguardian-api:1.1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml
new file mode 100644
--- /dev/null	(date 1682453676000)
+++ b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_2.xml	(date 1682453676000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_3.xml b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_3.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_3.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter:5.9.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/misc.xml b/../.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/misc.xml	(date 1682935704000)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/crusader/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="19" project-jdk-type="JavaSDK" />
+</project>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml b/../.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hamcrest:hamcrest-core:1.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__junit_junit_4_13_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__junit_junit_4_13_2.xml b/../.idea/libraries/Maven__junit_junit_4_13_2.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__junit_junit_4_13_2.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: junit:junit:4.13.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.2/junit-4.13.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.2/junit-4.13.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.2/junit-4.13.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/modules.xml b/../.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/modules.xml	(date 1682935704000)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/crusader/StrongholdCrusader.iml" filepath="$PROJECT_DIR$/crusader/StrongholdCrusader.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/project-group-09.iml" filepath="$PROJECT_DIR$/.idea/project-group-09.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_10_03_AM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_10_03_AM_[Changes]/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_10_03_AM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1682922791000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_10_03_AM_[Changes]/shelved.patch	(date 1682922791000)
@@ -0,0 +1,134 @@
+Index: .gitignore
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>/crusader/src/main/java/controller/\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.gitignore b/.gitignore
+--- a/.gitignore	(revision b3875633befe3ec26a892ac3769b5d8b9ff515ff)
++++ b/.gitignore	(date 1682884935423)
+@@ -1,1 +1,1 @@
+-/crusader/src/main/java/controller/
++/crusader/src/main/java/controller/DeletedController.java
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"48940bc5-fa6d-4a81-b88a-cb236d4b61a3\" name=\"Changes\" comment=\"the last commits before checkpoint 1 ...\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/crusader/src/main/java/controller/BuildingController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/crusader/src/main/java/controller/BuildingController.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"MitraGh\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OeZJGtSER9mrxhoyWb8D0vXmSP\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Sharif/Term2/AP/Project/Project-Phase-1&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"model\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\test\\java\\controller\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\main\\java\" />\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\test\\java\\menu\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"StrongholdCrusader\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.changeEmailTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"changeEmailTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.isStrongPasswordTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"isStrongPasswordTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.removeSloganTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"removeSloganTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.changeEmailTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.removeSloganTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.isStrongPasswordTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"48940bc5-fa6d-4a81-b88a-cb236d4b61a3\" name=\"Changes\" comment=\"\" />\r\n      <created>1681922938440</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681922938440</updated>\r\n      <workItem from=\"1681922940573\" duration=\"1143000\" />\r\n      <workItem from=\"1681937070375\" duration=\"893000\" />\r\n      <workItem from=\"1681941196344\" duration=\"7452000\" />\r\n      <workItem from=\"1681984358797\" duration=\"16524000\" />\r\n      <workItem from=\"1682023951191\" duration=\"511000\" />\r\n      <workItem from=\"1682056344653\" duration=\"7886000\" />\r\n      <workItem from=\"1682067403104\" duration=\"102000\" />\r\n      <workItem from=\"1682073593485\" duration=\"1034000\" />\r\n      <workItem from=\"1682087981704\" duration=\"15062000\" />\r\n      <workItem from=\"1682116199375\" duration=\"2705000\" />\r\n      <workItem from=\"1682149028155\" duration=\"14217000\" />\r\n      <workItem from=\"1682174575839\" duration=\"72000\" />\r\n      <workItem from=\"1682174654488\" duration=\"103000\" />\r\n      <workItem from=\"1682174764146\" duration=\"99000\" />\r\n      <workItem from=\"1682180160196\" duration=\"2544000\" />\r\n      <workItem from=\"1682202541014\" duration=\"27766000\" />\r\n      <workItem from=\"1682333857238\" duration=\"49000\" />\r\n      <workItem from=\"1682334932839\" duration=\"1014000\" />\r\n      <workItem from=\"1682353770879\" duration=\"1777000\" />\r\n      <workItem from=\"1682371298142\" duration=\"130000\" />\r\n      <workItem from=\"1682411331249\" duration=\"72000\" />\r\n      <workItem from=\"1682438061345\" duration=\"1337000\" />\r\n      <workItem from=\"1682442721294\" duration=\"10440000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"...\">\r\n      <created>1681925358549</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681925358549</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"some tests added.\">\r\n      <created>1681944373098</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681944373098</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"some enums are edited.\">\r\n      <created>1681995637116</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681995637116</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Resources added.\">\r\n      <created>1681999798822</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681999798822</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Foods\">\r\n      <created>1682000666231</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682000666231</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Foods are added.\">\r\n      <created>1682001101623</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682001101623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Humans are added.\">\r\n      <created>1682001707158</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682001707158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Humans are added. (final)\">\r\n      <created>1682002807377</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682002807377</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"stay logged in.\">\r\n      <created>1682021001755</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682021001755</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Storage and producer buildings...\">\r\n      <created>1682062460681</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682062460681</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Texture passable conditions ...\">\r\n      <created>1682063924968</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682063924968</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Main castle added.\">\r\n      <created>1682103062158</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682103062158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Walls, Draw bridge and gatehouses are added.\">\r\n      <created>1682115730401</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682115730401</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Towers added.\">\r\n      <created>1682165652089</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682165652089</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"castle buildings changed.\">\r\n      <created>1682168093012</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682168093012</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"castle buildings final change.\">\r\n      <created>1682172406877</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682172406877</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"method convertPasswordToHash() edited.\">\r\n      <created>1682189114122</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682189114122</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"a bug solved.\">\r\n      <created>1682237172223</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682237172223</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Building menu and Buildings dictionary. (first try)\">\r\n      <created>1682255351548</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682255351548</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Building menu (second try)\">\r\n      <created>1682289033211</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682289033211</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Building menu (second try)\">\r\n      <created>1682289065083</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682289065083</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"a commit to solve a problem.\">\r\n      <created>1682353891980</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682353891980</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"building menu edited.\">\r\n      <created>1682354296419</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682354296419</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"adding tree to Tile class\">\r\n      <created>1682439002928</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682439002928</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"just commit\">\r\n      <created>1682447586540</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682447586540</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Building menu updated&#10;and some enums edited.\">\r\n      <created>1682451476656</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682451476656</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"the last commits before checkpoint 1 ...\">\r\n      <created>1682453168189</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682453168189</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"28\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"some enums are edited.\" />\r\n    <MESSAGE value=\"Resources added.\" />\r\n    <MESSAGE value=\"Foods\" />\r\n    <MESSAGE value=\"Foods are added.\" />\r\n    <MESSAGE value=\"Humans are added.\" />\r\n    <MESSAGE value=\"Humans are added. (final)\" />\r\n    <MESSAGE value=\"stay logged in.\" />\r\n    <MESSAGE value=\"Storage and producer buildings...\" />\r\n    <MESSAGE value=\"Texture passable conditions ...\" />\r\n    <MESSAGE value=\"Main castle added.\" />\r\n    <MESSAGE value=\"Walls, Draw bridge and gatehouses are added.\" />\r\n    <MESSAGE value=\"Towers added.\" />\r\n    <MESSAGE value=\"castle buildings changed.\" />\r\n    <MESSAGE value=\"castle buildings final change.\" />\r\n    <MESSAGE value=\"method convertPasswordToHash() edited.\" />\r\n    <MESSAGE value=\"a bug solved.\" />\r\n    <MESSAGE value=\"Building menu and Buildings dictionary. (first try)\" />\r\n    <MESSAGE value=\"Building menu (second try)\" />\r\n    <MESSAGE value=\"a commit to sove a problem.\" />\r\n    <MESSAGE value=\"a commit to solve a problem.\" />\r\n    <MESSAGE value=\"building menu edited.\" />\r\n    <MESSAGE value=\"adding tree to Tile class\" />\r\n    <MESSAGE value=\"just commit\" />\r\n    <MESSAGE value=\"Building menu updated&#10;and some enums edited.\" />\r\n    <MESSAGE value=\"the last commits before checkpoint 1 ...\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"the last commits before checkpoint 1 ...\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Project_Phase_1$UserControllerTest.ic\" NAME=\"UserControllerTest Coverage Results\" MODIFIED=\"1681942420279\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>controller.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic\" NAME=\"UserControllerTest.changeEmailTest Coverage Results\" MODIFIED=\"1681944150811\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>controller.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision b3875633befe3ec26a892ac3769b5d8b9ff515ff)
++++ b/.idea/workspace.xml	(date 1682889402454)
+@@ -4,9 +4,9 @@
+     <option name="autoReloadType" value="SELECTIVE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="48940bc5-fa6d-4a81-b88a-cb236d4b61a3" name="Changes" comment="the last commits before checkpoint 1 ...">
++    <list default="true" id="48940bc5-fa6d-4a81-b88a-cb236d4b61a3" name="Changes" comment="push problem test">
++      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/BuildingController.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/BuildingController.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -80,7 +80,7 @@
+       <module name="StrongholdCrusader" />
+       <extension name="coverage">
+         <pattern>
+-          <option name="PATTERN" value="controller.*" />
++          <option name="PATTERN" value="controller.human.*" />
+           <option name="ENABLED" value="true" />
+         </pattern>
+       </extension>
+@@ -95,7 +95,7 @@
+       <module name="StrongholdCrusader" />
+       <extension name="coverage">
+         <pattern>
+-          <option name="PATTERN" value="controller.*" />
++          <option name="PATTERN" value="controller.human.*" />
+           <option name="ENABLED" value="true" />
+         </pattern>
+       </extension>
+@@ -111,7 +111,7 @@
+       <module name="StrongholdCrusader" />
+       <extension name="coverage">
+         <pattern>
+-          <option name="PATTERN" value="controller.*" />
++          <option name="PATTERN" value="controller.human.*" />
+           <option name="ENABLED" value="true" />
+         </pattern>
+       </extension>
+@@ -127,7 +127,7 @@
+       <module name="StrongholdCrusader" />
+       <extension name="coverage">
+         <pattern>
+-          <option name="PATTERN" value="controller.*" />
++          <option name="PATTERN" value="controller.human.*" />
+           <option name="ENABLED" value="true" />
+         </pattern>
+       </extension>
+@@ -179,7 +179,7 @@
+       <workItem from="1682371298142" duration="130000" />
+       <workItem from="1682411331249" duration="72000" />
+       <workItem from="1682438061345" duration="1337000" />
+-      <workItem from="1682442721294" duration="10440000" />
++      <workItem from="1682442721294" duration="9814000" />
+     </task>
+     <task id="LOCAL-00001" summary="...">
+       <created>1681925358549</created>
+@@ -363,14 +363,21 @@
+       <option name="project" value="LOCAL" />
+       <updated>1682451476656</updated>
+     </task>
+-    <task id="LOCAL-00027" summary="the last commits before checkpoint 1 ...">
+-      <created>1682453168189</created>
++    <task id="LOCAL-00027" summary="move and patrol and attack">
++      <created>1682887110127</created>
+       <option name="number" value="00027" />
+       <option name="presentableId" value="LOCAL-00027" />
+       <option name="project" value="LOCAL" />
+-      <updated>1682453168189</updated>
++      <updated>1682887110127</updated>
++    </task>
++    <task id="LOCAL-00028" summary="...">
++      <created>1682887190190</created>
++      <option name="number" value="00028" />
++      <option name="presentableId" value="LOCAL-00028" />
++      <option name="project" value="LOCAL" />
++      <updated>1682887190190</updated>
+     </task>
+-    <option name="localTasksCounter" value="28" />
++    <option name="localTasksCounter" value="29" />
+     <servers />
+   </component>
+   <component name="TypeScriptGeneratedFilesManager">
+@@ -388,7 +395,6 @@
+     </option>
+   </component>
+   <component name="VcsManagerConfiguration">
+-    <MESSAGE value="some enums are edited." />
+     <MESSAGE value="Resources added." />
+     <MESSAGE value="Foods" />
+     <MESSAGE value="Foods are added." />
+@@ -412,14 +418,15 @@
+     <MESSAGE value="adding tree to Tile class" />
+     <MESSAGE value="just commit" />
+     <MESSAGE value="Building menu updated&#10;and some enums edited." />
+-    <MESSAGE value="the last commits before checkpoint 1 ..." />
+-    <option name="LAST_COMMIT_MESSAGE" value="the last commits before checkpoint 1 ..." />
++    <MESSAGE value="move and patrol and attack" />
++    <MESSAGE value="..." />
++    <option name="LAST_COMMIT_MESSAGE" value="..." />
+   </component>
+   <component name="com.intellij.coverage.CoverageDataManagerImpl">
+-    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest.ic" NAME="UserControllerTest Coverage Results" MODIFIED="1681942420279" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
++    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic" NAME="UserControllerTest.changeEmailTest Coverage Results" MODIFIED="1681944150811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+       <FILTER>controller.*</FILTER>
+     </SUITE>
+-    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic" NAME="UserControllerTest.changeEmailTest Coverage Results" MODIFIED="1681944150811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
++    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest.ic" NAME="UserControllerTest Coverage Results" MODIFIED="1681942420279" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+       <FILTER>controller.*</FILTER>
+     </SUITE>
+   </component>
Index: src/main/resources/images/captchaImages/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/images/captchaImages/main.py b/src/main/resources/images/captchaImages/main.py
new file mode 100644
--- /dev/null	(date 1684955823000)
+++ b/src/main/resources/images/captchaImages/main.py	(date 1684955823000)
@@ -0,0 +1,7 @@
+from captcha.image import ImageCaptcha
+import random
+
+n = random.choice(range(1000, 10000))
+image = ImageCaptcha()
+data = image.generate(str(n))
+image.write(str(n), str(n) + '.png')
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_10_03_AM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_10_03_AM__Changes_.xml b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_10_03_AM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1682923001000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_10_03_AM__Changes_.xml	(date 1682923001000)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_5_1_2023_10_03_AM_[Changes]" date="1682922815023" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_10_03_AM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 5/1/2023 10:03 AM [Changes]" />
+</changelist>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml b/../.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml
new file mode 100644
--- /dev/null	(date 1682453676000)
+++ b/../.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_2.xml	(date 1682453676000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.platform:junit-platform-engine:1.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../e2/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../e2/.idea/workspace.xml b/../e2/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1684386642000)
+++ b/../e2/.idea/workspace.xml	(date 1684386642000)
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="27e3e9ae-acc2-406d-b92a-74820fa9636a" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/../crusader/.idea/compiler.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../crusader/.idea/encodings.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../crusader/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../crusader/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../crusader/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../crusader/StrongholdCrusader.iml" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProjectId" id="2PuoIhebShonCPLkm32U5XCVctJ" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/mi/OneDrive/Desktop/java/graphics/e2&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;
+  }
+}</component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="27e3e9ae-acc2-406d-b92a-74820fa9636a" name="Changes" comment="" />
+      <created>1684316254870</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1684316254870</updated>
+      <workItem from="1684316256050" duration="278000" />
+      <workItem from="1684386627992" duration="15000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	(date 1684998116891)
+++ b/.idea/encodings.xml	(date 1684998116891)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_22_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_22_PM__Changes_.xml b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_22_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1682934847000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_22_PM__Changes_.xml	(date 1682934847000)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_5_1_2023_1_22_PM_[Changes]" date="1682934767102" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_22_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 5/1/2023 1:22 PM [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1684998116884)
+++ b/.idea/jarRepositories.xml	(date 1684998116884)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1684998116906)
+++ b/.idea/.gitignore	(date 1684998116906)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_4_30_2023_7_58_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_4_30_2023_7_58_PM_[Changes]/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Update_at_4_30_2023_7_58_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1682872095000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_4_30_2023_7_58_PM_[Changes]/shelved.patch	(date 1682872095000)
@@ -0,0 +1,1076 @@
+Index: crusader/src/main/java/model/Government.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package model;\r\n\r\nimport controller.gamestructure.GameGoods;\r\nimport model.building.castlebuildings.MainCastle;\r\nimport model.buildinghandler.BuildingCounter;\r\nimport model.buildinghandler.Storage;\r\nimport model.human.Human;\r\nimport model.human.military.Lord;\r\nimport model.human.military.Military;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\npublic class Government {\r\n    private User user;\r\n\r\n    private HashMap<String, Trade> trades = new HashMap<>();\r\n\r\n    private HashMap<String, Trade> newTrades = new HashMap<>();\r\n\r\n    public HashMap<String, Integer> getProperties() {\r\n        return properties;\r\n    }\r\n\r\n    public HashMap<String, Storage> getStorages() {\r\n        return storages;\r\n    }\r\n\r\n    private HashMap<String, Integer> properties = new HashMap<>();\r\n    private HashMap<String, Storage> storages = new HashMap<>();\r\n    private HashMap<String, BuildingCounter> buildings = new HashMap<>();\r\n\r\n    private ArrayList<Military> troops = new ArrayList<>();\r\n    private ArrayList<Human> society = new ArrayList<>();\r\n\r\n    private int foodRate;\r\n\r\n    public HashMap<String, BuildingCounter> getBuildings() {\r\n        return buildings;\r\n    }\r\n\r\n    private int fearRate;\r\n    private int religionRate;\r\n    private int taxRate;\r\n    private int gold;\r\n    private int population, maxPopulation;\r\n    private int castleX, castleY;\r\n    private String color;\r\n    private Lord lord;\r\n\r\n    public Lord getLord() {\r\n        return lord;\r\n    }\r\n\r\n    public void setLord(Lord lord) {\r\n        this.lord = lord;\r\n        ((MainCastle) (this.getBuildings().get(\"MainCastle\").getBuildings().get(0))).setLord(lord);\r\n    }\r\n\r\n    public Government(User user, int castleX, int castleY, String color) {\r\n        this.user = user;\r\n        this.castleX = castleX;\r\n        this.castleY = castleY;\r\n        this.color = color;\r\n    }\r\n\r\n    public void addAmountToProperties(String itemName, String itemType, int amount) {\r\n        this.getProperties().put(itemName, this.getProperties().get(itemName) + amount);\r\n        if (itemType != null) {\r\n            this.getStorages().get(itemType).addAmount(amount);\r\n        }\r\n    }\r\n\r\n\r\n    public ArrayList<Human> getSociety() {\r\n        return society;\r\n    }\r\n\r\n    public void setSociety(ArrayList<Human> society) {\r\n        this.society = society;\r\n    }\r\n\r\n    public int getFoodRate() {\r\n        return foodRate;\r\n    }\r\n\r\n    public void setFoodRate(int foodRate) {\r\n        this.foodRate = foodRate;\r\n    }\r\n\r\n    public int getFearRate() {\r\n        return fearRate;\r\n    }\r\n\r\n    public void setFearRate(int fearRate) {\r\n        this.fearRate = fearRate;\r\n    }\r\n\r\n    public int getReligionRate() {\r\n        return religionRate;\r\n    }\r\n\r\n    public void setReligionRate(int religionRate) {\r\n        this.religionRate = religionRate;\r\n    }\r\n\r\n    public int getTaxRate() {\r\n        return taxRate;\r\n    }\r\n\r\n    public void setTaxRate(int taxRate) {\r\n        this.taxRate = taxRate;\r\n        ((MainCastle) (this.getBuildings().get(\"MainCastle\").getBuildings().get(0))).setTaxRate(taxRate);\r\n    }\r\n\r\n    public void addGold(int amount) {\r\n        this.gold += amount;\r\n    }\r\n\r\n    public int getGold() {\r\n        return gold;\r\n    }\r\n\r\n    public void setGold(int gold) {\r\n        this.gold = gold;\r\n    }\r\n\r\n    public int getPopulation() {\r\n        return population;\r\n    }\r\n\r\n    public void setPopulation(int population) {\r\n        this.population = population;\r\n    }\r\n\r\n    public int getMaxPopulation() {\r\n        return maxPopulation;\r\n    }\r\n\r\n    public void setMaxPopulation(int maxPopulation) {\r\n        this.maxPopulation = maxPopulation;\r\n    }\r\n\r\n    public int getCastleX() {\r\n        return castleX;\r\n    }\r\n\r\n    public void setCastleX(int castleX) {\r\n        this.castleX = castleX;\r\n    }\r\n\r\n    public int getCastleY() {\r\n        return castleY;\r\n    }\r\n\r\n    public void setCastleY(int castleY) {\r\n        this.castleY = castleY;\r\n    }\r\n\r\n    public String getColor() {\r\n        return color;\r\n    }\r\n\r\n    public void setColor(String color) {\r\n        this.color = color;\r\n    }\r\n\r\n    public void changePopulation() {\r\n    }\r\n\r\n    public int getPopularity() {\r\n        return 0;\r\n    }\r\n\r\n    public int getPropertyAmount(String name) {\r\n        return properties.get(name);\r\n    }\r\n\r\n    public User getUser() {\r\n        return user;\r\n    }\r\n\r\n    public HashMap<String, Trade> getTrades() {\r\n        return trades;\r\n    }\r\n\r\n    public HashMap<String, Trade> getNewTrades() {\r\n        return newTrades;\r\n    }\r\n\r\n    public ArrayList<Military> getTroops() {\r\n        return troops;\r\n    }\r\n\r\n    public void addTrade(Trade trade) {\r\n        trades.put(trade.getId(), trade);\r\n        newTrades.put(trade.getId(), trade);\r\n    }\r\n\r\n    public void clearTradeCash() {\r\n        newTrades.clear();\r\n    }\r\n\r\n    public int getPopularityOfReligion() {\r\n        int countOfBuilding = 0;\r\n        countOfBuilding += buildings.get(\"cathedral\").getNumber();\r\n        countOfBuilding += buildings.get(\"church\").getNumber();\r\n        return countOfBuilding * 2;\r\n    }\r\n\r\n    public int getPopularityOfAleCoverage(){\r\n        int countOfBuilding = buildings.get(\"inn\").getNumber();\r\n        double coverage = Math.min(countOfBuilding * 5 / population,1);\r\n        return (int)Math.ceil(coverage * 3);\r\n\r\n    }\r\n\r\n    public int getVarietyOfFood(){\r\n        int var = 0;\r\n        for (String food : GameGoods.foods.keySet()){\r\n            if(getPropertyAmount(food) != 0){\r\n                var++;\r\n            }\r\n        }\r\n        if(var == 0){\r\n            foodRate = -2;\r\n            return 1;\r\n        }\r\n        return var;\r\n    }\r\n\r\n    public void addMilitary(Military military){\r\n        troops.add(military);\r\n    }\r\n\r\n    public BuildingCounter getBuildingData(String name){\r\n        return buildings.get(name);\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/model/Government.java b/crusader/src/main/java/model/Government.java
+--- a/crusader/src/main/java/model/Government.java	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/crusader/src/main/java/model/Government.java	(date 1682866143929)
+@@ -5,6 +5,7 @@
+ import model.buildinghandler.BuildingCounter;
+ import model.buildinghandler.Storage;
+ import model.human.Human;
++import model.human.civilian.Civilian;
+ import model.human.military.Lord;
+ import model.human.military.Military;
+ 
+@@ -236,4 +237,16 @@
+     public BuildingCounter getBuildingData(String name){
+         return buildings.get(name);
+     }
++
++    public void removeMilitary(Military military){
++        troops.remove(military);
++    }
++
++    public void addHuman(Civilian civilian){
++        society.add(civilian);
++    }
++
++    public void removeHuman(Civilian civilian){
++        society.remove(civilian);
++    }
+ }
+Index: crusader/src/main/java/model/activity/Move.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package model.activity;\r\n\r\nimport model.human.military.Military;\r\n\r\npublic class Move {\r\n    private int startX;\r\n    private int startY;\r\n    private int endX;\r\n    private int endY;\r\n    private boolean isDestinationConstant;\r\n    private String moveState;\r\n\r\n    Military enemy;\r\n\r\n    public Move(int startX, int startY, int endX, int endY, boolean isDestinationConstant) {\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.endX = endX;\r\n        this.endY = endY;\r\n        this.isDestinationConstant = isDestinationConstant;\r\n    }\r\n    public Move(int startX, int startY, Military enemy, boolean isDestinationConstant) {\r\n        this.startX = startX;\r\n        this.startY = startY;\r\n        this.enemy = enemy;\r\n        this.isDestinationConstant = isDestinationConstant;\r\n    }\r\n\r\n    public int getStartX() {\r\n        return startX;\r\n    }\r\n\r\n    public void setStartX(int startX) {\r\n        this.startX = startX;\r\n    }\r\n\r\n    public int getStartY() {\r\n        return startY;\r\n    }\r\n\r\n    public void setStartY(int startY) {\r\n        this.startY = startY;\r\n    }\r\n\r\n    public int getEndX() {\r\n        return endX;\r\n    }\r\n\r\n    public void setEndX(int endX) {\r\n        this.endX = endX;\r\n    }\r\n\r\n    public int getEndY() {\r\n        return endY;\r\n    }\r\n\r\n    public void setEndY(int endY) {\r\n        this.endY = endY;\r\n    }\r\n\r\n    public boolean isDestinationConstant() {\r\n        return isDestinationConstant;\r\n    }\r\n\r\n    public void setDestinationConstant(boolean destinationConstant) {\r\n        isDestinationConstant = destinationConstant;\r\n    }\r\n\r\n    public Military getEnemy() {\r\n        return enemy;\r\n    }\r\n\r\n    public void setEnemy(Military enemy) {\r\n        this.enemy = enemy;\r\n    }\r\n    public String getMoveState() {\r\n        return moveState;\r\n    }\r\n\r\n    public void setMoveState(String moveState) {\r\n        this.moveState = moveState;\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/model/activity/Move.java b/crusader/src/main/java/model/activity/Move.java
+--- a/crusader/src/main/java/model/activity/Move.java	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/crusader/src/main/java/model/activity/Move.java	(date 1682867576724)
+@@ -1,61 +1,81 @@
+ package model.activity;
+ 
++import controller.GameController;
++import controller.HumanController;
++import controller.MapController;
++import enumeration.MoveStates;
++import javafx.util.Pair;
++import model.game.Map;
++import model.game.Tile;
++import model.human.Human;
++import model.human.civilian.Civilian;
+ import model.human.military.Military;
+ 
++import java.util.Collections;
++import java.util.LinkedList;
++import java.util.Objects;
++
+ public class Move {
+-    private int startX;
+-    private int startY;
+-    private int endX;
+-    private int endY;
++    private Pair<Integer, Integer> startPair;
++    private Pair<Integer, Integer> endPair;
++
+     private boolean isDestinationConstant;
++    Human human;
++
++
++    private boolean isPatrol = false;
+     private String moveState;
++    private LinkedList<Pair<Integer, Integer>> path;
+ 
++    int indexOfPath = 0;
+     Military enemy;
+ 
+-    public Move(int startX, int startY, int endX, int endY, boolean isDestinationConstant) {
+-        this.startX = startX;
+-        this.startY = startY;
+-        this.endX = endX;
+-        this.endY = endY;
++    public Move(int startX, int startY, Pair<Integer, Integer> endPair, boolean isDestinationConstant, Human human) {
++        this.startPair = new Pair<>(startY, startX);
++        this.endPair = endPair;
+         this.isDestinationConstant = isDestinationConstant;
++        this.human = human;
++        path = HumanController.getPath(startPair, endPair, human);
++        setMoveState();
+     }
+-    public Move(int startX, int startY, Military enemy, boolean isDestinationConstant) {
+-        this.startX = startX;
+-        this.startY = startY;
++
++    public Move(int startX, int startY, Military enemy, boolean isDestinationConstant, Human human) {
++        this.startPair = new Pair<>(startY, startX);
++        this.endPair = new Pair<>(enemy.getY(), enemy.getX());
+         this.enemy = enemy;
+         this.isDestinationConstant = isDestinationConstant;
++        this.human = human;
++        path = HumanController.getPath(startPair, endPair, human);
++        setMoveState();
+     }
+ 
+     public int getStartX() {
+-        return startX;
+-    }
+-
+-    public void setStartX(int startX) {
+-        this.startX = startX;
++        return startPair.getValue();
+     }
+ 
+     public int getStartY() {
+-        return startY;
+-    }
+-
+-    public void setStartY(int startY) {
+-        this.startY = startY;
++        return startPair.getKey();
+     }
+ 
+     public int getEndX() {
+-        return endX;
++        return endPair.getValue();
+     }
+ 
+-    public void setEndX(int endX) {
+-        this.endX = endX;
+-    }
+ 
+     public int getEndY() {
+-        return endY;
++        return endPair.getKey();
++    }
++
++    public Pair<Integer, Integer> getStartPair() {
++        return startPair;
++    }
++
++    public Pair<Integer, Integer> getEndPair() {
++        return endPair;
+     }
+ 
+-    public void setEndY(int endY) {
+-        this.endY = endY;
++    public LinkedList<Pair<Integer, Integer>> getPath() {
++        return path;
+     }
+ 
+     public boolean isDestinationConstant() {
+@@ -73,11 +93,125 @@
+     public void setEnemy(Military enemy) {
+         this.enemy = enemy;
+     }
++
+     public String getMoveState() {
+         return moveState;
+     }
+ 
++    public void setMoveState() {
++        if (path == null) {
++            moveState = MoveStates.STOP.getState();
++            return;
++        }
++        moveState = MoveStates.MOVING.getState();
++    }
++
+     public void setMoveState(String moveState) {
+         this.moveState = moveState;
+     }
++
++    public void setStartPair(Pair<Integer, Integer> startPair) {
++        this.startPair = startPair;
++    }
++
++    public void setEndPair(Pair<Integer, Integer> endPair) {
++        this.endPair = endPair;
++    }
++
++    public int getIndexOfPath() {
++        return indexOfPath;
++    }
++
++    public void setIndexOfPath(int indexOfPath) {
++        this.indexOfPath = indexOfPath;
++    }
++
++    public boolean isPatrol() {
++        return isPatrol;
++    }
++
++    public void setPatrol(boolean patrol) {
++        isPatrol = patrol;
++    }
++
++    public boolean checkIsPathValid() {
++        Map map = GameController.getGame().getMap();
++        for (int i = indexOfPath; i < indexOfPath + human.getSpeed() + 1; i++) {
++            Pair<Integer, Integer> pair = path.get(i);
++            Tile tile = map.getTile(pair.getValue(), pair.getKey());
++            if (!tile.isPassable(human)) {
++                return false;
++            }
++        }
++        return true;
++    }
++
++    public boolean checkDestination() {
++        if (!isDestinationConstant) {
++            if (endPair.getValue() != enemy.getX() && endPair.getKey() != enemy.getY()) {
++                endPair = new Pair<>(enemy.getY(), enemy.getX());
++                return true;
++            }
++        }
++        Pair<Integer,Integer> lastPair = path.getLast();
++        if (!Objects.equals(endPair.getValue(), lastPair.getValue()) && !Objects.equals(endPair.getKey(), lastPair.getKey())) {
++            endPair = new Pair<>(enemy.getY(), enemy.getX());
++            return true;
++        }
++        return false;
++    }
++
++    public void moveOneTurn() {
++        if(moveState.equals(MoveStates.STOP.getState())){
++            return;
++        }
++        checkDestination();
++        if (checkDestination() || !checkIsPathValid()) {
++            updatePath();
++        }
++        if (MoveStates.MOVING.getState().equals(moveState) || MoveStates.PATROL.getState().equals(moveState)) {
++            if (indexOfPath + human.getSpeed() < path.size() - 1) {
++                Pair<Integer, Integer> pair = path.get(indexOfPath + human.getSpeed());
++                indexOfPath += human.getSpeed();
++                if (human instanceof Military) {
++                    MapController.moveMilitary(pair.getValue(), pair.getKey(), (Military) human);
++                } else {
++                    MapController.moveHuman(pair.getValue(), pair.getKey(), (Civilian) human);
++                }
++                return;
++            }
++        }
++
++        if (MoveStates.MOVING.getState().equals(moveState)) {
++            indexOfPath = 0;
++            if (human instanceof Military) {
++                MapController.moveMilitary(endPair.getValue(), endPair.getKey(), (Military) human);
++            } else {
++                MapController.moveHuman(endPair.getValue(), endPair.getKey(), (Civilian) human);
++            }
++            moveState = MoveStates.STOP.getState();
++        }
++
++        if (MoveStates.PATROL.getState().equals(moveState)) {
++            indexOfPath = 0;
++            if (human instanceof Military) {
++                MapController.moveMilitary(endPair.getValue(), endPair.getKey(), (Military) human);
++            } else {
++                MapController.moveHuman(endPair.getValue(), endPair.getKey(), (Civilian) human);
++            }
++            Collections.reverse(path);
++            Pair<Integer, Integer> temp = new Pair<>(endPair.getKey(), endPair.getValue());
++            endPair = new Pair<>(startPair.getKey(), startPair.getValue());
++            startPair = new Pair<>(temp.getKey(), temp.getValue());
++        }
++    }
++
++    public void updatePath() {
++        Pair<Integer, Integer> startPair = new Pair<>(human.getX(), human.getY());
++        path = HumanController.getPath(startPair, endPair, human);
++        indexOfPath = 0;
++        if (path == null) {
++            moveState = MoveStates.STOP.getState();
++        }
++    }
+ }
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"48940bc5-fa6d-4a81-b88a-cb236d4b61a3\" name=\"Changes\" comment=\"Building menu updated&#10;and some enums edited.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/crusader/files/user/currentUser.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/crusader/files/user/currentUser.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/crusader/files/user/users.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/crusader/files/user/users.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/crusader/src/main/java/controller/BuildingController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/crusader/src/main/java/controller/BuildingController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/crusader/src/main/java/controller/GameController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/crusader/src/main/java/controller/GameController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/crusader/src/main/java/enumeration/Paths.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/crusader/src/main/java/enumeration/Paths.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/crusader/src/main/java/model/human/Human.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/crusader/src/main/java/model/human/Human.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/crusader/src/main/java/view/BuildingMenu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/crusader/src/main/java/view/BuildingMenu.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"MitraGh\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OeZJGtSER9mrxhoyWb8D0vXmSP\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Sharif/Term2/AP/Project/Project-Phase-1&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"model\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\test\\java\\controller\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\main\\java\" />\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\test\\java\\menu\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"StrongholdCrusader\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.changeEmailTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"changeEmailTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.isStrongPasswordTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"isStrongPasswordTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.removeSloganTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"removeSloganTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.changeEmailTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.removeSloganTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.isStrongPasswordTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"48940bc5-fa6d-4a81-b88a-cb236d4b61a3\" name=\"Changes\" comment=\"\" />\r\n      <created>1681922938440</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681922938440</updated>\r\n      <workItem from=\"1681922940573\" duration=\"1143000\" />\r\n      <workItem from=\"1681937070375\" duration=\"893000\" />\r\n      <workItem from=\"1681941196344\" duration=\"7452000\" />\r\n      <workItem from=\"1681984358797\" duration=\"16524000\" />\r\n      <workItem from=\"1682023951191\" duration=\"511000\" />\r\n      <workItem from=\"1682056344653\" duration=\"7886000\" />\r\n      <workItem from=\"1682067403104\" duration=\"102000\" />\r\n      <workItem from=\"1682073593485\" duration=\"1034000\" />\r\n      <workItem from=\"1682087981704\" duration=\"15062000\" />\r\n      <workItem from=\"1682116199375\" duration=\"2705000\" />\r\n      <workItem from=\"1682149028155\" duration=\"14217000\" />\r\n      <workItem from=\"1682174575839\" duration=\"72000\" />\r\n      <workItem from=\"1682174654488\" duration=\"103000\" />\r\n      <workItem from=\"1682174764146\" duration=\"99000\" />\r\n      <workItem from=\"1682180160196\" duration=\"2544000\" />\r\n      <workItem from=\"1682202541014\" duration=\"27766000\" />\r\n      <workItem from=\"1682333857238\" duration=\"49000\" />\r\n      <workItem from=\"1682334932839\" duration=\"1014000\" />\r\n      <workItem from=\"1682353770879\" duration=\"1777000\" />\r\n      <workItem from=\"1682371298142\" duration=\"130000\" />\r\n      <workItem from=\"1682411331249\" duration=\"72000\" />\r\n      <workItem from=\"1682438061345\" duration=\"1337000\" />\r\n      <workItem from=\"1682442721294\" duration=\"9814000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"...\">\r\n      <created>1681925358549</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681925358549</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"some tests added.\">\r\n      <created>1681944373098</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681944373098</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"some enums are edited.\">\r\n      <created>1681995637116</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681995637116</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Resources added.\">\r\n      <created>1681999798822</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681999798822</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Foods\">\r\n      <created>1682000666231</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682000666231</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Foods are added.\">\r\n      <created>1682001101623</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682001101623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Humans are added.\">\r\n      <created>1682001707158</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682001707158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Humans are added. (final)\">\r\n      <created>1682002807377</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682002807377</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"stay logged in.\">\r\n      <created>1682021001755</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682021001755</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Storage and producer buildings...\">\r\n      <created>1682062460681</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682062460681</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Texture passable conditions ...\">\r\n      <created>1682063924968</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682063924968</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Main castle added.\">\r\n      <created>1682103062158</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682103062158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Walls, Draw bridge and gatehouses are added.\">\r\n      <created>1682115730401</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682115730401</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Towers added.\">\r\n      <created>1682165652089</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682165652089</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"castle buildings changed.\">\r\n      <created>1682168093012</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682168093012</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"castle buildings final change.\">\r\n      <created>1682172406877</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682172406877</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"method convertPasswordToHash() edited.\">\r\n      <created>1682189114122</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682189114122</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"a bug solved.\">\r\n      <created>1682237172223</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682237172223</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Building menu and Buildings dictionary. (first try)\">\r\n      <created>1682255351548</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682255351548</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Building menu (second try)\">\r\n      <created>1682289033211</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682289033211</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Building menu (second try)\">\r\n      <created>1682289065083</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682289065083</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"a commit to solve a problem.\">\r\n      <created>1682353891980</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682353891980</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"building menu edited.\">\r\n      <created>1682354296419</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682354296419</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"adding tree to Tile class\">\r\n      <created>1682439002928</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682439002928</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"just commit\">\r\n      <created>1682447586540</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682447586540</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Building menu updated&#10;and some enums edited.\">\r\n      <created>1682451476656</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682451476656</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"27\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"some tests added.\" />\r\n    <MESSAGE value=\"some enums are edited.\" />\r\n    <MESSAGE value=\"Resources added.\" />\r\n    <MESSAGE value=\"Foods\" />\r\n    <MESSAGE value=\"Foods are added.\" />\r\n    <MESSAGE value=\"Humans are added.\" />\r\n    <MESSAGE value=\"Humans are added. (final)\" />\r\n    <MESSAGE value=\"stay logged in.\" />\r\n    <MESSAGE value=\"Storage and producer buildings...\" />\r\n    <MESSAGE value=\"Texture passable conditions ...\" />\r\n    <MESSAGE value=\"Main castle added.\" />\r\n    <MESSAGE value=\"Walls, Draw bridge and gatehouses are added.\" />\r\n    <MESSAGE value=\"Towers added.\" />\r\n    <MESSAGE value=\"castle buildings changed.\" />\r\n    <MESSAGE value=\"castle buildings final change.\" />\r\n    <MESSAGE value=\"method convertPasswordToHash() edited.\" />\r\n    <MESSAGE value=\"a bug solved.\" />\r\n    <MESSAGE value=\"Building menu and Buildings dictionary. (first try)\" />\r\n    <MESSAGE value=\"Building menu (second try)\" />\r\n    <MESSAGE value=\"a commit to sove a problem.\" />\r\n    <MESSAGE value=\"a commit to solve a problem.\" />\r\n    <MESSAGE value=\"building menu edited.\" />\r\n    <MESSAGE value=\"adding tree to Tile class\" />\r\n    <MESSAGE value=\"just commit\" />\r\n    <MESSAGE value=\"Building menu updated&#10;and some enums edited.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Building menu updated&#10;and some enums edited.\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Project_Phase_1$UserControllerTest.ic\" NAME=\"UserControllerTest Coverage Results\" MODIFIED=\"1681942420279\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>controller.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic\" NAME=\"UserControllerTest.changeEmailTest Coverage Results\" MODIFIED=\"1681944150811\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>controller.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/.idea/workspace.xml	(date 1682872092396)
+@@ -4,15 +4,22 @@
+     <option name="autoReloadType" value="SELECTIVE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="48940bc5-fa6d-4a81-b88a-cb236d4b61a3" name="Changes" comment="Building menu updated&#10;and some enums edited.">
++    <list default="true" id="48940bc5-fa6d-4a81-b88a-cb236d4b61a3" name="Changes" comment="push problem test">
++      <change afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/HumanController.java" afterDir="false" />
++      <change afterPath="$PROJECT_DIR$/crusader/src/main/java/enumeration/MoveStates.java" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/crusader/files/user/currentUser.json" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/files/user/currentUser.json" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/crusader/files/user/users.json" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/files/user/users.json" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/BuildingController.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/BuildingController.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/pom.xml" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/GameController.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/GameController.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/enumeration/Paths.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/enumeration/Paths.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/MapController.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/MapController.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/model/Government.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/model/Government.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/model/activity/Move.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/model/activity/Move.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/model/building/producerbuildings/Barrack.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/model/building/producerbuildings/Barrack.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/model/game/Tile.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/model/game/Tile.java" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/crusader/src/main/java/model/human/Human.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/model/human/Human.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/view/BuildingMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/view/BuildingMenu.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/model/human/military/Military.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/model/human/military/Military.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/view/GameMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/view/GameMenu.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/view/TradeMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/view/TradeMenu.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/view/UnitMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/view/UnitMenu.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -23,6 +30,7 @@
+     <option name="RECENT_TEMPLATES">
+       <list>
+         <option value="Class" />
++        <option value="Enum" />
+       </list>
+     </option>
+   </component>
+@@ -52,16 +60,17 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent">{
+-  &quot;keyToString&quot;: {
+-    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+-    &quot;last_opened_file_path&quot;: &quot;D:/Sharif/Term2/AP/Project/Project-Phase-1&quot;,
+-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;
++  <component name="PropertiesComponent"><![CDATA[{
++  "keyToString": {
++    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
++    "RunOnceActivity.OpenProjectViewOnStart": "true",
++    "RunOnceActivity.ShowReadmeOnStart": "true",
++    "WebServerToolWindowFactoryState": "false",
++    "last_opened_file_path": "C:/Users/mi/OneDrive/Desktop/crusader/project-group-09",
++    "nodejs_package_manager_path": "npm",
++    "settings.editor.selected.configurable": "vcs.Git"
+   }
+-}</component>
++}]]></component>
+   <component name="RecentsManager">
+     <key name="CreateClassDialog.RecentsKey">
+       <recent name="model" />
+@@ -186,6 +195,10 @@
+       <workItem from="1682411331249" duration="72000" />
+       <workItem from="1682438061345" duration="1337000" />
+       <workItem from="1682442721294" duration="9814000" />
++      <workItem from="1682453509908" duration="933000" />
++      <workItem from="1682785970013" duration="47000" />
++      <workItem from="1682790385334" duration="623000" />
++      <workItem from="1682842875747" duration="17467000" />
+     </task>
+     <task id="LOCAL-00001" summary="...">
+       <created>1681925358549</created>
+@@ -369,7 +382,14 @@
+       <option name="project" value="LOCAL" />
+       <updated>1682451476656</updated>
+     </task>
+-    <option name="localTasksCounter" value="27" />
++    <task id="LOCAL-00027" summary="push problem test">
++      <created>1682453836707</created>
++      <option name="number" value="00027" />
++      <option name="presentableId" value="LOCAL-00027" />
++      <option name="project" value="LOCAL" />
++      <updated>1682453836707</updated>
++    </task>
++    <option name="localTasksCounter" value="28" />
+     <servers />
+   </component>
+   <component name="TypeScriptGeneratedFilesManager">
+@@ -380,14 +400,40 @@
+       <map>
+         <entry key="MAIN">
+           <value>
+-            <State />
++            <State>
++              <option name="FILTERS">
++                <map>
++                  <entry key="user">
++                    <value>
++                      <list>
++                        <option value="*" />
++                      </list>
++                    </value>
++                  </entry>
++                </map>
++              </option>
++            </State>
++          </value>
++        </entry>
++      </map>
++    </option>
++    <option name="RECENT_FILTERS">
++      <map>
++        <entry key="User">
++          <value>
++            <list>
++              <RecentGroup>
++                <option name="FILTER_VALUES">
++                  <option value="*" />
++                </option>
++              </RecentGroup>
++            </list>
+           </value>
+         </entry>
+       </map>
+     </option>
+   </component>
+   <component name="VcsManagerConfiguration">
+-    <MESSAGE value="some tests added." />
+     <MESSAGE value="some enums are edited." />
+     <MESSAGE value="Resources added." />
+     <MESSAGE value="Foods" />
+@@ -412,13 +458,14 @@
+     <MESSAGE value="adding tree to Tile class" />
+     <MESSAGE value="just commit" />
+     <MESSAGE value="Building menu updated&#10;and some enums edited." />
+-    <option name="LAST_COMMIT_MESSAGE" value="Building menu updated&#10;and some enums edited." />
++    <MESSAGE value="push problem test" />
++    <option name="LAST_COMMIT_MESSAGE" value="push problem test" />
+   </component>
+   <component name="com.intellij.coverage.CoverageDataManagerImpl">
+-    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest.ic" NAME="UserControllerTest Coverage Results" MODIFIED="1681942420279" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
++    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic" NAME="UserControllerTest.changeEmailTest Coverage Results" MODIFIED="1681944150811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+       <FILTER>controller.*</FILTER>
+     </SUITE>
+-    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic" NAME="UserControllerTest.changeEmailTest Coverage Results" MODIFIED="1681944150811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
++    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest.ic" NAME="UserControllerTest Coverage Results" MODIFIED="1681942420279" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+       <FILTER>controller.*</FILTER>
+     </SUITE>
+   </component>
+Index: crusader/src/main/java/model/building/producerbuildings/Barrack.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package model.building.producerbuildings;\r\n\r\n\r\nimport controller.GovernmentController;\r\nimport controller.MapController;\r\nimport controller.gamestructure.GameHumans;\r\n\r\nimport model.Government;\r\nimport model.building.Building;\r\nimport model.human.military.EuropeanTroop;\r\nimport model.human.military.Military;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\nimport java.util.Random;\r\n\r\npublic class Barrack extends Building{\r\n\r\n    private final ArrayList<String> units = new ArrayList<>();\r\n\r\n\r\n    public Barrack(int numberOfRequiredWorkers, int numberOfRequiredEngineers, String name, int maxHp, int width, int length) {\r\n        super(numberOfRequiredWorkers,numberOfRequiredEngineers, name,maxHp, width, length);\r\n        this.changeShouldBeOne();\r\n        this.setBuildingImpassableLength(4);\r\n    }\r\n\r\n    public ArrayList<String> getUnits() {\r\n        return units;\r\n    }\r\n\r\n    public void addUnit(String unit){\r\n        units.add(unit);\r\n    }\r\n\r\n    public Military makeUnit(String name){\r\n        try {\r\n            consumeRequired(name);\r\n            int[] coordinate = makePositionOfUnit();\r\n            int x = coordinate[0];\r\n            int y = coordinate[1];\r\n            if(!checkRequired(name)){\r\n                return null;\r\n            }\r\n            Military military = Objects.requireNonNull(GameHumans.getUnit(name, this.getGovernment(), x, y)).clone();\r\n            MapController.dropMilitary(x,y,military);\r\n            this.getGovernment().addMilitary(military);\r\n            return military;\r\n        }catch (CloneNotSupportedException e){\r\n            System.out.println(\"An error occurred.[make unit]\");\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    public boolean checkRequired(String name){\r\n        Military military = GameHumans.getUnit(name);\r\n        int price = military.getPrice();\r\n\r\n        if (price > this.getGovernment().getGold()){\r\n            return false;\r\n        }\r\n        if(military instanceof EuropeanTroop troop){\r\n            for (String armour : troop.getArmours()){\r\n                Government government = this.getGovernment();\r\n                if(government.getPropertyAmount(armour)  == 0){\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public boolean checkGold(String name){\r\n        Military military = GameHumans.getUnit(name);\r\n        int price = military.getPrice();\r\n\r\n        if (price > this.getGovernment().getGold()){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    public boolean consumeRequired(String name){\r\n        Military military = GameHumans.getUnit(name);\r\n        int price = military.getPrice();\r\n        if (price > this.getGovernment().getGold()){\r\n            return false;\r\n        }\r\n        if(military instanceof EuropeanTroop troop){\r\n            for (String armour : troop.getArmours()){\r\n                Government government = this.getGovernment();\r\n                if(government.getPropertyAmount(armour)  == 0){\r\n                    GovernmentController.consumeProduct(this.getGovernment(),armour,1);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.getGovernment().addGold(-price);\r\n        return true;\r\n    }\r\n\r\n    public int[] makePositionOfUnit(){\r\n        Random random = new Random();\r\n        int x = random.nextInt(this.getWidth());\r\n        int y = random.nextInt(this.getLength());\r\n        while (x < this.getBuildingImpassableLength() && y < this.getBuildingImpassableLength()){\r\n            x = random.nextInt(this.getWidth());\r\n            y = random.nextInt(this.getLength());\r\n        }\r\n        return new int[]{x,y};\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/model/building/producerbuildings/Barrack.java b/crusader/src/main/java/model/building/producerbuildings/Barrack.java
+--- a/crusader/src/main/java/model/building/producerbuildings/Barrack.java	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/crusader/src/main/java/model/building/producerbuildings/Barrack.java	(date 1682866143957)
+@@ -43,8 +43,7 @@
+                 return null;
+             }
+             Military military = Objects.requireNonNull(GameHumans.getUnit(name, this.getGovernment(), x, y)).clone();
+-            MapController.dropMilitary(x,y,military);
+-            this.getGovernment().addMilitary(military);
++            MapController.addMilitary(x,y,military);
+             return military;
+         }catch (CloneNotSupportedException e){
+             System.out.println("An error occurred.[make unit]");
+Index: crusader/src/main/java/controller/MapController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package controller;\r\n\r\nimport controller.gamestructure.GameBuildings;\r\nimport controller.gamestructure.GameHumans;\r\nimport enumeration.Textures;\r\nimport enumeration.dictionary.RockDirections;\r\nimport enumeration.dictionary.Trees;\r\nimport model.Government;\r\nimport model.building.Building;\r\nimport model.building.castlebuildings.CastleBuilding;\r\nimport model.building.castlebuildings.Wall;\r\nimport model.building.storagebuildings.StorageBuilding;\r\nimport model.buildinghandler.BuildingCounter;\r\nimport model.game.Map;\r\nimport model.game.Tile;\r\nimport model.human.military.Military;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\npublic class MapController {\r\n\r\n    private static Map map;\r\n\r\n    public static String setTexture(int x, int y, Textures type) {\r\n        GameController.getGame().getMap().getTile(x, y).setTexture(type);\r\n        return \"texture of tile (\" + x + \", \" + y + \") changed to \" + type.getTextureName() + \" successfully\";\r\n    }\r\n\r\n    public static String clearTile(int x, int y) {\r\n        Tile tile = GameController.getGame().getMap().getTile(x, y);\r\n        tile.clearCivilian();\r\n        tile.clearMilitary();\r\n        tile.setTexture(Textures.EARTH);\r\n        if (tile.getBuilding() != null) {\r\n            Building building = tile.getBuilding();\r\n            deleteBuilding(building);\r\n        }\r\n\r\n        return \"tile (\" + x + \", \" + y + \") cleared successfully\";\r\n    }\r\n\r\n    public static String dropRock(int x, int y, RockDirections direction) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String dropTree(int x, int y, Trees tree) {\r\n        return \"\";\r\n    }\r\n\r\n\r\n    public static boolean checkCanPutBuilding(int x, int y, String type, Government government) {\r\n        Building building = GameBuildings.getBuilding(type, government, x, y);\r\n        if (building == null) {\r\n            return false;\r\n        }\r\n\r\n        if (x + building.getWidth() >= map.getWidth()) {\r\n            return false;\r\n        }\r\n        if (y + building.getLength() >= map.getLength()) {\r\n            return false;\r\n        }\r\n        if (building instanceof StorageBuilding && !checkCanPutStorage(x, y, (StorageBuilding) building)) {\r\n            return false;\r\n        }\r\n        for (int i = y - 1; i < y + building.getLength(); i++) {\r\n            for (int j = x - 1; j < x + building.getWidth(); j++) {\r\n                if (building instanceof CastleBuilding) {\r\n                    if (!canPutCastleBuilding(x, y, (CastleBuilding) building)) {\r\n                        return false;\r\n                    }\r\n                } else if (!map.getTile(i, j).getCanPutBuilding()) {\r\n                    return false;\r\n                }\r\n                if (building.getHasSpecialTexture()) {\r\n                    if (!building.getSuitableTextures().contains(map.getTile(i, j).getTexture())) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static void dropBuilding(int x, int y, String type, Government government) {\r\n        Building building = GameBuildings.getBuilding(type, government, x, y);\r\n        for (int i = y - 1; i < y + Objects.requireNonNull(building).getLength(); i++) {\r\n            for (int j = x - 1; j < x + building.getWidth(); j++) {\r\n                Tile tile = map.getTile(j, i);\r\n                tile.setCanPutBuilding(false);\r\n                Textures textures = Textures.EARTH_AND_SAND;\r\n                if (building.getHasSpecialTexture()) {\r\n                    textures = building.getSuitableTextures().get(0);\r\n                }\r\n                tile.setBuilding(building);\r\n                if (building.getBuildingImpassableLength() != -1) {\r\n                    if (i >= building.getBuildingImpassableLength() || j >= building.getBuildingImpassableLength()) {\r\n                        tile.setPassable(true);\r\n                    } else {\r\n                        tile.setPassable(false);\r\n                        tile.setTexture(textures);\r\n                    }\r\n                } else {\r\n                    tile.setPassable(false);\r\n                    tile.setTexture(textures);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static ArrayList<Military> getMilitariesOfGovernment(int x, int y, Government government) {\r\n        ArrayList<Military> militaries = new ArrayList<>();\r\n        Tile tile = map.getTile(x, y);\r\n        for (Military military : tile.getMilitaries()) {\r\n            if (military.getGovernment().getColor().equals(government.getColor())) {\r\n                militaries.add(military);\r\n            }\r\n        }\r\n        return militaries;\r\n    }\r\n\r\n    public static boolean checkCanPutMilitary(int x, int y, String type, Government government) {\r\n        Military military = GameHumans.getUnit(type, government, x, y);\r\n        Tile tile = map.getTile(x - 1, y - 1);\r\n        return tile.isPassable();\r\n    }\r\n\r\n    public static void dropMilitary(int x, int y, String type, Government government) {\r\n        Military military = GameHumans.getUnit(type, government, x, y);\r\n        Tile tile = map.getTile(x - 1, y - 1);\r\n        government.addMilitary(military);\r\n        tile.addMilitary(military);\r\n    }\r\n\r\n    public static void dropMilitary(int x, int y, Military military) {\r\n        Tile tile = map.getTile(x - 1, y - 1);\r\n        tile.addMilitary(military);\r\n    }\r\n\r\n\r\n    public static boolean checkCanPutStorage(int x, int y, StorageBuilding storageBuilding) {\r\n        int startX = x - 1;\r\n        int startY = y - 1;\r\n        int endX = x + storageBuilding.getWidth() - 1;\r\n        int endY = y + storageBuilding.getLength() - 1;\r\n\r\n\r\n        if (startY != 0) {\r\n            for (int j = startX; j <= endX; j++) {\r\n                Tile tile = map.getTile(j, startY - 1);\r\n                if (tile.getBuilding() != null && tile.getBuilding().getName().equals(storageBuilding.getName())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (startX != 0) {\r\n            for (int i = startY; i <= endY; i++) {\r\n                Tile tile = map.getTile(startX - 1, i);\r\n                if (tile.getBuilding() != null && tile.getBuilding().getName().equals(storageBuilding.getName())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if (endX != map.getWidth() - 1) {\r\n            for (int i = startY; i <= endY; i++) {\r\n                Tile tile = map.getTile(endX + 1, i);\r\n                if (tile.getBuilding() != null && tile.getBuilding().getName().equals(storageBuilding.getName())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (endY != map.getLength() - 1) {\r\n            for (int j = startX; j <= endX; j++) {\r\n                Tile tile = map.getTile(j, endY + 1);\r\n                if (tile.getBuilding() != null && tile.getBuilding().getName().equals(storageBuilding.getName())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static boolean canPutCastleBuilding(int x, int y, CastleBuilding building) {\r\n        Tile tile = map.getTile(x, y);\r\n        if (tile.getCanPutBuilding()) {\r\n            return true;\r\n        } else return tile.getBuilding() instanceof Wall;\r\n    }\r\n\r\n    public static void deleteOtherBuildingWithThisType(Building building) {\r\n        Government government = GameController.getGame().getCurrentGovernment();\r\n        BuildingCounter buildingCounter = government.getBuildingData(building.getName());\r\n        if(buildingCounter.getNumber() == 0){\r\n            return;\r\n        }\r\n\r\n        Building shouldDelete = buildingCounter.getBuildings().get(0);\r\n        buildingCounter.deleteBuilding(shouldDelete);\r\n        deleteBuilding(shouldDelete);\r\n    }\r\n\r\n    public static void deleteBuilding(Building building){\r\n        int xx = building.getStartX();\r\n        int yy = building.getStartY();\r\n        for (int i = yy - 1; i < yy + building.getLength(); i++) {\r\n            for (int j = xx - 1; j < xx + building.getWidth(); j++) {\r\n                Tile tileOfBuilding = map.getTile(j,i);\r\n                tileOfBuilding.setCanPutBuilding(true);\r\n                tileOfBuilding.setPassable(true);\r\n                tileOfBuilding.setBuilding(null);\r\n            }\r\n        }\r\n        BuildingCounter buildingCounter = building.getGovernment().getBuildingData(building.getName());\r\n        buildingCounter.deleteBuilding(building);\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/controller/MapController.java b/crusader/src/main/java/controller/MapController.java
+--- a/crusader/src/main/java/controller/MapController.java	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/crusader/src/main/java/controller/MapController.java	(date 1682866143944)
+@@ -13,6 +13,8 @@
+ import model.buildinghandler.BuildingCounter;
+ import model.game.Map;
+ import model.game.Tile;
++import model.human.Human;
++import model.human.civilian.Civilian;
+ import model.human.military.Military;
+ 
+ import java.util.ArrayList;
+@@ -133,12 +135,44 @@
+         tile.addMilitary(military);
+     }
+ 
+-    public static void dropMilitary(int x, int y, Military military) {
+-        Tile tile = map.getTile(x - 1, y - 1);
++    public static void deleteMilitary(int x, int y, Military military) {
++        Tile tile = map.getTile(x, y);
++        military.getGovernment().removeMilitary(military);
++        tile.removeMilitary(military);
++    }
++
++    public static void addMilitary(int x, int y, Military military) {
++        Tile tile = map.getTile(x, y);
++        military.getGovernment().addMilitary(military);
+         tile.addMilitary(military);
+     }
+ 
++    public static void moveMilitary(int x, int y,Military military){
++        deleteMilitary(military.getX(), military.getY(), military);
++        addMilitary(x,y, military);
++        military.setX(x);
++        military.setY(y);
++    }
++
++    public static void deleteHuman(int x, int y, Civilian civilian) {
++        Tile tile = map.getTile(x, y);
++        civilian.getGovernment().removeHuman(civilian);
++        tile.removeHuman(civilian);
++    }
+ 
++    public static void addHuman(int x, int y, Civilian civilian) {
++        Tile tile = map.getTile(x, y);
++        civilian.getGovernment().addHuman(civilian);
++        tile.addHuman(civilian);
++    }
++
++
++    public static void moveHuman(int x, int y, Civilian civilian){
++        deleteHuman(civilian.getX(), civilian.getY(), civilian);
++        addHuman(x,y, civilian);
++        civilian.setX(x);
++        civilian.setY(y);
++    }
+     public static boolean checkCanPutStorage(int x, int y, StorageBuilding storageBuilding) {
+         int startX = x - 1;
+         int startY = y - 1;
+Index: crusader/src/main/java/model/game/Tile.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package model.game;\r\n\r\nimport enumeration.Textures;\r\nimport enumeration.dictionary.RockDirections;\r\nimport enumeration.dictionary.Trees;\r\nimport model.building.Building;\r\nimport model.human.civilian.Civilian;\r\nimport model.human.civilian.Civilian;\r\nimport model.human.military.Military;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Tile {\r\n    public Tile() {\r\n        this.isMoat = false;\r\n        this.isPit = false;\r\n    }\r\n\r\n    private Textures texture = Textures.EARTH;\r\n    private Trees tree;\r\n    private RockDirections rockDirection;\r\n\r\n    public Trees getTree() {\r\n        return tree;\r\n    }\r\n\r\n    public void setTree(Trees tree) {\r\n        this.tree = tree;\r\n    }\r\n\r\n    public boolean isCanPutBuilding() {\r\n        return canPutBuilding;\r\n    }\r\n\r\n    private Building building = null;\r\n    private ArrayList<Civilian> civilians = new ArrayList<>();\r\n\r\n    public ArrayList<Military> getMilitaries() {\r\n        return militaries;\r\n    }\r\n\r\n    public void setMilitaries(ArrayList<Military> militaries) {\r\n        this.militaries = militaries;\r\n    }\r\n\r\n    private ArrayList<Military> militaries = new ArrayList<>();\r\n    private boolean isMoat;\r\n    private boolean isPit;\r\n\r\n    private boolean passable = true;\r\n    private boolean canPutBuilding = true;\r\n\r\n    public ArrayList<Civilian> getCivilians() {\r\n        return civilians;\r\n    }\r\n\r\n    public void setCivilians(ArrayList<Civilian> civilian) {\r\n        this.civilians = civilian;\r\n    }\r\n\r\n    public boolean isPassable() {\r\n        return passable;\r\n    }\r\n\r\n    public void setPassable(boolean passable) {\r\n        this.passable = passable;\r\n    }\r\n\r\n    public boolean getCanPutBuilding() {\r\n        return canPutBuilding;\r\n    }\r\n\r\n    public void setCanPutBuilding(boolean canPutBuilding) {\r\n        this.canPutBuilding = canPutBuilding;\r\n    }\r\n\r\n    public Tile(Textures texture) {\r\n        this.texture = texture;\r\n    }\r\n\r\n    public Textures getTexture() {\r\n        return texture;\r\n    }\r\n\r\n    public void setTexture(Textures texture) {\r\n        if(building == null){\r\n            this.texture = texture;\r\n            passable = texture.isPassable();\r\n            if(!texture.isPassable()){\r\n                civilians.clear();\r\n            }\r\n            canPutBuilding = texture.getCanPutBuilding();\r\n        }\r\n    }\r\n\r\n    public Building getBuilding() {\r\n        return building;\r\n    }\r\n\r\n    public void setBuilding(Building building) {\r\n        this.building = building;\r\n    }\r\n\r\n    public ArrayList<Civilian> getCivilian() {\r\n        return civilians;\r\n    }\r\n\r\n    public void setCivilian(ArrayList<Civilian> human) {\r\n        this.civilians = human;\r\n    }\r\n\r\n    public void addMilitary(Military military){\r\n        militaries.add(military);\r\n    }\r\n\r\n    public boolean isMoat() {\r\n        return isMoat;\r\n    }\r\n\r\n    public void setMoat(boolean moat) {\r\n        isMoat = moat;\r\n    }\r\n\r\n    public boolean isPit() {\r\n        return isPit;\r\n    }\r\n\r\n    public void setPit(boolean pit) {\r\n        isPit = pit;\r\n    }\r\n\r\n    public void clearCivilian(){\r\n        civilians.clear();\r\n    }\r\n\r\n    public void clearMilitary(){\r\n        militaries.clear();\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/model/game/Tile.java b/crusader/src/main/java/model/game/Tile.java
+--- a/crusader/src/main/java/model/game/Tile.java	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/crusader/src/main/java/model/game/Tile.java	(date 1682866143917)
+@@ -4,6 +4,7 @@
+ import enumeration.dictionary.RockDirections;
+ import enumeration.dictionary.Trees;
+ import model.building.Building;
++import model.human.Human;
+ import model.human.civilian.Civilian;
+ import model.human.civilian.Civilian;
+ import model.human.military.Military;
+@@ -57,10 +58,12 @@
+     public void setCivilians(ArrayList<Civilian> civilian) {
+         this.civilians = civilian;
+     }
+-
+     public boolean isPassable() {
+         return passable;
+     }
++    public boolean isPassable(Human human) {
++        return passable;
++    }
+ 
+     public void setPassable(boolean passable) {
+         this.passable = passable;
+@@ -112,6 +115,15 @@
+     public void addMilitary(Military military){
+         militaries.add(military);
+     }
++    public void removeMilitary(Military military){
++        militaries.remove(military);
++    }
++    public void addHuman(Civilian civilian){
++        civilians.add(civilian);
++    }
++    public void removeHuman(Civilian civilian){
++        civilians.remove(civilian);
++    }
+ 
+     public boolean isMoat() {
+         return isMoat;
+Index: crusader/src/main/java/enumeration/MoveStates.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/enumeration/MoveStates.java b/crusader/src/main/java/enumeration/MoveStates.java
+new file mode 100644
+--- /dev/null	(date 1682866143950)
++++ b/crusader/src/main/java/enumeration/MoveStates.java	(date 1682866143950)
+@@ -0,0 +1,18 @@
++package enumeration;
++
++public enum MoveStates {
++    MOVING("moving"),
++    STOP("stop"),
++    PATROL("patrol")
++
++    ;
++    private final String state;
++
++    private MoveStates(String state) {
++        this.state = state;
++    }
++
++    public String getState() {
++        return state;
++    }
++}
+Index: crusader/src/main/java/view/TradeMenu.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package view;\r\n\r\nimport controller.GameController;\r\nimport controller.TradeController;\r\nimport controller.ViewController;\r\nimport enumeration.answers.Answers;\r\nimport enumeration.commands.Commands;\r\nimport enumeration.commands.TradeMenuCommands;\r\nimport model.Government;\r\nimport model.Trade;\r\nimport model.User;\r\nimport model.game.Game;\r\n\r\nimport java.lang.annotation.Target;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\n\r\npublic class TradeMenu {\r\n    public static void run(Scanner scanner) {\r\n        String input, output;\r\n        showNotifications();\r\n        boolean checkTargetGovernment = selectUser(scanner);\r\n        if (checkTargetGovernment){\r\n            Government government = TradeController.getTargetGovernment();\r\n            System.out.println(\"selected government is : \" + government.getUser().getUsername() + \"(\" + government.getColor() + \")\");\r\n        }else {\r\n            System.out.println(\"<< Game Menu >>\");\r\n            return;\r\n        }\r\n\r\n\r\n        while (true) {\r\n            input = scanner.nextLine();\r\n            Matcher tradeMatcher = TradeMenuCommands.getMatcher(input, TradeMenuCommands.TRADE);\r\n            Matcher tradeListMatcher = TradeMenuCommands.getMatcher(input, TradeMenuCommands.TRADE_LIST);\r\n            Matcher tradeHistoryMatcher = TradeMenuCommands.getMatcher(input, TradeMenuCommands.TRADE_HISTORY);\r\n            Matcher tradeAcceptMatcher = TradeMenuCommands.getMatcher(input, TradeMenuCommands.TRADE_ACCEPT);\r\n            Matcher backMatcher = Commands.getMatcher(input, Commands.BACK);\r\n\r\n            if (tradeMatcher.matches()) {\r\n                String items = tradeMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(TradeMenuCommands.TYPE_ITEM.getRegex());\r\n                itemsPattern.add(TradeMenuCommands.AMOUNT_ITEM.getRegex());\r\n                itemsPattern.add(TradeMenuCommands.PRICE_ITEM.getRegex());\r\n                itemsPattern.add(TradeMenuCommands.MESSAGE_ITEM.getRegex());\r\n                if (ViewController.isItemMatch(items, itemsPattern)) {\r\n                    int amount;\r\n                    int price;\r\n                    try{\r\n                        amount= Integer.parseInt(ViewController.resultMatcher.group(\"amount\"));\r\n                    }catch (NumberFormatException e){\r\n                        amount = -1;\r\n                    }\r\n                    try{\r\n                       price = Integer.parseInt(ViewController.resultMatcher.group(\"price\"));\r\n                    }catch (NumberFormatException e){\r\n                        price = -1;\r\n                    }\r\n\r\n                    String type = ViewController.resultMatcher.group(\"type\");\r\n                    type = ViewController.editItem(type);\r\n\r\n                    String message = ViewController.resultMatcher.group(\"message\");\r\n                    message = ViewController.editItem(message);\r\n\r\n                    output = TradeController.tradeGoods(type, amount, price, message);\r\n                    System.out.println(output);\r\n                }\r\n\r\n            } else if (tradeAcceptMatcher.matches()) {\r\n                String items = tradeAcceptMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(TradeMenuCommands.ID_ITEM.getRegex());\r\n                itemsPattern.add(TradeMenuCommands.MESSAGE_ITEM.getRegex());\r\n                if (ViewController.isItemMatch(items, itemsPattern)) {\r\n                    String id = ViewController.resultMatcher.group(\"id\");\r\n                    id = ViewController.editItem(id);\r\n\r\n                    String message = ViewController.resultMatcher.group(\"message\");\r\n                    message = ViewController.editItem(message);\r\n\r\n                    output = TradeController.acceptTrade(id,message);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (tradeHistoryMatcher.matches()) {\r\n                output = TradeController.showTradeHistory();\r\n                System.out.println(output);\r\n            } else if (tradeListMatcher.matches()) {\r\n                output = TradeController.showTradeList();\r\n                System.out.println(output);\r\n            } else if (backMatcher.matches()) {\r\n                System.out.println(\"<< Game Menu >>\");\r\n                break;\r\n            } else {\r\n                System.out.println(Answers.INVALID_COMMAND.getValue());\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void showNotifications() {\r\n        Game game = GameController.getGame();\r\n        Government government = game.getCurrentGovernment();\r\n        HashMap<String, Trade> trades = government.getNewTrades();\r\n        for (String key : trades.keySet()){\r\n            Trade trade = trades.get(key);\r\n            System.out.println(\"notification: id: \"+ key + \", type: \" + trade.getTradeType()  + \", sender: \" +\r\n                    trade.getSender().getUser().getUsername() +\"(\"+ trade.getSender().getColor() + \"), message: \" + trade.getRequestMessage());\r\n        }\r\n        government.clearTradeCash();\r\n    }\r\n\r\n    public static boolean selectUser(Scanner scanner) {\r\n        ArrayList<Government> governments = new ArrayList<>();\r\n        Game game = GameController.getGame();\r\n        for (Government government : game.getGovernments()) {\r\n            if (!government.equals(game.getCurrentGovernment())) {\r\n                governments.add(government);\r\n            }\r\n        }\r\n        while (true) {\r\n            System.out.println(\"To which government do you want to send a trade request?\");\r\n            System.out.println(\"please enter the number\");\r\n            for (int i = 1; i <= governments.size(); i++) {\r\n                Government government = governments.get(i - 1);\r\n                User user = government.getUser();\r\n                String color = government.getColor();\r\n                System.out.println(i + \".\" + user.getUsername() + \"( \" + color + \" )\");\r\n\r\n            }\r\n            String input = scanner.nextLine();\r\n            int num;\r\n\r\n            try {\r\n                num = Integer.parseInt(input);\r\n            } catch (NumberFormatException e) {\r\n                num = -1;\r\n            }\r\n\r\n            if (1 <= num && num <= governments.size()) {\r\n                TradeController.setTargetGovernment(governments.get(num - 1));\r\n                return true;\r\n            }else if (input.equals(Commands.BACK.getRegex())){\r\n                return false;\r\n            }else {\r\n                System.out.println(Answers.INVALID_COMMAND.getValue());\r\n            }\r\n        }\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/view/TradeMenu.java b/crusader/src/main/java/view/TradeMenu.java
+--- a/crusader/src/main/java/view/TradeMenu.java	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/crusader/src/main/java/view/TradeMenu.java	(date 1682843695252)
+@@ -20,6 +20,7 @@
+ public class TradeMenu {
+     public static void run(Scanner scanner) {
+         String input, output;
++        System.out.println("<< Trade Menu >>");
+         showNotifications();
+         boolean checkTargetGovernment = selectUser(scanner);
+         if (checkTargetGovernment){
+Index: crusader/src/main/java/view/UnitMenu.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package view;\r\n\r\nimport controller.EngineerController;\r\nimport controller.GameController;\r\nimport controller.ViewController;\r\nimport enumeration.answers.Answers;\r\nimport enumeration.commands.Commands;\r\nimport enumeration.commands.UnitMenuCommands;\r\nimport model.human.military.Engineer;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\n\r\npublic class UnitMenu {\r\n    public static void run(Scanner scanner) {\r\n\r\n        String input, output;\r\n\r\n        while (true) {\r\n            input = scanner.nextLine();\r\n            Matcher moveUnitMenuMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.MOVE_UNIT);\r\n            Matcher patrolUnitMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.PATROL_UNIT);\r\n            Matcher setUnitStateMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.SET_UNIT_STATE);\r\n            Matcher attackMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.ATTACK);\r\n            Matcher pourOilMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.POUR_OIL);\r\n            Matcher digTunnelMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.DIG_TUNNEL);\r\n            Matcher buildMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.BUILD);\r\n            Matcher digMoatMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.DIG_MOAT);\r\n            Matcher disbandUnitMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.DISBAND_UNIT);\r\n            Matcher backMatcher = Commands.getMatcher(input, Commands.BACK);\r\n\r\n\r\n            if (moveUnitMenuMatcher.matches()) {\r\n                String items = moveUnitMenuMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(UnitMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.Y_ITEM.getRegex());\r\n                if (ViewController.isItemMatch(items, itemsPattern)) {\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    output = GameController.moveUnit(x, y);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (patrolUnitMatcher.matches()) {\r\n                String items = patrolUnitMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(UnitMenuCommands.X1_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.Y1_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.X2_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.Y2_ITEM.getRegex());\r\n                if (ViewController.isItemMatch(items, itemsPattern)) {\r\n                    int x1 = Integer.parseInt(ViewController.resultMatcher.group(\"x1\"));\r\n                    int y1 = Integer.parseInt(ViewController.resultMatcher.group(\"y1\"));\r\n                    int x2 = Integer.parseInt(ViewController.resultMatcher.group(\"x2\"));\r\n                    int y2 = Integer.parseInt(ViewController.resultMatcher.group(\"y2\"));\r\n                    output = GameController.patrolUnit(x1, y1, x2, y2);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (setUnitStateMatcher.matches()) {\r\n                String items = setUnitStateMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(UnitMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.Y_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.S_ITEM.getRegex());\r\n                if (ViewController.isItemMatch(items, itemsPattern)) {\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    String state = ViewController.resultMatcher.group(\"state\");\r\n                    state = ViewController.editItem(state);\r\n                    output = GameController.setStateOfMilitary(x, y, state);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (attackMatcher.matches()) {\r\n                String items = attackMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(UnitMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.Y_ITEM.getRegex());\r\n                if (ViewController.isItemMatch(items, itemsPattern)) {\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    output = GameController.attackEnemy(x, y);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (pourOilMatcher.matches()) {\r\n                String direction = pourOilMatcher.group(\"direction\");\r\n                output = GameController.pourOil(direction);\r\n                System.out.println(output);\r\n            } else if (digTunnelMatcher.matches()) {\r\n                String items = digTunnelMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(UnitMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.Y_ITEM.getRegex());\r\n                if (ViewController.isItemMatch(items, itemsPattern)) {\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    output = GameController.digTunnel(x, y);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (buildMatcher.matches()) {\r\n                runBuild(scanner);\r\n            } else if (digMoatMatcher.matches()) {\r\n//                TODO: return \"invalid command\" if the selected unit is not an engineer\r\n//                TODO: call digMoat()\r\n            } else if (disbandUnitMatcher.matches()) {\r\n                output = GameController.disbandUnit();\r\n                System.out.println(output);\r\n            } else if (backMatcher.matches()) {\r\n                System.out.println(\"<< Game Menu >>\");\r\n                return;\r\n            } else {\r\n                System.out.println(Answers.INVALID_COMMAND.getValue());\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void runBuild(Scanner scanner) {\r\n//        TODO: return \"invalid command\" if the selected unit is not an engineer\r\n        String message = \"select one of the following tools:\\n\";\r\n        message += \"1.Catapult\\n\";\r\n        message += \"2.Trebuchet\\n\";\r\n        message += \"3.Siege Tower\\n\";\r\n        message += \"4.Battering Ram\\n\";\r\n        message += \"5.Portable Shield\\n\";\r\n        message += \"6.Fire Ballista\\n\";\r\n        message += \"7.back\";\r\n        System.out.println(message);\r\n\r\n        boolean back = false;\r\n        int number = 0, x = 0, y = 0;\r\n        while (true) {\r\n            try {\r\n                number = Integer.parseInt(scanner.nextLine());\r\n            } catch (Exception e) {\r\n                System.out.println(\"enter a number:\");\r\n                continue;\r\n            }\r\n            if (number < 1 || number > 7) {\r\n                System.out.println(\"invalid number\\nreenter a number:\");\r\n                continue;\r\n            }\r\n            if (number == 7) back = true;\r\n            break;\r\n        }\r\n\r\n        if (back) return;\r\n\r\n        while (true) {\r\n            System.out.println(\"enter the x and y coordinates:\");\r\n            String coords = scanner.nextLine();\r\n            Matcher xMatcher = UnitMenuCommands.getMatcher(coords, UnitMenuCommands.X_ITEM);\r\n            Matcher yMatcher = UnitMenuCommands.getMatcher(coords, UnitMenuCommands.Y_ITEM);\r\n\r\n            if (!xMatcher.find() || !yMatcher.find()) {\r\n                System.out.println(\"invalid command\");\r\n                continue;\r\n            }\r\n            x = Integer.parseInt(xMatcher.group(\"x\"));\r\n            y = Integer.parseInt(yMatcher.group(\"y\"));\r\n            break;\r\n        }\r\n\r\n        GameController.buildEquipment(number, x, y);\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/view/UnitMenu.java b/crusader/src/main/java/view/UnitMenu.java
+--- a/crusader/src/main/java/view/UnitMenu.java	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/crusader/src/main/java/view/UnitMenu.java	(date 1682843695284)
+@@ -17,7 +17,7 @@
+     public static void run(Scanner scanner) {
+ 
+         String input, output;
+-
++        System.out.println("<< Unit Menu >>");
+         while (true) {
+             input = scanner.nextLine();
+             Matcher moveUnitMenuMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.MOVE_UNIT);
+Index: crusader/pom.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>org.example</groupId>\r\n    <artifactId>StrongholdCrusader</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n    <dependencies>\r\n\r\n        <dependency>\r\n            <groupId>com.google.code.gson</groupId>\r\n            <artifactId>gson</artifactId>\r\n            <version>2.10.1</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <version>4.13.2</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>commons-codec</groupId>\r\n            <artifactId>commons-codec</artifactId>\r\n            <version>1.10</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.26</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter</artifactId>\r\n            <version>RELEASE</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <version>4.13.2</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>commons-codec</groupId>\r\n            <artifactId>commons-codec</artifactId>\r\n            <version>1.15</version>\r\n        </dependency>\r\n\r\n\r\n    </dependencies>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/pom.xml b/crusader/pom.xml
+--- a/crusader/pom.xml	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/crusader/pom.xml	(date 1682851058598)
+@@ -12,6 +12,8 @@
+         <maven.compiler.source>17</maven.compiler.source>
+         <maven.compiler.target>17</maven.compiler.target>
+         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
++        <javafx.version>17.0.1</javafx.version>
++        <javafx.maven.plugin.version>0.0.8</javafx.maven.plugin.version>
+     </properties>
+     <dependencies>
+ 
+@@ -59,6 +61,10 @@
+             <version>1.15</version>
+         </dependency>
+ 
+-
++        <dependency>
++            <groupId>org.openjfx</groupId>
++            <artifactId>javafx-controls</artifactId>
++            <version>${javafx.version}</version>
++        </dependency>
+     </dependencies>
+ </project>
+\ No newline at end of file
+Index: crusader/src/main/java/controller/HumanController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/controller/HumanController.java b/crusader/src/main/java/controller/HumanController.java
+new file mode 100644
+--- /dev/null	(date 1682866143965)
++++ b/crusader/src/main/java/controller/HumanController.java	(date 1682866143965)
+@@ -0,0 +1,220 @@
++package controller;
++
++
++import javafx.util.Pair;
++import model.activity.Move;
++import model.game.Map;
++import model.human.Human;
++import model.human.military.Military;
++
++import java.util.ArrayList;
++import java.util.HashSet;
++import java.util.LinkedList;
++import java.util.Objects;
++
++
++public class HumanController {
++    public static ArrayList<Military> militaries;
++
++    public static void move(Pair<Integer,Integer> endPair){
++        for (Military military : militaries){
++            Move move = new Move(military.getX(),military.getY(),endPair,true,military);
++            military.setMove(move);
++        }
++    }
++
++    public static void attack(Military enemy){
++        for (Military military : militaries){
++            Move move = new Move(military.getX(),military.getY(),enemy,false,military);
++            military.setMove(move);
++        }
++    }
++
++    public static LinkedList<Pair<Integer, Integer>> getPath(Pair<Integer, Integer> startPair, Pair<Integer, Integer> endPair, Human human) {
++        Map map = GameController.getGame().getMap();
++        int[][] wave = new int[map.getLength()][map.getWidth()];
++        boolean[][] checkArray = new boolean[map.getLength()][map.getWidth()];
++
++        HashSet<Pair<Integer, Integer>> firstPairs = new HashSet<>();
++        HashSet<Pair<Integer, Integer>> secondPairs;
++        firstPairs.add(startPair);
++
++        int depth = 2;
++        int y = startPair.getKey();
++        int x = startPair.getValue();
++        wave[y][x] = 1;
++        checkArray[y][x] = true;
++
++        boolean receiveEnd = false;
++
++        while (firstPairs.size() != 0 || receiveEnd) {
++            secondPairs = makeNextPairs(wave, checkArray, firstPairs,human);
++            firstPairs = new HashSet<>(secondPairs);
++
++            for (Pair<Integer, Integer> pair : secondPairs) {
++                y = pair.getKey();
++                x = pair.getValue();
++                if (checkArray[y][x]) {
++                    firstPairs.remove(pair);
++                    continue;
++                }
++                wave[y][x] = depth;
++                checkArray[y][x] = true;
++                if (y == endPair.getKey() && x == startPair.getValue()) {
++                    receiveEnd = true;
++                }
++            }
++            depth++;
++        }
++        return makePath(wave, startPair, endPair);
++    }
++
++    public static LinkedList<Pair<Integer, Integer>> makePath(int[][] wave, Pair<Integer, Integer> start, Pair<Integer, Integer> end) {
++        LinkedList<Pair<Integer, Integer>> result = new LinkedList<>();
++        Pair<Integer, Integer> nextPair = new Pair<>(end.getKey(), end.getValue());
++        while (!Objects.equals(nextPair.getValue(), start.getValue()) || !Objects.equals(nextPair.getKey(), start.getKey())) {
++            nextPair = findNextNode(nextPair, wave, end);
++            if (nextPair == null) {
++                return null;
++            }
++            result.addFirst(nextPair);
++        }
++        return result;
++    }
++
++    public static double getDistance(int x1, int y1, int x2, int y2) {
++        return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));
++    }
++
++    public static Pair<Integer, Integer> findNextNode(Pair<Integer, Integer> nextPair, int[][] wave, Pair<Integer, Integer> end) {
++        int x = nextPair.getValue();
++        int y = nextPair.getKey();
++
++        int minDepth = 10000;
++        double minDistance = 10000;
++        if (y != 0) {
++            double distance = getDistance(end.getValue(), end.getKey(), x, y - 1);
++            if (wave[y - 1][x] > 0 && (wave[y - 1][x] < minDepth || (wave[y - 1][x] == minDepth && distance < minDistance))) {
++                nextPair = new Pair<>(y - 1, x);
++                minDepth = wave[y - 1][x];
++                minDistance = distance;
++            }
++        }
++
++        if (x != 0) {
++            double distance = getDistance(end.getValue(), end.getKey(), x - 1, y);
++            if (wave[y][x - 1] > 0 && (wave[y][x - 1] < minDepth || (wave[y][x - 1] == minDepth && distance < minDistance))) {
++                nextPair = new Pair<>(y, x - 1);
++                minDepth = wave[y][x - 1];
++                minDistance = distance;
++            }
++        }
++        if (x != 0 && y != 0) {
++            double distance = getDistance(end.getValue(), end.getKey(), x - 1, y - 1);
++            if (wave[y - 1][x - 1] > 0 && (wave[y - 1][x - 1] < minDepth || (wave[y - 1][x - 1] == minDepth && distance < minDistance))) {
++                nextPair = new Pair<>(y - 1, x - 1);
++                minDepth = wave[y - 1][x - 1];
++                minDistance = distance;
++            }
++        }
++        if (x != wave.length - 1) {
++            double distance = getDistance(end.getValue(), end.getKey(), x + 1, y);
++            if (wave[y][x + 1] > 0 && (wave[y][x + 1] < minDepth || (wave[y][x + 1] == minDepth && distance < minDistance))) {
++                nextPair = new Pair<>(y, x + 1);
++                minDepth = wave[y][x + 1];
++                minDistance = distance;
++            }
++        }
++        if (y != wave.length - 1) {
++            double distance = getDistance(end.getValue(), end.getKey(), x, y + 1);
++            if (wave[y + 1][x] > 0 && (wave[y + 1][x] < minDepth || (wave[y + 1][x] == minDepth && distance < minDistance))) {
++                nextPair = new Pair<>(y + 1, x);
++                minDepth = wave[y + 1][x];
++                minDistance = distance;
++            }
++        }
++        if (y != wave.length - 1 && x != wave.length - 1) {
++
++            double distance = getDistance(end.getValue(), end.getKey(), x + 1, y + 1);
++            if (wave[y + 1][x + 1] > 0 && (wave[y + 1][x + 1] < minDepth || (wave[y + 1][x + 1] == minDepth && distance < minDistance))) {
++                nextPair = new Pair<>(y + 1, x + 1);
++                minDepth = wave[y + 1][x + 1];
++                minDistance = distance;
++
++            }
++        }
++        if (y != wave.length - 1 && x != 0) {
++            double distance = getDistance(end.getValue(), end.getKey(), x - 1, y + 1);
++            if (wave[y + 1][x - 1] > 0 && (wave[y + 1][x - 1] < minDepth || (wave[y + 1][x - 1] == minDepth && distance < minDistance))) {
++                nextPair = new Pair<>(y + 1, x - 1);
++                minDepth = wave[y + 1][x - 1];
++                minDistance = distance;
++            }
++        }
++        if (y != 0 && x != wave.length - 1) {
++            double distance = getDistance(end.getValue(), end.getKey(), x + 1, y - 1);
++            if (wave[y - 1][x + 1] > 0 && (wave[y - 1][x + 1] < minDepth || (wave[y - 1][x + 1] == minDepth && distance < minDistance))) {
++                nextPair = new Pair<>(y - 1, x + 1);
++                minDepth = wave[y - 1][x + 1];
++                minDistance = distance;
++            }
++        }
++
++        if (minDepth == 0) {
++            return null;
++        }
++        return nextPair;
++    }
++
++    public static HashSet<Pair<Integer, Integer>> makeNextPairs(int[][] wave, boolean[][] checkArray, HashSet<Pair<Integer, Integer>> firstPairs,Human human) {
++        Map map = GameController.getGame().getMap();
++        HashSet<Pair<Integer, Integer>> secondPairs = new HashSet<>();
++        for (Pair<Integer, Integer> pair : firstPairs) {
++            int y = pair.getKey();
++            int x = pair.getValue();
++
++            if (y != 0) {
++                if (map.getTile(x, y - 1).isPassable(human) && !checkArray[y - 1][x]) {
++                    secondPairs.add(new Pair<>(y - 1, x));
++                }
++            }
++
++            if (x != 0 && !checkArray[y][x - 1]) {
++                if (map.getTile(x - 1, y).isPassable(human)) {
++                    secondPairs.add(new Pair<>(y, x - 1));
++                }
++            }
++            if (x != 0 && y != 0) {
++                if (map.getTile(x - 1, y - 1).isPassable(human) && !checkArray[y - 1][x - 1]) {
++                    secondPairs.add(new Pair<>(y - 1, x - 1));
++                }
++            }
++            if (x != wave.length - 1) {
++                if (map.getTile(x + 1, y).isPassable(human) && !checkArray[y][x + 1]) {
++                    secondPairs.add(new Pair<>(y, x + 1));
++                }
++            }
++            if (y != wave.length - 1) {
++                if (map.getTile(x, y + 1).isPassable(human) && !checkArray[y + 1][x]) {
++                    secondPairs.add(new Pair<>(y + 1, x));
++                }
++            }
++            if (y != wave.length - 1 && x != wave.length - 1) {
++                if (map.getTile(x + 1, y + 1).isPassable(human) && !checkArray[y + 1][x + 1]) {
++                    secondPairs.add(new Pair<>(y + 1, x + 1));
++                }
++            }
++            if (y != wave.length - 1 && x != 0) {
++                if (map.getTile(x - 1, y + 1).isPassable(human) && !checkArray[y + 1][x - 1]) {
++                    secondPairs.add(new Pair<>(y + 1, x - 1));
++                }
++            }
++            if (y != 0 && x != wave.length - 1) {
++                if (map.getTile(x + 1, y - 1).isPassable(human) && !checkArray[y - 1][x + 1]) {
++                    secondPairs.add(new Pair<>(y - 1, x + 1));
++                }
++            }
++        }
++        return secondPairs;
++    }
++}
+Index: crusader/src/main/java/model/human/Human.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package model.human;\r\n\r\n\r\nimport enumeration.DefenseRating;\r\nimport enumeration.HumanStates;\r\nimport model.Government;\r\nimport model.activity.Move;\r\n\r\npublic abstract class Human implements Cloneable{\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    \r\n\r\n    private String name;\r\n    private Government government = null;\r\n    private int speed;\r\n    private int x, y;\r\n    private int defenseRating;\r\n    private int health;\r\n    private HumanStates state;\r\n    private int shootingRange;\r\n    private boolean isInvisible = false;\r\n    private Move move;\r\n\r\n    public Human(int speed, int defenseRating, int shootingRange) {\r\n        this.speed = speed;\r\n        this.defenseRating = defenseRating;\r\n        this.health = defenseRating;\r\n        this.shootingRange = shootingRange;\r\n    }\r\n    public HumanStates getState() {\r\n        return state;\r\n    }\r\n\r\n    public void setState(HumanStates state) {\r\n        this.state = state;\r\n    }\r\n\r\n    public boolean isInvisible() {\r\n        return isInvisible;\r\n    }\r\n\r\n    public void setInvisible(boolean invisible) {\r\n        isInvisible = invisible;\r\n    }\r\n\r\n    public Move getMove() {\r\n        return move;\r\n    }\r\n\r\n    public void setMove(Move move) {\r\n        this.move = move;\r\n    }\r\n\r\n\r\n    public void enableInvisible() {\r\n        this.isInvisible = true;\r\n    }\r\n\r\n    public Government getGovernment() {\r\n        return government;\r\n    }\r\n\r\n    public void setGovernment(Government government) {\r\n        this.government = government;\r\n    }\r\n\r\n    public int getHealth() {\r\n        return health;\r\n    }\r\n\r\n    public void setHealth(int health) {\r\n        this.health = health;\r\n    }\r\n\r\n    public int getShootingRange() {\r\n        return shootingRange;\r\n    }\r\n\r\n    public void setShootingRange(int shootingRange) {\r\n        this.shootingRange = shootingRange;\r\n    }\r\n\r\n    public int getSpeed() {\r\n        return speed;\r\n    }\r\n\r\n    public void setSpeed(int speed) {\r\n        this.speed = speed;\r\n    }\r\n\r\n    public int getX() {\r\n        return x;\r\n    }\r\n\r\n    public void setX(int x) {\r\n        this.x = x;\r\n    }\r\n\r\n    public int getY() {\r\n        return y;\r\n    }\r\n\r\n    public void setY(int y) {\r\n        this.y = y;\r\n    }\r\n\r\n    public int getDefenseRating() {\r\n        return defenseRating;\r\n    }\r\n\r\n    public void setDefenseRating(int defenseRating) {\r\n        this.defenseRating = defenseRating;\r\n    }\r\n\r\n    @Override\r\n    public Human clone() throws CloneNotSupportedException {\r\n        return (Human) super.clone();\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/model/human/Human.java b/crusader/src/main/java/model/human/Human.java
+--- a/crusader/src/main/java/model/human/Human.java	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/crusader/src/main/java/model/human/Human.java	(date 1682863609805)
+@@ -1,12 +1,17 @@
+ package model.human;
+ 
+ 
+-import enumeration.DefenseRating;
++import controller.GameController;
+ import enumeration.HumanStates;
++import javafx.util.Pair;
+ import model.Government;
+ import model.activity.Move;
++import model.game.Map;
++import model.game.Tile;
++
++import java.util.List;
+ 
+-public abstract class Human implements Cloneable{
++public abstract class Human implements Cloneable {
+     public String getName() {
+         return name;
+     }
+@@ -15,7 +20,6 @@
+         this.name = name;
+     }
+ 
+-    
+ 
+     private String name;
+     private Government government = null;
+@@ -34,6 +38,7 @@
+         this.health = defenseRating;
+         this.shootingRange = shootingRange;
+     }
++
+     public HumanStates getState() {
+         return state;
+     }
+@@ -119,6 +124,8 @@
+         this.defenseRating = defenseRating;
+     }
+ 
++
++
+     @Override
+     public Human clone() throws CloneNotSupportedException {
+         return (Human) super.clone();
+Index: crusader/src/main/java/model/human/military/Military.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package model.human.military;\r\n\r\n\r\nimport model.goods.Goods;\r\nimport model.human.Human;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic abstract class Military extends Human implements Cloneable{\r\n    private int attackRating;\r\n    private String militaryState;\r\n    private boolean usesHorse = false;\r\n    private boolean usesLadder = false;\r\n    private boolean digsMoat = false;\r\n    private String weapon;\r\n    private ArrayList<String> armours = new ArrayList<>();\r\n    private int price;\r\n\r\n    //\r\n    public Military(int speed, int defenseRating, int shootingRange, int attackRating, int price) {\r\n        super(speed, defenseRating, shootingRange);\r\n        this.attackRating = attackRating;\r\n        this.price = price;\r\n    }\r\n\r\n    public int getPrice() {\r\n        return price;\r\n    }\r\n\r\n    public void setPrice(int price) {\r\n        this.price = price;\r\n    }\r\n\r\n    public String getWeapon() {\r\n        return weapon;\r\n    }\r\n\r\n    public void setWeapon(String weapon) {\r\n        this.weapon = weapon;\r\n    }\r\n\r\n    public ArrayList<String> getArmours() {\r\n        return armours;\r\n    }\r\n\r\n    public void addArmour(String armour) {\r\n        this.armours.add(armour);\r\n    }\r\n\r\n    public boolean isUsesHorse() {\r\n        return usesHorse;\r\n    }\r\n\r\n    public void enableUsesHorse() {\r\n        this.usesHorse = true;\r\n    }\r\n\r\n    public boolean isUsesLadder() {\r\n        return usesLadder;\r\n    }\r\n\r\n    public void enableUsesLadder() {\r\n        this.usesLadder = true;\r\n    }\r\n\r\n    public boolean isDigsMoat() {\r\n        return digsMoat;\r\n    }\r\n\r\n    public void enableDigsMoat() {\r\n        this.digsMoat = true;\r\n    }\r\n\r\n    public int getAttackRating() {\r\n        return attackRating;\r\n    }\r\n\r\n    public void setAttackRating(int attackRating) {\r\n        this.attackRating = attackRating;\r\n    }\r\n\r\n    public String getMilitaryState() {\r\n        return militaryState;\r\n    }\r\n\r\n    public void setMilitaryState(String militaryState) {\r\n        this.militaryState = militaryState;\r\n    }\r\n\r\n    @Override\r\n\r\n    public Military clone() throws CloneNotSupportedException {\r\n        return (Military) super.clone();\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/model/human/military/Military.java b/crusader/src/main/java/model/human/military/Military.java
+--- a/crusader/src/main/java/model/human/military/Military.java	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/crusader/src/main/java/model/human/military/Military.java	(date 1682861508514)
+@@ -13,7 +13,7 @@
+     private boolean usesLadder = false;
+     private boolean digsMoat = false;
+     private String weapon;
+-    private ArrayList<String> armours = new ArrayList<>();
++    private final ArrayList<String> armours = new ArrayList<>();
+     private int price;
+ 
+     //
+Index: crusader/src/main/java/controller/GameController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package controller;\r\n\r\nimport enumeration.answers.BuildingAnswers;\r\nimport model.building.Building;\r\nimport model.game.Game;\r\nimport model.game.Tile;\r\nimport model.human.Human;\r\n\r\npublic class GameController {\r\n    private static Game game;\r\n\r\n    public static Game getGame() {\r\n        return game;\r\n    }\r\n\r\n    public static void setGame(Game game) {\r\n        GameController.game = game;\r\n    }\r\n\r\n    public static String selectUnit(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String moveUnit(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String patrolUnit(int x1, int y1, int x2, int y2) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String setStateOfMilitary(int x, int y, String state) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String attackEnemy(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String airAttack(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String pourOil(String direction) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String digTunnel(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String buildEquipment(int equipmentNumber, int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String disbandUnit() {\r\n        return \"\";\r\n    }\r\n\r\n    public static String dropBuilding(int x, int y, String type) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String selectBuilding(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String createUnit(String type, int count) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String repairCastleBuildings() {\r\n        return \"\";\r\n    }\r\n\r\n    public static String changeTurn() {\r\n        return \"\";\r\n    }\r\n\r\n    public static String dropBuilding(String x, String y, String type) {\r\n//        int xCoord, yCoord;\r\n//        try {\r\n//            xCoord = Integer.parseInt(x);\r\n//        } catch (NumberFormatException e) {\r\n//            return BuildingAnswers.getMessage(BuildingAnswers.INVALID_X_COORD_ERROR);\r\n//        }\r\n//        try {\r\n//            yCoord = Integer.parseInt(x);\r\n//        } catch (NumberFormatException e) {\r\n//            return BuildingAnswers.getMessage(BuildingAnswers.INVALID_Y_COORD_ERROR);\r\n//        }\r\n//        Building building = getInstanceOfBuilding(xCoord, yCoord, type); // TODO: get instance of supposed building.\r\n//        if (building == null)\r\n//            return BuildingAnswers.getMessage(BuildingAnswers.ERROR_FOR_DROP_BUILDING);\r\n//        GameController.getGame().getMap().getTile(xCoord, yCoord).setBuilding(building);\r\n//        return BuildingAnswers.getMessage(BuildingAnswers.DROP_BUILDING_SUCCESSFULLY_DONE);\r\n        return null;\r\n    }\r\n\r\n    public static Building getInstanceOfBuilding(int x, int y, String typeOfBuilding) {\r\n        return null;\r\n        // TODO: this method must check (x, y) and typeOfBuilding and returned correct value.\r\n    }\r\n\r\n    public static String dropCastleBuildings(int x, int y, String type) {\r\n        return \"\"; // *********************************\r\n    }\r\n\r\n    public static String dropUnit(int x, int y, String type, int count) {\r\n        return \"\"; // *********************************\r\n    }\r\n\r\n    public static String showMap(int x, int y) {\r\n        String result;\r\n        return \"\";\r\n    }\r\n\r\n    public static String moveMap(int up, int left, int down, int right) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String showDetailsOfTile(int x, int y) {\r\n        Tile tile = GameController.getGame().getMap().getTile(x, y);\r\n\r\n        String details = \"tile (\" + x + \", \" + y + \") details:\\n\";\r\n//        details += \"texture type: \" + tile.getTexture().getTextureName();\r\n//\r\n//        if (tile.getBuilding() != null) {\r\n//            details += \"building \" + tile.getBuilding().getName() + \" from government \" + tile.getBuilding().getGovernment() +\r\n//                    \" | HP: \" + tile.getBuilding().getHp() + \"/\" + tile.getBuilding().getMaxHp() + \"\\n\";\r\n//        } else details += \"there is no building on this tile\\n\";\r\n//\r\n//        for (int i = 0; i < tile.getHuman().size(); i++) {\r\n//            Human human = tile.getHuman().get(i);\r\n////            TODO: add human type and government\r\n//        }\r\n//        if (tile.getHuman().size() > 0) details += \"total number of humans: \" + tile.getHuman().size();\r\n//        else details += \"there are no humans on this tile\";\r\n\r\n        return details;\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/controller/GameController.java b/crusader/src/main/java/controller/GameController.java
+--- a/crusader/src/main/java/controller/GameController.java	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/crusader/src/main/java/controller/GameController.java	(date 1682861508527)
+@@ -1,10 +1,17 @@
+ package controller;
+ 
+ import enumeration.answers.BuildingAnswers;
++import javafx.util.Pair;
+ import model.building.Building;
+ import model.game.Game;
++import model.game.Map;
+ import model.game.Tile;
+ import model.human.Human;
++import model.human.military.Military;
++import view.UnitMenu;
++
++import java.util.ArrayList;
++import java.util.Scanner;
+ 
+ public class GameController {
+     private static Game game;
+@@ -17,11 +24,33 @@
+         GameController.game = game;
+     }
+ 
+-    public static String selectUnit(int x, int y) {
++    public static String selectUnit(int x, int y, Scanner scanner) {
++        Map map = game.getMap();
++        if(x < 1 || x > map.getWidth()){
++            return "invalid x!";
++        }
++        if(y < 1 || y > map.getLength()){
++            return "invalid y!";
++        }
++        ArrayList<Military> militaries = MapController.getMilitariesOfGovernment(x,y,game.getCurrentGovernment());
++        if(militaries.size() == 0){
++            return "There is no troop in this place!";
++        }
++        HumanController.militaries = militaries;
++        UnitMenu.run(scanner);
+         return "";
+     }
+ 
+     public static String moveUnit(int x, int y) {
++        Map map = game.getMap();
++        if(x < 1 || x > map.getWidth()){
++            return "invalid x!";
++        }
++        if(y < 1 || y > map.getLength()){
++            return "invalid y!";
++        }
++        Pair<Integer,Integer> destination = new Pair<>(y,x);
++        HumanController.move(destination);
+         return "";
+     }
+ 
+Index: crusader/src/main/java/view/GameMenu.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package view;\r\n\r\nimport controller.GameController;\r\nimport controller.MainController;\r\nimport controller.ViewController;\r\nimport enumeration.answers.Answers;\r\nimport enumeration.commands.Commands;\r\nimport enumeration.commands.GameMenuCommands;\r\nimport model.game.Game;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\n\r\npublic class GameMenu {\r\n\r\n    public static void run(Scanner scanner, Game game) {\r\n        String input, output;\r\n        System.out.println(\"<< Game Menu >>\");\r\n        //TODO add try catch of parseInt\r\n        while (true) {\r\n            input = scanner.nextLine();\r\n            Matcher dropBuildingMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.DROP_BUILDING);\r\n            Matcher selectBuildingMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.SELECT_BUILDING);\r\n            Matcher selectUnitMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.SELECT_UNIT);\r\n            Matcher governmentMenuMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.GOVERNMENT_MENU);\r\n            Matcher tradeMenuMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.TRADE_MENU);\r\n            Matcher nextTurnMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.NEXT_TURN);\r\n            Matcher showPlayerMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.SHOW_PLAYER);\r\n            Matcher showRoundMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.SHOW_ROUND);\r\n            Matcher backMatcher = Commands.getMatcher(input, Commands.BACK);\r\n            Matcher exitMatcher = Commands.getMatcher(input, Commands.EXIT_CRUSADER);\r\n            // to be continued.?\r\n            if (dropBuildingMatcher.matches()) {\r\n                String items = dropBuildingMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(GameMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(GameMenuCommands.Y_ITEM.getRegex());\r\n                itemsPattern.add(GameMenuCommands.TYPE_ITEM.getRegex());\r\n                if(ViewController.isItemMatch(items,itemsPattern)){\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    String type = ViewController.resultMatcher.group(\"type\");\r\n                    type = ViewController.editItem(type);\r\n                    output = GameController.dropBuilding(x,y,type);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (selectBuildingMatcher.matches()) {\r\n                String items = selectBuildingMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(GameMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(GameMenuCommands.Y_ITEM.getRegex());\r\n                if(ViewController.isItemMatch(items,itemsPattern)){\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    output = GameController.selectBuilding(x,y);\r\n                    System.out.println(output);\r\n                }\r\n\r\n            } else if (selectUnitMatcher.matches()) {\r\n                String items = selectUnitMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(GameMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(GameMenuCommands.Y_ITEM.getRegex());\r\n                if(ViewController.isItemMatch(items,itemsPattern)){\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    output = GameController.selectUnit(x,y);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (governmentMenuMatcher.matches()) {\r\n                GovernmentMenu.run(scanner);\r\n            } else if (tradeMenuMatcher.matches()) {\r\n                TradeMenu.run(scanner);\r\n            } else if (nextTurnMatcher.matches()) {\r\n                output = GameController.changeTurn();\r\n                System.out.println(output);\r\n            } else if (showPlayerMatcher.matches()) {\r\n                output = GameController.changeTurn();\r\n                System.out.println(output);\r\n            } else if (showRoundMatcher.matches()) {\r\n                output = GameController.changeTurn();\r\n                System.out.println(output);\r\n            } else if (backMatcher.matches()) {\r\n                break;\r\n            } else if (exitMatcher.matches()) {\r\n                MainController.exitCrusader();\r\n            } else {\r\n                System.out.println(Answers.INVALID_COMMAND.getValue());\r\n            }\r\n        }\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/view/GameMenu.java b/crusader/src/main/java/view/GameMenu.java
+--- a/crusader/src/main/java/view/GameMenu.java	(revision 26b3f7a664cde77e59c57fedf74e833f6062f660)
++++ b/crusader/src/main/java/view/GameMenu.java	(date 1682843695261)
+@@ -63,9 +63,20 @@
+                 itemsPattern.add(GameMenuCommands.X_ITEM.getRegex());
+                 itemsPattern.add(GameMenuCommands.Y_ITEM.getRegex());
+                 if(ViewController.isItemMatch(items,itemsPattern)){
+-                    int x = Integer.parseInt(ViewController.resultMatcher.group("x"));
+-                    int y = Integer.parseInt(ViewController.resultMatcher.group("y"));
+-                    output = GameController.selectUnit(x,y);
++                    int x;
++                    int y;
++                    try {
++                        x = Integer.parseInt(ViewController.resultMatcher.group("x"));
++                    }catch (Exception e){
++                        x = -1;
++                    }
++
++                    try {
++                        y = Integer.parseInt(ViewController.resultMatcher.group("y"));
++                    }catch (Exception e){
++                        y = -1;
++                    }
++                    output = GameController.selectUnit(x,y,scanner);
+                     System.out.println(output);
+                 }
+             } else if (governmentMenuMatcher.matches()) {
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_15_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_15_PM__Changes_.xml b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_15_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1682934370000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_15_PM__Changes_.xml	(date 1682934370000)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_5_1_2023_1_15_PM_[Changes]" date="1682934358926" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_15_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 5/1/2023 1:15 PM [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1684998116920)
+++ b/.idea/compiler.xml	(date 1684998116920)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="crusader" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1684998116913)
+++ b/.idea/vcs.xml	(date 1684998116913)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_openjfx_javafx_graphics_win_17_0_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_openjfx_javafx_graphics_win_17_0_1.xml b/../.idea/libraries/Maven__org_openjfx_javafx_graphics_win_17_0_1.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_openjfx_javafx_graphics_win_17_0_1.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-graphics:win:17.0.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.1/javafx-graphics-17.0.1-win.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.1/javafx-graphics-17.0.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.1/javafx-graphics-17.0.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_openjfx_javafx_base_17_0_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_openjfx_javafx_base_17_0_1.xml b/../.idea/libraries/Maven__org_openjfx_javafx_base_17_0_1.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_openjfx_javafx_base_17_0_1.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-base:17.0.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.1/javafx-base-17.0.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.1/javafx-base-17.0.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.1/javafx-base-17.0.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml b/../.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.opentest4j:opentest4j:1.2.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml
new file mode 100644
--- /dev/null	(date 1682453676000)
+++ b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_2.xml	(date 1682453676000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_58_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_58_PM_[Changes]/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_58_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1682936881000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_58_PM_[Changes]/shelved.patch	(date 1682936881000)
@@ -0,0 +1,92 @@
+Index: crusader/src/main/java/model/human/military/Military.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package model.human.military;\r\n\r\n\r\nimport model.goods.Goods;\r\nimport model.human.Human;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic abstract class Military extends Human implements Cloneable{\r\n    private int attackRating;\r\n    private String militaryState;\r\n    private boolean usesHorse = false;\r\n    private boolean usesLadder = false;\r\n    private boolean digsMoat = false;\r\n    private String weapon;\r\n    private final ArrayList<String> armours = new ArrayList<>();\r\n    private int price;\r\n\r\n    //\r\n    public Military(int speed, int defenseRating, int shootingRange, int attackRating, int price) {\r\n        super(speed, defenseRating, shootingRange);\r\n        this.attackRating = attackRating;\r\n        this.price = price;\r\n    }\r\n\r\n    public int getPrice() {\r\n        return price;\r\n    }\r\n\r\n    public void setPrice(int price) {\r\n        this.price = price;\r\n    }\r\n\r\n    public String getWeapon() {\r\n        return weapon;\r\n    }\r\n\r\n    public void setWeapon(String weapon) {\r\n        this.weapon = weapon;\r\n    }\r\n\r\n    public ArrayList<String> getArmours() {\r\n        return armours;\r\n    }\r\n\r\n    public void addArmour(String armour) {\r\n        this.armours.add(armour);\r\n    }\r\n\r\n    public boolean isUsesHorse() {\r\n        return usesHorse;\r\n    }\r\n\r\n    public void enableUsesHorse() {\r\n        this.usesHorse = true;\r\n    }\r\n\r\n    public boolean isUsesLadder() {\r\n        return usesLadder;\r\n    }\r\n\r\n    public void enableUsesLadder() {\r\n        this.usesLadder = true;\r\n    }\r\n\r\n    public boolean isDigsMoat() {\r\n        return digsMoat;\r\n    }\r\n\r\n    public void enableDigsMoat() {\r\n        this.digsMoat = true;\r\n    }\r\n\r\n    public int getAttackRating() {\r\n        return attackRating;\r\n    }\r\n\r\n    public void setAttackRating(int attackRating) {\r\n        this.attackRating = attackRating;\r\n    }\r\n\r\n    public String getMilitaryState() {\r\n        return militaryState;\r\n    }\r\n\r\n    public void setMilitaryState(String militaryState) {\r\n        this.militaryState = militaryState;\r\n    }\r\n\r\n    @Override\r\n\r\n    public Military clone() throws CloneNotSupportedException {\r\n        return (Military) super.clone();\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/model/human/military/Military.java b/crusader/src/main/java/model/human/military/Military.java
+--- a/crusader/src/main/java/model/human/military/Military.java	(revision fa19a3371f868ae6281dd4d310e7007e20ce47c0)
++++ b/crusader/src/main/java/model/human/military/Military.java	(date 1682936255373)
+@@ -87,6 +87,14 @@
+         this.militaryState = militaryState;
+     }
+ 
++    //public
++    public void attack(){
++
++    }
++
++//    public void attack(int x,int y){
++//        if()
++//    }
+     @Override
+ 
+     public Military clone() throws CloneNotSupportedException {
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"48940bc5-fa6d-4a81-b88a-cb236d4b61a3\" name=\"Changes\" comment=\"Map 1 (400*400) created.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/crusader/src/main/java/controller/GameController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/crusader/src/main/java/controller/GameController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/crusader/src/main/java/controller/gamestructure/GameMaps.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/crusader/src/main/java/controller/gamestructure/GameMaps.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"MitraGh\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OeZJGtSER9mrxhoyWb8D0vXmSP\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Sharif/Term2/AP/Project/Project-Phase-1&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"model\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\test\\java\\controller\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\main\\java\" />\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\test\\java\\menu\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"StrongholdCrusader\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.changeEmailTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"changeEmailTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.isStrongPasswordTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"isStrongPasswordTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.removeSloganTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"removeSloganTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.changeEmailTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.removeSloganTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.isStrongPasswordTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"48940bc5-fa6d-4a81-b88a-cb236d4b61a3\" name=\"Changes\" comment=\"\" />\r\n      <created>1681922938440</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681922938440</updated>\r\n      <workItem from=\"1681922940573\" duration=\"1143000\" />\r\n      <workItem from=\"1681937070375\" duration=\"893000\" />\r\n      <workItem from=\"1681941196344\" duration=\"7452000\" />\r\n      <workItem from=\"1681984358797\" duration=\"16524000\" />\r\n      <workItem from=\"1682023951191\" duration=\"511000\" />\r\n      <workItem from=\"1682056344653\" duration=\"7886000\" />\r\n      <workItem from=\"1682067403104\" duration=\"102000\" />\r\n      <workItem from=\"1682073593485\" duration=\"1034000\" />\r\n      <workItem from=\"1682087981704\" duration=\"15062000\" />\r\n      <workItem from=\"1682116199375\" duration=\"2705000\" />\r\n      <workItem from=\"1682149028155\" duration=\"14217000\" />\r\n      <workItem from=\"1682174575839\" duration=\"72000\" />\r\n      <workItem from=\"1682174654488\" duration=\"103000\" />\r\n      <workItem from=\"1682174764146\" duration=\"99000\" />\r\n      <workItem from=\"1682180160196\" duration=\"2544000\" />\r\n      <workItem from=\"1682202541014\" duration=\"27766000\" />\r\n      <workItem from=\"1682333857238\" duration=\"49000\" />\r\n      <workItem from=\"1682334932839\" duration=\"1014000\" />\r\n      <workItem from=\"1682353770879\" duration=\"1777000\" />\r\n      <workItem from=\"1682371298142\" duration=\"130000\" />\r\n      <workItem from=\"1682411331249\" duration=\"72000\" />\r\n      <workItem from=\"1682438061345\" duration=\"1337000\" />\r\n      <workItem from=\"1682442721294\" duration=\"11971000\" />\r\n      <workItem from=\"1682681015033\" duration=\"40000\" />\r\n      <workItem from=\"1682872449211\" duration=\"20055000\" />\r\n      <workItem from=\"1682923931065\" duration=\"16000\" />\r\n      <workItem from=\"1682923971381\" duration=\"14000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"...\">\r\n      <created>1681925358549</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681925358549</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"some tests added.\">\r\n      <created>1681944373098</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681944373098</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"some enums are edited.\">\r\n      <created>1681995637116</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681995637116</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Resources added.\">\r\n      <created>1681999798822</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681999798822</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Foods\">\r\n      <created>1682000666231</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682000666231</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Foods are added.\">\r\n      <created>1682001101623</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682001101623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Humans are added.\">\r\n      <created>1682001707158</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682001707158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Humans are added. (final)\">\r\n      <created>1682002807377</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682002807377</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"stay logged in.\">\r\n      <created>1682021001755</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682021001755</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Storage and producer buildings...\">\r\n      <created>1682062460681</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682062460681</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Texture passable conditions ...\">\r\n      <created>1682063924968</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682063924968</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Main castle added.\">\r\n      <created>1682103062158</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682103062158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Walls, Draw bridge and gatehouses are added.\">\r\n      <created>1682115730401</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682115730401</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Towers added.\">\r\n      <created>1682165652089</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682165652089</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"castle buildings changed.\">\r\n      <created>1682168093012</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682168093012</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"castle buildings final change.\">\r\n      <created>1682172406877</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682172406877</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"method convertPasswordToHash() edited.\">\r\n      <created>1682189114122</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682189114122</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"a bug solved.\">\r\n      <created>1682237172223</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682237172223</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Building menu and Buildings dictionary. (first try)\">\r\n      <created>1682255351548</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682255351548</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Building menu (second try)\">\r\n      <created>1682289033211</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682289033211</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Building menu (second try)\">\r\n      <created>1682289065083</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682289065083</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"a commit to solve a problem.\">\r\n      <created>1682353891980</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682353891980</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"building menu edited.\">\r\n      <created>1682354296419</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682354296419</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"adding tree to Tile class\">\r\n      <created>1682439002928</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682439002928</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"just commit\">\r\n      <created>1682447586540</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682447586540</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Building menu updated&#10;and some enums edited.\">\r\n      <created>1682451476656</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682451476656</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"the last commits before checkpoint 1 ...\">\r\n      <created>1682453168189</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682453168189</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Repair added to Building controller.\">\r\n      <created>1682454117656</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682454117656</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"some features added to Government and its controller&#10;try for creating template maps\">\r\n      <created>1682898170788</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682898170788</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"30\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Foods are added.\" />\r\n    <MESSAGE value=\"Humans are added.\" />\r\n    <MESSAGE value=\"Humans are added. (final)\" />\r\n    <MESSAGE value=\"stay logged in.\" />\r\n    <MESSAGE value=\"Storage and producer buildings...\" />\r\n    <MESSAGE value=\"Texture passable conditions ...\" />\r\n    <MESSAGE value=\"Main castle added.\" />\r\n    <MESSAGE value=\"Walls, Draw bridge and gatehouses are added.\" />\r\n    <MESSAGE value=\"Towers added.\" />\r\n    <MESSAGE value=\"castle buildings changed.\" />\r\n    <MESSAGE value=\"castle buildings final change.\" />\r\n    <MESSAGE value=\"method convertPasswordToHash() edited.\" />\r\n    <MESSAGE value=\"a bug solved.\" />\r\n    <MESSAGE value=\"Building menu and Buildings dictionary. (first try)\" />\r\n    <MESSAGE value=\"Building menu (second try)\" />\r\n    <MESSAGE value=\"a commit to sove a problem.\" />\r\n    <MESSAGE value=\"a commit to solve a problem.\" />\r\n    <MESSAGE value=\"building menu edited.\" />\r\n    <MESSAGE value=\"adding tree to Tile class\" />\r\n    <MESSAGE value=\"just commit\" />\r\n    <MESSAGE value=\"Building menu updated&#10;and some enums edited.\" />\r\n    <MESSAGE value=\"the last commits before checkpoint 1 ...\" />\r\n    <MESSAGE value=\"Repair added to Building controller.\" />\r\n    <MESSAGE value=\"some features added to Government and its controller&#10;try for creating template maps\" />\r\n    <MESSAGE value=\"Map 1 (400*400) created.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Map 1 (400*400) created.\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Project_Phase_1$UserControllerTest.ic\" NAME=\"UserControllerTest Coverage Results\" MODIFIED=\"1681942420279\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>controller.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic\" NAME=\"UserControllerTest.changeEmailTest Coverage Results\" MODIFIED=\"1681944150811\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>controller.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision fa19a3371f868ae6281dd4d310e7007e20ce47c0)
++++ b/.idea/workspace.xml	(date 1682936878668)
+@@ -6,8 +6,7 @@
+   <component name="ChangeListManager">
+     <list default="true" id="48940bc5-fa6d-4a81-b88a-cb236d4b61a3" name="Changes" comment="Map 1 (400*400) created.">
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/GameController.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/GameController.java" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/gamestructure/GameMaps.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/gamestructure/GameMaps.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/model/human/military/Military.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/model/human/military/Military.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -47,16 +46,16 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent">{
+-  &quot;keyToString&quot;: {
+-    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+-    &quot;last_opened_file_path&quot;: &quot;D:/Sharif/Term2/AP/Project/Project-Phase-1&quot;,
+-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;
++  <component name="PropertiesComponent"><![CDATA[{
++  "keyToString": {
++    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
++    "RunOnceActivity.OpenProjectViewOnStart": "true",
++    "RunOnceActivity.ShowReadmeOnStart": "true",
++    "WebServerToolWindowFactoryState": "false",
++    "last_opened_file_path": "C:/Users/mi/OneDrive/Desktop/crusader-phase1/project-group-09",
++    "nodejs_package_manager_path": "npm"
+   }
+-}</component>
++}]]></component>
+   <component name="RecentsManager">
+     <key name="CreateClassDialog.RecentsKey">
+       <recent name="model" />
+@@ -185,6 +184,7 @@
+       <workItem from="1682872449211" duration="20055000" />
+       <workItem from="1682923931065" duration="16000" />
+       <workItem from="1682923971381" duration="14000" />
++      <workItem from="1682935689305" duration="1188000" />
+     </task>
+     <task id="LOCAL-00001" summary="...">
+       <created>1681925358549</created>
+@@ -435,10 +435,10 @@
+     <option name="LAST_COMMIT_MESSAGE" value="Map 1 (400*400) created." />
+   </component>
+   <component name="com.intellij.coverage.CoverageDataManagerImpl">
+-    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest.ic" NAME="UserControllerTest Coverage Results" MODIFIED="1681942420279" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
++    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic" NAME="UserControllerTest.changeEmailTest Coverage Results" MODIFIED="1681944150811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+       <FILTER>controller.*</FILTER>
+     </SUITE>
+-    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic" NAME="UserControllerTest.changeEmailTest Coverage Results" MODIFIED="1681944150811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
++    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest.ic" NAME="UserControllerTest Coverage Results" MODIFIED="1681942420279" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+       <FILTER>controller.*</FILTER>
+     </SUITE>
+   </component>
Index: ../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml
new file mode 100644
--- /dev/null	(date 1682453676000)
+++ b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_2.xml	(date 1682453676000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1684998116876)
+++ b/.idea/misc.xml	(date 1684998116876)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="19" project-jdk-type="JavaSDK" />
+</project>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_5_50_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_5_50_PM__Changes_.xml b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_5_50_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1682950896000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_5_50_PM__Changes_.xml	(date 1682950896000)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_5_1_2023_5_50_PM_[Changes]" date="1682950872720" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_5_50_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 5/1/2023 5:50 PM [Changes]" />
+</changelist>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_3.xml b/../.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_3.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_3.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.platform:junit-platform-commons:1.9.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml b/../.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml
new file mode 100644
--- /dev/null	(date 1682453676000)
+++ b/../.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_2.xml	(date 1682453676000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.platform:junit-platform-commons:1.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_18_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_18_PM_[Changes]/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_18_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1682934525000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_18_PM_[Changes]/shelved.patch	(date 1682934525000)
@@ -0,0 +1,18 @@
+Index: crusader/src/main/java/controller/GameController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package controller;\r\n\r\nimport controller.human.HumanController;\r\nimport enumeration.HumanStates;\r\nimport javafx.util.Pair;\r\nimport model.building.Building;\r\nimport model.building.castlebuildings.Wall;\r\nimport model.game.Game;\r\nimport model.game.Map;\r\nimport model.game.Tile;\r\nimport model.human.military.Military;\r\nimport view.UnitMenu;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\nimport java.util.Scanner;\r\n\r\npublic class GameController {\r\n    private static Game game;\r\n\r\n    public static Game getGame() {\r\n        return game;\r\n    }\r\n\r\n    public static void setGame(Game game) {\r\n        GameController.game = game;\r\n    }\r\n\r\n    //TODO handel empty field\r\n    public static String selectUnit(int x, int y, Scanner scanner) {\r\n        String message = validateXAndY(x,y);\r\n        if(message != null){\r\n            return message;\r\n        }\r\n        ArrayList<Military> militaries = MapController.getMilitariesOfGovernment(x,y,game.getCurrentGovernment());\r\n        if(militaries.size() == 0){\r\n            return \"There is no troop in this place!\";\r\n        }\r\n        HumanController.militaries = militaries;\r\n        UnitMenu.x = x;\r\n        UnitMenu.y = y;\r\n        UnitMenu.run(scanner);\r\n        return \"\";\r\n    }\r\n\r\n    public static String moveUnit(int x, int y) {\r\n        String message = validateXAndY(x,y);\r\n        if(message != null){\r\n            return message;\r\n        }\r\n        Pair<Integer,Integer> destination = new Pair<>(y,x);\r\n        boolean check =HumanController.move(destination);\r\n        if(!check){\r\n            return \"can't move unit no path to destination!\";\r\n        }\r\n        return \"unit(s) moved successfully!\";\r\n    }\r\n\r\n    public static String patrolUnit(int x1, int y1, int x2, int y2) {\r\n        String message = validatePatrol(x1,y1,x2,y2);\r\n        if(message != null){\r\n            return message;\r\n        }\r\n\r\n        boolean check = HumanController.patrolUnit(x1,y1,x2,y2);\r\n        if(!check){\r\n            return \"can't start patrol, no path to destination!\";\r\n        }\r\n        return \"patrol started successfully!\";\r\n    }\r\n\r\n    public static String setStateOfMilitary(int x, int y, String state) {\r\n        String message = validateXAndY(x,y);\r\n        if(message != null){\r\n            return message;\r\n        }\r\n\r\n        ArrayList<Military> militaries = MapController.getMilitariesOfGovernment(x,y,game.getCurrentGovernment());\r\n        if(militaries.size() == 0){\r\n            return \"There is no troop in this place!\";\r\n        }\r\n\r\n\r\n        if(state.equals(HumanStates.STAND_GROUND.getState())){\r\n            HumanController.setState(HumanStates.STAND_GROUND.getState(),militaries);\r\n        }\r\n\r\n        if(state.equals(HumanStates.DEFENSIVE_STANCE.getState())){\r\n            HumanController.setState(HumanStates.DEFENSIVE_STANCE.getState(),militaries);\r\n        }\r\n\r\n        if(state.equals(HumanStates.AGGRESSIVE_STANCE.getState())){\r\n            HumanController.setState(HumanStates.AGGRESSIVE_STANCE.getState(),militaries);\r\n        }\r\n\r\n        return \"invalid state!\";\r\n    }\r\n\r\n    public static String attackEnemy(int x, int y) {\r\n        String message = validateXAndY(x,y);\r\n        if(message != null){\r\n            return message;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    public static String airAttack(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String pourOil(String direction) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String digTunnel(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String buildEquipment(int equipmentNumber, int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String disbandUnit() {\r\n        return \"\";\r\n    }\r\n\r\n    public static String dropBuilding(int x, int y, String type) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String selectBuilding(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n\r\n    public static String changeTurn() {\r\n        return \"\";\r\n    }\r\n\r\n    public static String dropBuilding(String x, String y, String type) {\r\n//        int xCoord, yCoord;\r\n//        try {\r\n//            xCoord = Integer.parseInt(x);\r\n//        } catch (NumberFormatException e) {\r\n//            return BuildingAnswers.getMessage(BuildingAnswers.INVALID_X_COORD_ERROR);\r\n//        }\r\n//        try {\r\n//            yCoord = Integer.parseInt(x);\r\n//        } catch (NumberFormatException e) {\r\n//            return BuildingAnswers.getMessage(BuildingAnswers.INVALID_Y_COORD_ERROR);\r\n//        }\r\n//        Building building = getInstanceOfBuilding(xCoord, yCoord, type); // TODO: get instance of supposed building.\r\n//        if (building == null)\r\n//            return BuildingAnswers.getMessage(BuildingAnswers.ERROR_FOR_DROP_BUILDING);\r\n//        GameController.getGame().getMap().getTile(xCoord, yCoord).setBuilding(building);\r\n//        return BuildingAnswers.getMessage(BuildingAnswers.DROP_BUILDING_SUCCESSFULLY_DONE);\r\n        return null;\r\n    }\r\n\r\n    public static Building getInstanceOfBuilding(int x, int y, String typeOfBuilding) {\r\n        return null;\r\n        // TODO: this method must check (x, y) and typeOfBuilding and returned correct value.\r\n    }\r\n\r\n    public static String dropCastleBuildings(int x, int y, String type) {\r\n        return \"\"; // *********************************\r\n    }\r\n\r\n    public static String dropUnit(int x, int y, String type, int count) {\r\n        return \"\"; // *********************************\r\n    }\r\n\r\n    public static String showMap(int x, int y) {\r\n        Map map = game.getMap();\r\n        if (y - 3 < 0) y = 3;\r\n        else if (y + 3 >= map.getLength()) y = map.getLength() - 1;\r\n        if (x - 9 < 0) x = 9;\r\n        else if (x + 9 >= map.getWidth()) x = map.getWidth() - 1;\r\n        game.setCurrentMapX(x);\r\n        game.setCurrentMapY(y);\r\n\r\n        String result = \"\";\r\n        result += \"-\";\r\n        for (int i = 0; i < 19 * 6; i++) {\r\n            result += \"-\";\r\n        }\r\n        result += \"\\n\";\r\n        for (int i = y - 3; i <= y + 3; i++) {\r\n            for (int j = 0; j < 2; j++) {\r\n                result += \"|\";\r\n                for (int k = x - 9; k <= x + 9; k++) {\r\n                    for (int l = 0; l < 5; l++) {\r\n                        Tile tile = map.getTile(i, k);\r\n                        String sign = \" \";\r\n                        if (tile.getMilitaries().size() != 0) sign = \"\\uE54E\";\r\n                        else if (tile.getBuilding() != null && !(tile.getBuilding() instanceof Wall)) sign = \"B\";\r\n                        else if (tile.getBuilding() != null && tile.getBuilding() instanceof Wall) sign = \"W\";\r\n                        else if (tile.getTree() != null) sign = \"T\";\r\n                        else if (tile.getRockDirection() != null) sign = \"R\";\r\n                        result += tile.getTexture().getColor() + sign + \"\\u001B[0m\";\r\n                    }\r\n                    result += \"|\";\r\n                }\r\n                result += \"\\n\";\r\n            }\r\n            result += \"-\";\r\n            for (int j = 0; j < 19 * 6; j++) {\r\n                result += \"-\";\r\n            }\r\n            result += \"\\n\";\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static String moveMap(int up, int left, int down, int right) {\r\n        int y = down - up;\r\n        int x = right - left;\r\n        return showMap(GameController.getGame().getCurrentMapX() + x, GameController.game.getCurrentMapY() + y);\r\n    }\r\n\r\n    public static String showDetailsOfTile(int x, int y) {\r\n        Tile tile = GameController.getGame().getMap().getTile(x, y);\r\n\r\n        String details = \"tile (\" + x + \", \" + y + \") details:\\n\";\r\n//        details += \"texture type: \" + tile.getTexture().getTextureName();\r\n//\r\n//        if (tile.getBuilding() != null) {\r\n//            details += \"building \" + tile.getBuilding().getName() + \" from government \" + tile.getBuilding().getGovernment() +\r\n//                    \" | HP: \" + tile.getBuilding().getHp() + \"/\" + tile.getBuilding().getMaxHp() + \"\\n\";\r\n//        } else details += \"there is no building on this tile\\n\";\r\n//\r\n//        for (int i = 0; i < tile.getHuman().size(); i++) {\r\n//            Human human = tile.getHuman().get(i);\r\n////            TODO: add human type and government\r\n//        }\r\n//        if (tile.getHuman().size() > 0) details += \"total number of humans: \" + tile.getHuman().size();\r\n//        else details += \"there are no humans on this tile\";\r\n\r\n        return details;\r\n    }\r\n\r\n    public static String validateXAndY(int x, int y){\r\n        Map map = game.getMap();\r\n        if(checkNullFields(x)){\r\n            return \"x is required!\";\r\n        }\r\n        if(checkNullFields(y)){\r\n            return \"y is required!\";\r\n        }\r\n        if(x < 1 || x > map.getWidth()){\r\n            return \"invalid x!\";\r\n        }\r\n        if(y < 1 || y > map.getLength()){\r\n            return \"invalid y!\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static String validatePatrol(int x1, int y1,int x2, int y2){\r\n        Map map = game.getMap();\r\n        if(checkNullFields(x1)){\r\n            return \"x1 is required!\";\r\n        }\r\n        if(checkNullFields(y1)){\r\n            return \"y1 is required!\";\r\n        }\r\n        if(x1 < 1 || x1 > map.getWidth()){\r\n            return \"invalid x1!\";\r\n        }\r\n        if(y1 < 1 || y1 > map.getLength()){\r\n            return \"invalid y!\";\r\n        }\r\n\r\n        if(checkNullFields(x2)){\r\n            return \"x2 is required!\";\r\n        }\r\n        if(checkNullFields(y2)){\r\n            return \"y2 is required!\";\r\n        }\r\n        if(x2 < 1 || x2 > map.getWidth()){\r\n            return \"invalid x2!\";\r\n        }\r\n        if(y2 < 1 || y2 > map.getLength()){\r\n            return \"invalid y2!\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private static boolean checkNullFields(String input) {\r\n        return input == null || input.length() == 0;\r\n    }\r\n\r\n    private static boolean checkNullFields(int input) {\r\n        return input == -1;\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/controller/GameController.java b/crusader/src/main/java/controller/GameController.java
+--- a/crusader/src/main/java/controller/GameController.java	(revision a1abb7926c3f398510c97c36197b875f752ce639)
++++ b/crusader/src/main/java/controller/GameController.java	(date 1682934523248)
+@@ -26,7 +26,6 @@
+         GameController.game = game;
+     }
+ 
+-    //TODO handel empty field
+     public static String selectUnit(int x, int y, Scanner scanner) {
+         String message = validateXAndY(x,y);
+         if(message != null){
Index: ../.idea/libraries/Maven__org_openjfx_javafx_base_win_17_0_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_openjfx_javafx_base_win_17_0_1.xml b/../.idea/libraries/Maven__org_openjfx_javafx_base_win_17_0_1.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_openjfx_javafx_base_win_17_0_1.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-base:win:17.0.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.1/javafx-base-17.0.1-win.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.1/javafx-base-17.0.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.1/javafx-base-17.0.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_projectlombok_lombok_1_18_26.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_projectlombok_lombok_1_18_26.xml b/../.idea/libraries/Maven__org_projectlombok_lombok_1_18_26.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_projectlombok_lombok_1_18_26.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.projectlombok:lombok:1.18.26">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.26/lombok-1.18.26.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.26/lombok-1.18.26-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.26/lombok-1.18.26-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_22_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_22_PM_[Changes]/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_22_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1682934767000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_22_PM_[Changes]/shelved.patch	(date 1682934767000)
@@ -0,0 +1,64 @@
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"48940bc5-fa6d-4a81-b88a-cb236d4b61a3\" name=\"Changes\" comment=\"some features added to Government and its controller&#10;try for creating template maps\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"MitraGh\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OeZJGtSER9mrxhoyWb8D0vXmSP\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Sharif/Term2/AP/Project/Project-Phase-1&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"model\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\test\\java\\controller\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\main\\java\" />\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\test\\java\\menu\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"StrongholdCrusader\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.changeEmailTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"changeEmailTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.isStrongPasswordTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"isStrongPasswordTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.removeSloganTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"removeSloganTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.changeEmailTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.removeSloganTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.isStrongPasswordTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"48940bc5-fa6d-4a81-b88a-cb236d4b61a3\" name=\"Changes\" comment=\"\" />\r\n      <created>1681922938440</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681922938440</updated>\r\n      <workItem from=\"1681922940573\" duration=\"1143000\" />\r\n      <workItem from=\"1681937070375\" duration=\"893000\" />\r\n      <workItem from=\"1681941196344\" duration=\"7452000\" />\r\n      <workItem from=\"1681984358797\" duration=\"16524000\" />\r\n      <workItem from=\"1682023951191\" duration=\"511000\" />\r\n      <workItem from=\"1682056344653\" duration=\"7886000\" />\r\n      <workItem from=\"1682067403104\" duration=\"102000\" />\r\n      <workItem from=\"1682073593485\" duration=\"1034000\" />\r\n      <workItem from=\"1682087981704\" duration=\"15062000\" />\r\n      <workItem from=\"1682116199375\" duration=\"2705000\" />\r\n      <workItem from=\"1682149028155\" duration=\"14217000\" />\r\n      <workItem from=\"1682174575839\" duration=\"72000\" />\r\n      <workItem from=\"1682174654488\" duration=\"103000\" />\r\n      <workItem from=\"1682174764146\" duration=\"99000\" />\r\n      <workItem from=\"1682180160196\" duration=\"2544000\" />\r\n      <workItem from=\"1682202541014\" duration=\"27766000\" />\r\n      <workItem from=\"1682333857238\" duration=\"49000\" />\r\n      <workItem from=\"1682334932839\" duration=\"1014000\" />\r\n      <workItem from=\"1682353770879\" duration=\"1777000\" />\r\n      <workItem from=\"1682371298142\" duration=\"130000\" />\r\n      <workItem from=\"1682411331249\" duration=\"72000\" />\r\n      <workItem from=\"1682438061345\" duration=\"1337000\" />\r\n      <workItem from=\"1682442721294\" duration=\"11971000\" />\r\n      <workItem from=\"1682681015033\" duration=\"40000\" />\r\n      <workItem from=\"1682872449211\" duration=\"20055000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"...\">\r\n      <created>1681925358549</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681925358549</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"some tests added.\">\r\n      <created>1681944373098</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681944373098</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"some enums are edited.\">\r\n      <created>1681995637116</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681995637116</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Resources added.\">\r\n      <created>1681999798822</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681999798822</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Foods\">\r\n      <created>1682000666231</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682000666231</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Foods are added.\">\r\n      <created>1682001101623</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682001101623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Humans are added.\">\r\n      <created>1682001707158</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682001707158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Humans are added. (final)\">\r\n      <created>1682002807377</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682002807377</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"stay logged in.\">\r\n      <created>1682021001755</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682021001755</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Storage and producer buildings...\">\r\n      <created>1682062460681</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682062460681</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Texture passable conditions ...\">\r\n      <created>1682063924968</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682063924968</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Main castle added.\">\r\n      <created>1682103062158</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682103062158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Walls, Draw bridge and gatehouses are added.\">\r\n      <created>1682115730401</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682115730401</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Towers added.\">\r\n      <created>1682165652089</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682165652089</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"castle buildings changed.\">\r\n      <created>1682168093012</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682168093012</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"castle buildings final change.\">\r\n      <created>1682172406877</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682172406877</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"method convertPasswordToHash() edited.\">\r\n      <created>1682189114122</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682189114122</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"a bug solved.\">\r\n      <created>1682237172223</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682237172223</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Building menu and Buildings dictionary. (first try)\">\r\n      <created>1682255351548</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682255351548</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Building menu (second try)\">\r\n      <created>1682289033211</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682289033211</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Building menu (second try)\">\r\n      <created>1682289065083</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682289065083</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"a commit to solve a problem.\">\r\n      <created>1682353891980</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682353891980</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"building menu edited.\">\r\n      <created>1682354296419</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682354296419</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"adding tree to Tile class\">\r\n      <created>1682439002928</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682439002928</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"just commit\">\r\n      <created>1682447586540</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682447586540</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Building menu updated&#10;and some enums edited.\">\r\n      <created>1682451476656</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682451476656</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"the last commits before checkpoint 1 ...\">\r\n      <created>1682453168189</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682453168189</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Repair added to Building controller.\">\r\n      <created>1682454117656</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682454117656</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"some features added to Government and its controller&#10;try for creating template maps\">\r\n      <created>1682898170788</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682898170788</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"30\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Foods\" />\r\n    <MESSAGE value=\"Foods are added.\" />\r\n    <MESSAGE value=\"Humans are added.\" />\r\n    <MESSAGE value=\"Humans are added. (final)\" />\r\n    <MESSAGE value=\"stay logged in.\" />\r\n    <MESSAGE value=\"Storage and producer buildings...\" />\r\n    <MESSAGE value=\"Texture passable conditions ...\" />\r\n    <MESSAGE value=\"Main castle added.\" />\r\n    <MESSAGE value=\"Walls, Draw bridge and gatehouses are added.\" />\r\n    <MESSAGE value=\"Towers added.\" />\r\n    <MESSAGE value=\"castle buildings changed.\" />\r\n    <MESSAGE value=\"castle buildings final change.\" />\r\n    <MESSAGE value=\"method convertPasswordToHash() edited.\" />\r\n    <MESSAGE value=\"a bug solved.\" />\r\n    <MESSAGE value=\"Building menu and Buildings dictionary. (first try)\" />\r\n    <MESSAGE value=\"Building menu (second try)\" />\r\n    <MESSAGE value=\"a commit to sove a problem.\" />\r\n    <MESSAGE value=\"a commit to solve a problem.\" />\r\n    <MESSAGE value=\"building menu edited.\" />\r\n    <MESSAGE value=\"adding tree to Tile class\" />\r\n    <MESSAGE value=\"just commit\" />\r\n    <MESSAGE value=\"Building menu updated&#10;and some enums edited.\" />\r\n    <MESSAGE value=\"the last commits before checkpoint 1 ...\" />\r\n    <MESSAGE value=\"Repair added to Building controller.\" />\r\n    <MESSAGE value=\"some features added to Government and its controller&#10;try for creating template maps\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"some features added to Government and its controller&#10;try for creating template maps\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Project_Phase_1$UserControllerTest.ic\" NAME=\"UserControllerTest Coverage Results\" MODIFIED=\"1681942420279\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>controller.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic\" NAME=\"UserControllerTest.changeEmailTest Coverage Results\" MODIFIED=\"1681944150811\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>controller.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision 1d28798a22cb85eeb27d8eab43a2f0dfe135c842)
++++ b/.idea/workspace.xml	(date 1682934728101)
+@@ -4,7 +4,10 @@
+     <option name="autoReloadType" value="SELECTIVE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="48940bc5-fa6d-4a81-b88a-cb236d4b61a3" name="Changes" comment="some features added to Government and its controller&#10;try for creating template maps" />
++    <list default="true" id="48940bc5-fa6d-4a81-b88a-cb236d4b61a3" name="Changes" comment="human state enum">
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/model/activity/Move.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/model/activity/Move.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/model/human/Human.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/model/human/Human.java" afterDir="false" />
++    </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+@@ -383,7 +386,14 @@
+       <option name="project" value="LOCAL" />
+       <updated>1682898170788</updated>
+     </task>
+-    <option name="localTasksCounter" value="30" />
++    <task id="LOCAL-00030" summary="human state enum">
++      <created>1682934575911</created>
++      <option name="number" value="00030" />
++      <option name="presentableId" value="LOCAL-00030" />
++      <option name="project" value="LOCAL" />
++      <updated>1682934575911</updated>
++    </task>
++    <option name="localTasksCounter" value="31" />
+     <servers />
+   </component>
+   <component name="TypeScriptGeneratedFilesManager">
+@@ -401,7 +411,6 @@
+     </option>
+   </component>
+   <component name="VcsManagerConfiguration">
+-    <MESSAGE value="Foods" />
+     <MESSAGE value="Foods are added." />
+     <MESSAGE value="Humans are added." />
+     <MESSAGE value="Humans are added. (final)" />
+@@ -426,13 +435,14 @@
+     <MESSAGE value="the last commits before checkpoint 1 ..." />
+     <MESSAGE value="Repair added to Building controller." />
+     <MESSAGE value="some features added to Government and its controller&#10;try for creating template maps" />
+-    <option name="LAST_COMMIT_MESSAGE" value="some features added to Government and its controller&#10;try for creating template maps" />
++    <MESSAGE value="human state enum" />
++    <option name="LAST_COMMIT_MESSAGE" value="human state enum" />
+   </component>
+   <component name="com.intellij.coverage.CoverageDataManagerImpl">
+-    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest.ic" NAME="UserControllerTest Coverage Results" MODIFIED="1681942420279" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
++    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic" NAME="UserControllerTest.changeEmailTest Coverage Results" MODIFIED="1681944150811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+       <FILTER>controller.*</FILTER>
+     </SUITE>
+-    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic" NAME="UserControllerTest.changeEmailTest Coverage Results" MODIFIED="1681944150811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
++    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest.ic" NAME="UserControllerTest Coverage Results" MODIFIED="1681942420279" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+       <FILTER>controller.*</FILTER>
+     </SUITE>
+   </component>
Index: ../.idea/libraries/Maven__org_openjfx_javafx_controls_win_17_0_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_openjfx_javafx_controls_win_17_0_1.xml b/../.idea/libraries/Maven__org_openjfx_javafx_controls_win_17_0_1.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_openjfx_javafx_controls_win_17_0_1.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-controls:win:17.0.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.1/javafx-controls-17.0.1-win.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.1/javafx-controls-17.0.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.1/javafx-controls-17.0.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__commons_codec_commons_codec_1_15.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__commons_codec_commons_codec_1_15.xml b/../.idea/libraries/Maven__commons_codec_commons_codec_1_15.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__commons_codec_commons_codec_1_15.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-codec:commons-codec:1.15">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-codec/commons-codec/1.15/commons-codec-1.15.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-codec/commons-codec/1.15/commons-codec-1.15-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-codec/commons-codec/1.15/commons-codec-1.15-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: files/captcha/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/files/captcha/main.py b/files/captcha/main.py
new file mode 100644
--- /dev/null	(date 1684965144000)
+++ b/files/captcha/main.py	(date 1684965144000)
@@ -0,0 +1,2 @@
+import sys
+print int(sys.argv[1])+int(sys.argv[2])
Index: ../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_3.xml b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_3.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_3.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_3.xml b/../.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_3.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_3.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.platform:junit-platform-engine:1.9.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_3.xml b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_3.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_9_3.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-params:5.9.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_openjfx_javafx_graphics_17_0_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_openjfx_javafx_graphics_17_0_1.xml b/../.idea/libraries/Maven__org_openjfx_javafx_graphics_17_0_1.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_openjfx_javafx_graphics_17_0_1.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-graphics:17.0.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.1/javafx-graphics-17.0.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.1/javafx-graphics-17.0.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.1/javafx-graphics-17.0.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_3.xml b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_3.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_3.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml
new file mode 100644
--- /dev/null	(date 1682453676000)
+++ b/../.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_9_2.xml	(date 1682453676000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter:5.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_58_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_58_PM__Changes_.xml b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_58_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1682936890000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_58_PM__Changes_.xml	(date 1682936890000)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_5_1_2023_1_58_PM_[Changes]" date="1682936884645" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_58_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 5/1/2023 1:58 PM [Changes]" />
+</changelist>
\ No newline at end of file
Index: ../.idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/compiler.xml b/../.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1682941998000)
+++ b/../.idea/compiler.xml	(date 1682941998000)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="StrongholdCrusader" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="StrongholdCrusader" target="17" />
+    </bytecodeTargetLevel>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="StrongholdCrusader" options="--add-modules java.desktop" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/libraries/Maven__org_openjfx_javafx_controls_17_0_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__org_openjfx_javafx_controls_17_0_1.xml b/../.idea/libraries/Maven__org_openjfx_javafx_controls_17_0_1.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__org_openjfx_javafx_controls_17_0_1.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-controls:17.0.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.1/javafx-controls-17.0.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.1/javafx-controls-17.0.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.1/javafx-controls-17.0.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/encodings.xml b/../.idea/encodings.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/encodings.xml	(date 1682935704000)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/crusader/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/crusader/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_18_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_18_PM__Changes_.xml b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_18_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1682934556000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_18_PM__Changes_.xml	(date 1682934556000)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_5_1_2023_1_18_PM_[Changes]" date="1682934525507" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_18_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 5/1/2023 1:18 PM [Changes]" />
+</changelist>
\ No newline at end of file
Index: ../.idea/libraries/Maven__com_google_code_gson_gson_2_10_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/libraries/Maven__com_google_code_gson_gson_2_10_1.xml b/../.idea/libraries/Maven__com_google_code_gson_gson_2_10_1.xml
new file mode 100644
--- /dev/null	(date 1682935704000)
+++ b/../.idea/libraries/Maven__com_google_code_gson_gson_2_10_1.xml	(date 1682935704000)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.google.code.gson:gson:2.10.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/code/gson/gson/2.10.1/gson-2.10.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/code/gson/gson/2.10.1/gson-2.10.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/code/gson/gson/2.10.1/gson-2.10.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_5_50_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_5_50_PM_[Changes]/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_5_50_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1682950833000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_5_50_PM_[Changes]/shelved.patch	(date 1682950833000)
@@ -0,0 +1,216 @@
+Index: crusader/src/main/java/Main.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>import controller.*;\r\nimport controller.gamestructure.GameMaps;\r\nimport enumeration.Textures;\r\nimport enumeration.dictionary.Trees;\r\nimport model.building.Building;\r\nimport model.building.OxTether;\r\nimport model.building.castlebuildings.Wall;\r\nimport model.game.Game;\r\nimport model.game.Map;\r\nimport model.game.Tile;\r\nimport model.human.military.ArabianMercenary;\r\n\r\nimport java.io.*;\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n//        MainController.run();\r\n        /*Map map = new Map(30, 20);\r\n        Tile[][] mapTiles = new Tile[30][20];\r\n\r\n        for (int i = 0; i < 30; i++) {\r\n            for (int j = 0; j < 20; j++) {\r\n                Tile tile = new Tile();\r\n                tile.setTexture(Textures.EARTH);\r\n                mapTiles[i][j] = tile;\r\n            }\r\n        }\r\n        mapTiles[2][1].addMilitary(new ArabianMercenary(0, 0, 0, 0, 0));\r\n        mapTiles[3][5].setTree(Trees.OLIVE_TREE);\r\n        mapTiles[5][4].setTexture(Textures.GRASS);\r\n        mapTiles[5][5].setBuilding(new Wall(0, 0, \"wall\", 0, 0, 0, 0));\r\n        map.setMapTiles(mapTiles);\r\n        GameController.setGame(new Game(map));\r\n\r\n        System.out.println(GameController.showMap(0, 0));*/\r\n        GameMaps.createMap2();\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/Main.java b/crusader/src/main/java/Main.java
+--- a/crusader/src/main/java/Main.java	(revision c0a44e906e1a927d708f4044707a0809bcda5b24)
++++ b/crusader/src/main/java/Main.java	(date 1682950802185)
+@@ -1,39 +1,9 @@
+ import controller.*;
+ import controller.gamestructure.GameMaps;
+-import enumeration.Textures;
+-import enumeration.dictionary.Trees;
+-import model.building.Building;
+-import model.building.OxTether;
+-import model.building.castlebuildings.Wall;
+-import model.game.Game;
+-import model.game.Map;
+-import model.game.Tile;
+-import model.human.military.ArabianMercenary;
+ 
+-import java.io.*;
+-import java.util.Scanner;
+ 
+ public class Main {
+     public static void main(String[] args) {
+-//        MainController.run();
+-        /*Map map = new Map(30, 20);
+-        Tile[][] mapTiles = new Tile[30][20];
+-
+-        for (int i = 0; i < 30; i++) {
+-            for (int j = 0; j < 20; j++) {
+-                Tile tile = new Tile();
+-                tile.setTexture(Textures.EARTH);
+-                mapTiles[i][j] = tile;
+-            }
+-        }
+-        mapTiles[2][1].addMilitary(new ArabianMercenary(0, 0, 0, 0, 0));
+-        mapTiles[3][5].setTree(Trees.OLIVE_TREE);
+-        mapTiles[5][4].setTexture(Textures.GRASS);
+-        mapTiles[5][5].setBuilding(new Wall(0, 0, "wall", 0, 0, 0, 0));
+-        map.setMapTiles(mapTiles);
+-        GameController.setGame(new Game(map));
+-
+-        System.out.println(GameController.showMap(0, 0));*/
+-        GameMaps.createMap2();
++        PixelCanvas.drawMap(GameMaps.createMap1());
+     }
+ }
+Index: crusader/src/main/java/controller/PixelCanvas.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package controller;\r\n\r\nimport controller.gamestructure.GameMaps;\r\nimport model.building.castlebuildings.MainCastle;\r\nimport model.game.Map;\r\nimport model.game.Tile;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\n\r\npublic class PixelCanvas extends Canvas {\r\n    private static final int WIDTH = 800;\r\n    private static final int HEIGHT = 800;\r\n    private static Map map = null;\r\n\r\n    private static int  zoomRate;\r\n    public void paint(Graphics g) {\r\n        super.paint(g);\r\n\r\n        for(int i = 0; i < WIDTH; i++) {\r\n            for(int j = 0; j < HEIGHT; j++) {\r\n                int x = i/4;\r\n                int y = j/4;\r\n                g.setColor(getColor(x,y,map));\r\n                g.drawLine(i, j, i, j);\r\n            }\r\n        }\r\n    }\r\n\r\n    private Color getColor(int x, int y,Map map) {\r\n        Tile tile = map.getTile(x,y);\r\n        if(tile.getMilitaries().size() != 0) {\r\n            String color = tile.getMilitaries().get(0).getGovernment().getColor();\r\n            return getGovernmentColor(color);\r\n        }else if(tile.getBuilding() != null){\r\n            if(tile.getBuilding() instanceof MainCastle){\r\n                return new Color(0,0,0);\r\n            }\r\n            return new Color(83, 62, 62);\r\n        }else{\r\n            return new Color(tile.getTexture().getR(), tile.getTexture().getB(), tile.getTexture().getG());\r\n        }\r\n        //return new Color(143, 14, 2);\r\n    }\r\n\r\n    public Color getGovernmentColor(String color){\r\n        switch (color){\r\n            case \"blue\":\r\n                return new Color(27, 51, 204);\r\n            case \"red\" :\r\n                return new Color(204, 27, 48);\r\n            case \"orange\":\r\n                return new Color(234, 137, 27);\r\n            default:\r\n                return new Color(140, 140, 140);\r\n        }\r\n    }\r\n    public static void drawMap(Map mapTest) {\r\n        map = mapTest;\r\n        zoomRate = 800/map.getLength();\r\n        JFrame frame = new JFrame();\r\n        frame.setSize(WIDTH, HEIGHT);\r\n        frame.add(new PixelCanvas());\r\n        frame.setVisible(true);\r\n    }\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/controller/PixelCanvas.java b/crusader/src/main/java/controller/PixelCanvas.java
+--- a/crusader/src/main/java/controller/PixelCanvas.java	(revision c0a44e906e1a927d708f4044707a0809bcda5b24)
++++ b/crusader/src/main/java/controller/PixelCanvas.java	(date 1682946868990)
+@@ -56,7 +56,7 @@
+         }
+     }
+     public static void drawMap(Map mapTest) {
+-        map = mapTest;
++        map = GameMaps.createMap2();
+         zoomRate = 800/map.getLength();
+         JFrame frame = new JFrame();
+         frame.setSize(WIDTH, HEIGHT);
+Index: crusader/src/main/java/controller/MapController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package controller;\r\n\r\nimport controller.gamestructure.GameBuildings;\r\nimport controller.gamestructure.GameHumans;\r\nimport enumeration.Textures;\r\nimport enumeration.dictionary.RockDirections;\r\nimport enumeration.dictionary.Trees;\r\nimport model.Government;\r\nimport model.building.Building;\r\nimport model.building.castlebuildings.CastleBuilding;\r\nimport model.building.castlebuildings.Wall;\r\nimport model.building.storagebuildings.StorageBuilding;\r\nimport model.buildinghandler.BuildingCounter;\r\nimport model.game.Map;\r\nimport model.game.Tile;\r\nimport model.human.Human;\r\nimport model.human.civilian.Civilian;\r\nimport model.human.military.Military;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\npublic class MapController {\r\n    private static Map map;\r\n\r\n    public static String setTexture(int x, int y, Textures type) {\r\n        map.getTile(x, y).setTexture(type);\r\n        return \"texture of tile (\" + x + \", \" + y + \") changed to \" + type.getTextureName() + \" successfully\";\r\n    }\r\n\r\n    public static String setTexture(int x1, int x2, int y1, int y2, Textures type) {\r\n        for (int i = y1; i <= y2; i++) {\r\n            for (int j = x1; j <= x2; j++) {\r\n                map.getTile(i, j).setTexture(type);\r\n            }\r\n        }\r\n        return \"texture of tiles from (\" + x1 + \", \" + y1 + \") to (\" + x2 + \", \" + y2 + \") changed to \" + type.getTextureName() + \"successfully\";\r\n    }\r\n\r\n    public static String clearTile(int x, int y) {\r\n        Tile tile = map.getTile(x, y);\r\n        tile.clearCivilian();\r\n        tile.clearMilitary();\r\n        tile.setTexture(Textures.EARTH);\r\n        if (tile.getBuilding() != null) {\r\n            Building building = tile.getBuilding();\r\n            deleteBuilding(building);\r\n        }\r\n\r\n        return \"tile (\" + x + \", \" + y + \") cleared successfully\";\r\n    }\r\n\r\n    public static String dropRock(int x, int y, RockDirections direction) {\r\n        map.getTile(x, y).setRockDirection(direction);\r\n\r\n        return \"rock added in (\" + x + \", \" + y + \") with \" + direction.getDirection() + \" direction\";\r\n    }\r\n\r\n    public static String dropTree(int x, int y, Trees tree) {\r\n        map.getTile(x, y).setTree(tree);\r\n\r\n        return tree.getTreeName() + \" added to (\" + x + \", \" + y + \") successfully\";\r\n    }\r\n\r\n\r\n    public static boolean checkCanPutBuilding(int x, int y, String type, Government government) {\r\n        Building building = GameBuildings.getBuilding(type, government, x, y);\r\n        if (building == null) {\r\n            return false;\r\n        }\r\n\r\n        if (x + building.getWidth() >= map.getWidth()) {\r\n            return false;\r\n        }\r\n        if (y + building.getLength() >= map.getLength()) {\r\n            return false;\r\n        }\r\n        if (building instanceof StorageBuilding && !checkCanPutStorage(x, y, (StorageBuilding) building)) {\r\n            return false;\r\n        }\r\n        for (int i = y - 1; i < y + building.getLength(); i++) {\r\n            for (int j = x - 1; j < x + building.getWidth(); j++) {\r\n                if (building instanceof CastleBuilding) {\r\n                    if (!canPutCastleBuilding(x, y, (CastleBuilding) building)) {\r\n                        return false;\r\n                    }\r\n                } else if (!map.getTile(i, j).getCanPutBuilding()) {\r\n                    return false;\r\n                }\r\n                if (building.getHasSpecialTexture()) {\r\n                    if (!building.getSuitableTextures().contains(map.getTile(i, j).getTexture())) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static void dropBuilding(int x, int y, String type, Government government) {\r\n        Building building = GameBuildings.getBuilding(type, government, x, y);\r\n        for (int i = y - 1; i < y + Objects.requireNonNull(building).getLength(); i++) {\r\n            for (int j = x - 1; j < x + building.getWidth(); j++) {\r\n                Tile tile = map.getTile(j, i);\r\n\r\n                if(building.isShouldBeOne()){\r\n                    deleteOtherBuildingWithThisType(building);\r\n                }\r\n\r\n\r\n                tile.setCanPutBuilding(false);\r\n                Textures textures = Textures.EARTH_AND_SAND;\r\n                if (building.getHasSpecialTexture()) {\r\n                    textures = building.getSuitableTextures().get(0);\r\n                }\r\n                tile.setBuilding(building);\r\n                if (building.getBuildingImpassableLength() != -1) {\r\n                    if (i >= building.getBuildingImpassableLength() || j >= building.getBuildingImpassableLength()) {\r\n                        tile.setPassable(true);\r\n                    } else {\r\n                        tile.setPassable(false);\r\n                        tile.setTexture(textures);\r\n                    }\r\n                } else {\r\n                    tile.setPassable(false);\r\n                    tile.setTexture(textures);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static ArrayList<Military> getMilitariesOfGovernment(int x, int y, Government government) {\r\n        ArrayList<Military> militaries = new ArrayList<>();\r\n        Tile tile = map.getTile(x, y);\r\n        for (Military military : tile.getMilitaries()) {\r\n            if (military.getGovernment().getColor().equals(government.getColor())) {\r\n                militaries.add(military);\r\n            }\r\n        }\r\n        return militaries;\r\n    }\r\n    public static ArrayList<Military> getMilitariesOfOtherGovernment(int x, int y, Government government) {\r\n        ArrayList<Military> militaries = new ArrayList<>();\r\n        Tile tile = map.getTile(x, y);\r\n        for (Military military : tile.getMilitaries()) {\r\n            if (!military.getGovernment().getColor().equals(government.getColor())) {\r\n                militaries.add(military);\r\n            }\r\n        }\r\n        return militaries;\r\n    }\r\n    public static ArrayList<Military> getOneTypeOfMilitariesOfGovernment(int x, int y,String type, Government government) {\r\n        ArrayList<Military> militaries = new ArrayList<>();\r\n        Tile tile = map.getTile(x, y);\r\n        for (Military military : tile.getMilitaries()) {\r\n            if (military.getGovernment().getColor().equals(government.getColor()) && military.getName().equals(type)) {\r\n                militaries.add(military);\r\n            }\r\n        }\r\n        return militaries;\r\n    }\r\n\r\n    public static boolean checkCanPutMilitary(int x, int y, String type, Government government) {\r\n        Military military = GameHumans.getUnit(type, government, x, y);\r\n        Tile tile = map.getTile(x - 1, y - 1);\r\n        return tile.isPassable();\r\n    }\r\n\r\n    public static void dropMilitary(int x, int y, String type, Government government) {\r\n        Military military = GameHumans.getUnit(type, government, x, y);\r\n        Tile tile = map.getTile(x - 1, y - 1);\r\n        government.addMilitary(military);\r\n        tile.addMilitary(military);\r\n    }\r\n\r\n    public static void deleteMilitary(int x, int y, Military military) {\r\n        Tile tile = map.getTile(x, y);\r\n        military.getGovernment().removeMilitary(military);\r\n        tile.removeMilitary(military);\r\n    }\r\n\r\n    public static void addMilitary(int x, int y, Military military) {\r\n        Tile tile = map.getTile(x, y);\r\n        military.getGovernment().addMilitary(military);\r\n        tile.addMilitary(military);\r\n    }\r\n\r\n    public static void moveMilitary(int x, int y,Military military){\r\n        deleteMilitary(military.getX(), military.getY(), military);\r\n        addMilitary(x,y, military);\r\n        military.setX(x);\r\n        military.setY(y);\r\n    }\r\n\r\n    public static void deleteHuman(int x, int y, Civilian civilian) {\r\n        Tile tile = map.getTile(x, y);\r\n        civilian.getGovernment().removeHuman(civilian);\r\n        tile.removeHuman(civilian);\r\n    }\r\n\r\n    public static void addHuman(int x, int y, Civilian civilian) {\r\n        Tile tile = map.getTile(x, y);\r\n        civilian.getGovernment().addHuman(civilian);\r\n        tile.addHuman(civilian);\r\n    }\r\n\r\n\r\n    public static void moveHuman(int x, int y, Civilian civilian){\r\n        deleteHuman(civilian.getX(), civilian.getY(), civilian);\r\n        addHuman(x,y, civilian);\r\n        civilian.setX(x);\r\n        civilian.setY(y);\r\n    }\r\n    public static boolean checkCanPutStorage(int x, int y, StorageBuilding storageBuilding) {\r\n        int startX = x - 1;\r\n        int startY = y - 1;\r\n        int endX = x + storageBuilding.getWidth() - 1;\r\n        int endY = y + storageBuilding.getLength() - 1;\r\n\r\n\r\n        if (startY != 0) {\r\n            for (int j = startX; j <= endX; j++) {\r\n                Tile tile = map.getTile(j, startY - 1);\r\n                if (tile.getBuilding() != null && tile.getBuilding().getName().equals(storageBuilding.getName())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (startX != 0) {\r\n            for (int i = startY; i <= endY; i++) {\r\n                Tile tile = map.getTile(startX - 1, i);\r\n                if (tile.getBuilding() != null && tile.getBuilding().getName().equals(storageBuilding.getName())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if (endX != map.getWidth() - 1) {\r\n            for (int i = startY; i <= endY; i++) {\r\n                Tile tile = map.getTile(endX + 1, i);\r\n                if (tile.getBuilding() != null && tile.getBuilding().getName().equals(storageBuilding.getName())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (endY != map.getLength() - 1) {\r\n            for (int j = startX; j <= endX; j++) {\r\n                Tile tile = map.getTile(j, endY + 1);\r\n                if (tile.getBuilding() != null && tile.getBuilding().getName().equals(storageBuilding.getName())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static boolean canPutCastleBuilding(int x, int y, CastleBuilding building) {\r\n        Tile tile = map.getTile(x, y);\r\n        if (tile.getCanPutBuilding()) {\r\n            return true;\r\n        } else return tile.getBuilding() instanceof Wall;\r\n    }\r\n\r\n    public static void deleteOtherBuildingWithThisType(Building building) {\r\n        Government government = GameController.getGame().getCurrentGovernment();\r\n        BuildingCounter buildingCounter = government.getBuildingData(building.getName());\r\n        if (buildingCounter.getNumber() == 0) {\r\n            return;\r\n        }\r\n\r\n        Building shouldDelete = buildingCounter.getBuildings().get(0);\r\n        buildingCounter.deleteBuilding(shouldDelete);\r\n        deleteBuilding(shouldDelete);\r\n    }\r\n\r\n    public static void deleteBuilding(Building building) {\r\n        int xx = building.getStartX();\r\n        int yy = building.getStartY();\r\n        for (int i = yy - 1; i < yy + building.getLength(); i++) {\r\n            for (int j = xx - 1; j < xx + building.getWidth(); j++) {\r\n                Tile tileOfBuilding = map.getTile(j, i);\r\n                tileOfBuilding.setCanPutBuilding(true);\r\n                tileOfBuilding.setPassable(true);\r\n                tileOfBuilding.setBuilding(null);\r\n            }\r\n        }\r\n        BuildingCounter buildingCounter = building.getGovernment().getBuildingData(building.getName());\r\n        buildingCounter.deleteBuilding(building);\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/controller/MapController.java b/crusader/src/main/java/controller/MapController.java
+--- a/crusader/src/main/java/controller/MapController.java	(revision c0a44e906e1a927d708f4044707a0809bcda5b24)
++++ b/crusader/src/main/java/controller/MapController.java	(date 1682950802194)
+@@ -161,14 +161,18 @@
+     }
+ 
+     public static boolean checkCanPutMilitary(int x, int y, String type, Government government) {
+-        Military military = GameHumans.getUnit(type, government, x, y);
++        Military military = GameHumans.getUnit(type);
++        if(military == null){
++            return false;
++        }
++
+         Tile tile = map.getTile(x - 1, y - 1);
+         return tile.isPassable();
+     }
+ 
+     public static void dropMilitary(int x, int y, String type, Government government) {
+         Military military = GameHumans.getUnit(type, government, x, y);
+-        Tile tile = map.getTile(x - 1, y - 1);
++        Tile tile = map.getTile(x, y);
+         government.addMilitary(military);
+         tile.addMilitary(military);
+     }
+Index: crusader/src/main/java/controller/gamestructure/GameMaps.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package controller.gamestructure;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\nimport controller.DBController;\r\nimport controller.GameController;\r\nimport controller.MapController;\r\nimport enumeration.Paths;\r\nimport enumeration.Textures;\r\nimport enumeration.commands.MapCommands;\r\nimport enumeration.dictionary.RockDirections;\r\nimport enumeration.dictionary.Trees;\r\nimport model.game.Game;\r\nimport model.game.Map;\r\n\r\nimport java.io.File;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.util.HashMap;\r\n\r\npublic class GameMaps {\r\n    private static HashMap<String , Map> maps = new HashMap<>();\r\n    private static void changeTextureOfSomeTiles(int x1 , int x2 , int y1, int y2 , Map map , Textures texture) {\r\n        for (int i = x1; i <= x2; i++) {\r\n            for (int j = y1; j <= y2; j++) {\r\n                map.getTile(i , j).setTexture(texture);\r\n            }\r\n        }\r\n    }\r\n    public static void createMap1() {\r\n        Map map1 = new Map(401 , 401);\r\n        changeTextureOfSomeTiles(15 , 60 , 15 , 40 , map1 , Textures.IRON_TEXTURE);\r\n        for (int i = 5; i <= 45; i++) {\r\n            for (int j = 40; j <= 40 + i; j++) {\r\n                map1.getTile(i , j).setTexture(Textures.ROCK_TEXTURE);\r\n            }\r\n        }\r\n        changeTextureOfSomeTiles(60 , 100 , 0 , 60 , map1 , Textures.MARSH);\r\n        for (int i = 70; i <= 100 ;i++) {\r\n            map1.getTile(i , i).setRockDirection(RockDirections.getRandomDirection());\r\n        }\r\n        for (int i = 100; i >= 50; i--) {\r\n            map1.getTile(i , 200-i).setRockDirection(RockDirections.getRandomDirection());\r\n        }\r\n        changeTextureOfSomeTiles(105 , 110 , 0 , 50 , map1 , Textures.RIVER);\r\n        for (int i = 105; i <= 155; i++) {\r\n            map1.getTile(i , 50 + (i - 105)).setTexture(Textures.RIVER);\r\n        }\r\n        changeTextureOfSomeTiles(10 , 40 , 138 , 142 , map1 , Textures.GRASS);\r\n        map1.getTile(95 , 80).setTree(Trees.OLIVE_TREE);\r\n        changeTextureOfSomeTiles(120 , 200 , 105 , 110 , map1 , Textures.THICK_GRASS);\r\n        changeTextureOfSomeTiles(150 , 220 , 150 , 170 , map1 , Textures.MARSH);\r\n        for (int i = 155; i <= 185; i++) {\r\n            map1.getTile(i , 20+i-155).setRockDirection(RockDirections.getRandomDirection());\r\n        }\r\n        map1.getTile(220 , 25).setTree(Trees.DATE_PALM);\r\n        changeTextureOfSomeTiles(350 , 390 , 40 , 70 , map1 , Textures.BOULDER);\r\n        changeTextureOfSomeTiles(270 , 305 , 65 , 95 , map1 , Textures.IRON_TEXTURE);\r\n        changeTextureOfSomeTiles(330 , 400 , 80 , 160 , map1 , Textures.GRASS);\r\n        changeTextureOfSomeTiles(330 , 360 , 160 , 220 , map1 , Textures.GRASS);\r\n        changeTextureOfSomeTiles(270 , 310 , 140 , 180 , map1 , Textures.BOULDER);\r\n        changeTextureOfSomeTiles(0 , 50 , 50 , 400 , map1 , Textures.THICK_GRASS);\r\n        map1.getTile(90 , 260).setTree(Trees.CHERRY_PALM);\r\n        map1.getTile(90 , 261).setTree(Trees.DATE_PALM);\r\n        map1.getTile(90 , 262).setTree(Trees.COCONUT_PALM);\r\n        changeTextureOfSomeTiles(100 , 150 , 220 , 250 , map1 , Textures.IRON_TEXTURE);\r\n        changeTextureOfSomeTiles(140 , 170 , 300 , 330 , map1 , Textures.BOULDER);\r\n        changeTextureOfSomeTiles(205 , 250 , 285 , 350 , map1 , Textures.OASIS_GRASS);\r\n        changeTextureOfSomeTiles(205 , 220 , 350 , 370 , map1 , Textures.OIL);\r\n        changeTextureOfSomeTiles(330 , 400 , 330 , 400 , map1 , Textures.SEA);\r\n        changeTextureOfSomeTiles(360 , 400 , 280 , 310 , map1 , Textures.IRON_TEXTURE);\r\n        map1.addDefaultCastle(85 , 100);\r\n        map1.addDefaultCastle(180 , 30);\r\n        map1.addDefaultCastle(330 , 25);\r\n        map1.addDefaultCastle(365 , 200);\r\n        map1.addDefaultCastle(290 , 340);\r\n        map1.addDefaultCastle(80 , 380);\r\n        map1.addDefaultCastle(200 , 250);\r\n        map1.addDefaultCastle(30 , 280);\r\n        maps.put(\"map1\" , map1);\r\n    }\r\n\r\n    public static void createMap2() {\r\n        Map map2 = new Map(201 , 201);\r\n        changeTextureOfSomeTiles(50 , 85 , 75 , 140 , map2 , Textures.SEA);\r\n        changeTextureOfSomeTiles(25 , 50 , 115 , 140 , map2 , Textures.ROCK_TEXTURE);\r\n        for (int i = 25; i <= 50; i++) {\r\n            map2.getTile(i , 114).setTree(Trees.DESERT_SHRUB);\r\n        }\r\n        changeTextureOfSomeTiles(35 , 45 , 100 , 114 , map2 , Textures.BOULDER);\r\n        changeTextureOfSomeTiles(45 , 55 , 100 , 110 , map2 , Textures.IRON_TEXTURE);\r\n        changeTextureOfSomeTiles(30 , 50 , 140 , 150 , map2 , Textures.BOULDER);\r\n        changeTextureOfSomeTiles(0 , 40 , 0 , 50 , map2 , Textures.THICK_GRASS);\r\n        for (int i = 20; i <= 30; i++) {\r\n            for (int j = 20; j <= 30; j++) {\r\n                map2.getTile(i , j).setTree(Trees.OLIVE_TREE);\r\n            }\r\n        }\r\n        changeTextureOfSomeTiles(45 , 60 , 35 , 55 , map2 , Textures.OIL);\r\n        changeTextureOfSomeTiles(15 , 30 , 80 , 95 , map2 , Textures.BOULDER);\r\n        changeTextureOfSomeTiles(0 , 15 , 130 , 150 , map2 , Textures.IRON_TEXTURE);\r\n        changeTextureOfSomeTiles(0 , 20 , 160 , 185 , map2 , Textures.OASIS_GRASS);\r\n        changeTextureOfSomeTiles(120 , 140 , 165 , 175 , map2 , Textures.BOULDER);\r\n        changeTextureOfSomeTiles(180 , 195 , 150 , 165 , map2 , Textures.IRON_TEXTURE);\r\n        changeTextureOfSomeTiles(150 ,170 , 130 , 150 , map2 , Textures.GRASS);\r\n        changeTextureOfSomeTiles(130 , 180 , 0 , 60 , map2 , Textures.OASIS_GRASS);\r\n        changeTextureOfSomeTiles(190 , 200, 40 , 50 , map2 , Textures.ROCK_TEXTURE);\r\n        changeTextureOfSomeTiles(100 , 115 , 5 , 15 , map2 , Textures.IRON_TEXTURE);\r\n        map2.getTile(100 , 130).setTree(Trees.COCONUT_PALM);\r\n        map2.getTile(100 , 131).setTree(Trees.CHERRY_PALM);\r\n        map2.getTile(99 , 129).setTree(Trees.DATE_PALM);\r\n        map2.getTile(100 , 132).setTree(Trees.DESERT_SHRUB);\r\n        map2.getTile(99,128).setTree(Trees.DESERT_SHRUB);\r\n        map2.getTile(1 , 1).setRockDirection(RockDirections.getRandomDirection());\r\n        map2.getTile(1,4).setRockDirection(RockDirections.getRandomDirection());\r\n        map2.addDefaultCastle(25 , 60);\r\n        map2.addDefaultCastle(85 , 35);\r\n        map2.addDefaultCastle(170 , 40);\r\n        map2.addDefaultCastle(120 , 90);\r\n        map2.addDefaultCastle(35 , 180);\r\n        map2.addDefaultCastle(110 , 180);\r\n        map2.addDefaultCastle(180 , 180);\r\n        map2.addDefaultCastle(190 , 120);\r\n        maps.put(\"map2\" , map2);\r\n        System.out.println(GameController.showPreviewOfMap(map2));\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/controller/gamestructure/GameMaps.java b/crusader/src/main/java/controller/gamestructure/GameMaps.java
+--- a/crusader/src/main/java/controller/gamestructure/GameMaps.java	(revision c0a44e906e1a927d708f4044707a0809bcda5b24)
++++ b/crusader/src/main/java/controller/gamestructure/GameMaps.java	(date 1682944551103)
+@@ -27,7 +27,7 @@
+             }
+         }
+     }
+-    public static void createMap1() {
++    public static Map createMap1() {
+         Map map1 = new Map(401 , 401);
+         changeTextureOfSomeTiles(15 , 60 , 15 , 40 , map1 , Textures.IRON_TEXTURE);
+         for (int i = 5; i <= 45; i++) {
+@@ -78,9 +78,10 @@
+         map1.addDefaultCastle(200 , 250);
+         map1.addDefaultCastle(30 , 280);
+         maps.put("map1" , map1);
++        return map1;
+     }
+ 
+-    public static void createMap2() {
++    public static Map createMap2() {
+         Map map2 = new Map(201 , 201);
+         changeTextureOfSomeTiles(50 , 85 , 75 , 140 , map2 , Textures.SEA);
+         changeTextureOfSomeTiles(25 , 50 , 115 , 140 , map2 , Textures.ROCK_TEXTURE);
+@@ -122,6 +123,7 @@
+         map2.addDefaultCastle(180 , 180);
+         map2.addDefaultCastle(190 , 120);
+         maps.put("map2" , map2);
+-        System.out.println(GameController.showPreviewOfMap(map2));
++        //System.out.println(GameController.showPreviewOfMap(map2));
++        return map2;
+     }
+ }
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"48940bc5-fa6d-4a81-b88a-cb236d4b61a3\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/crusader/src/main/java/controller/PixelCanvas.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/crusader/src/main/java/controller/gamestructure/GameMaps.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/crusader/src/main/java/controller/gamestructure/GameMaps.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"MitraGh\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OeZJGtSER9mrxhoyWb8D0vXmSP\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Sharif/Term2/AP/Project/Project-Phase-1&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.fonts.default&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"model\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\test\\java\\controller\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\main\\java\" />\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\test\\java\\menu\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.PixelCanvas\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"StrongholdCrusader\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"PixelCanvas\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.PixelCanvas\" />\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.changeEmailTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"changeEmailTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.removeSloganTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"removeSloganTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.PixelCanvas\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.changeEmailTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.removeSloganTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"48940bc5-fa6d-4a81-b88a-cb236d4b61a3\" name=\"Changes\" comment=\"\" />\r\n      <created>1681922938440</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681922938440</updated>\r\n      <workItem from=\"1681922940573\" duration=\"1143000\" />\r\n      <workItem from=\"1681937070375\" duration=\"893000\" />\r\n      <workItem from=\"1681941196344\" duration=\"7452000\" />\r\n      <workItem from=\"1681984358797\" duration=\"16524000\" />\r\n      <workItem from=\"1682023951191\" duration=\"511000\" />\r\n      <workItem from=\"1682056344653\" duration=\"7886000\" />\r\n      <workItem from=\"1682067403104\" duration=\"102000\" />\r\n      <workItem from=\"1682073593485\" duration=\"1034000\" />\r\n      <workItem from=\"1682087981704\" duration=\"15062000\" />\r\n      <workItem from=\"1682116199375\" duration=\"2705000\" />\r\n      <workItem from=\"1682149028155\" duration=\"14217000\" />\r\n      <workItem from=\"1682174575839\" duration=\"72000\" />\r\n      <workItem from=\"1682174654488\" duration=\"103000\" />\r\n      <workItem from=\"1682174764146\" duration=\"99000\" />\r\n      <workItem from=\"1682180160196\" duration=\"2544000\" />\r\n      <workItem from=\"1682202541014\" duration=\"27766000\" />\r\n      <workItem from=\"1682333857238\" duration=\"49000\" />\r\n      <workItem from=\"1682334932839\" duration=\"1014000\" />\r\n      <workItem from=\"1682353770879\" duration=\"1777000\" />\r\n      <workItem from=\"1682371298142\" duration=\"130000\" />\r\n      <workItem from=\"1682411331249\" duration=\"72000\" />\r\n      <workItem from=\"1682438061345\" duration=\"1337000\" />\r\n      <workItem from=\"1682442721294\" duration=\"11971000\" />\r\n      <workItem from=\"1682681015033\" duration=\"40000\" />\r\n      <workItem from=\"1682872449211\" duration=\"20055000\" />\r\n      <workItem from=\"1682923931065\" duration=\"16000\" />\r\n      <workItem from=\"1682923971381\" duration=\"14000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"...\">\r\n      <created>1681925358549</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681925358549</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"some tests added.\">\r\n      <created>1681944373098</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681944373098</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"some enums are edited.\">\r\n      <created>1681995637116</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681995637116</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Resources added.\">\r\n      <created>1681999798822</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681999798822</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Foods\">\r\n      <created>1682000666231</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682000666231</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Foods are added.\">\r\n      <created>1682001101623</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682001101623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Humans are added.\">\r\n      <created>1682001707158</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682001707158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Humans are added. (final)\">\r\n      <created>1682002807377</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682002807377</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"stay logged in.\">\r\n      <created>1682021001755</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682021001755</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Storage and producer buildings...\">\r\n      <created>1682062460681</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682062460681</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Texture passable conditions ...\">\r\n      <created>1682063924968</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682063924968</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Main castle added.\">\r\n      <created>1682103062158</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682103062158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Walls, Draw bridge and gatehouses are added.\">\r\n      <created>1682115730401</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682115730401</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Towers added.\">\r\n      <created>1682165652089</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682165652089</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"castle buildings changed.\">\r\n      <created>1682168093012</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682168093012</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"castle buildings final change.\">\r\n      <created>1682172406877</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682172406877</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"method convertPasswordToHash() edited.\">\r\n      <created>1682189114122</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682189114122</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"a bug solved.\">\r\n      <created>1682237172223</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682237172223</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Building menu and Buildings dictionary. (first try)\">\r\n      <created>1682255351548</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682255351548</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Building menu (second try)\">\r\n      <created>1682289033211</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682289033211</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Building menu (second try)\">\r\n      <created>1682289065083</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682289065083</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"a commit to solve a problem.\">\r\n      <created>1682353891980</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682353891980</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"building menu edited.\">\r\n      <created>1682354296419</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682354296419</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"adding tree to Tile class\">\r\n      <created>1682439002928</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682439002928</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"just commit\">\r\n      <created>1682447586540</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682447586540</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Building menu updated&#10;and some enums edited.\">\r\n      <created>1682451476656</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682451476656</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"the last commits before checkpoint 1 ...\">\r\n      <created>1682453168189</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682453168189</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Repair added to Building controller.\">\r\n      <created>1682454117656</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682454117656</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"some features added to Government and its controller&#10;try for creating template maps\">\r\n      <created>1682898170788</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682898170788</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"Show preview map (Trial)\">\r\n      <created>1682933749254</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682933749254</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"Show preview map (Trial)\">\r\n      <created>1682933904570</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682933904570</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"add defaults castles to Show preview map (Trial)\">\r\n      <created>1682935784161</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682935784161</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"33\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Humans are added. (final)\" />\r\n    <MESSAGE value=\"stay logged in.\" />\r\n    <MESSAGE value=\"Storage and producer buildings...\" />\r\n    <MESSAGE value=\"Texture passable conditions ...\" />\r\n    <MESSAGE value=\"Main castle added.\" />\r\n    <MESSAGE value=\"Walls, Draw bridge and gatehouses are added.\" />\r\n    <MESSAGE value=\"Towers added.\" />\r\n    <MESSAGE value=\"castle buildings changed.\" />\r\n    <MESSAGE value=\"castle buildings final change.\" />\r\n    <MESSAGE value=\"method convertPasswordToHash() edited.\" />\r\n    <MESSAGE value=\"a bug solved.\" />\r\n    <MESSAGE value=\"Building menu and Buildings dictionary. (first try)\" />\r\n    <MESSAGE value=\"Building menu (second try)\" />\r\n    <MESSAGE value=\"a commit to sove a problem.\" />\r\n    <MESSAGE value=\"a commit to solve a problem.\" />\r\n    <MESSAGE value=\"building menu edited.\" />\r\n    <MESSAGE value=\"adding tree to Tile class\" />\r\n    <MESSAGE value=\"just commit\" />\r\n    <MESSAGE value=\"Building menu updated&#10;and some enums edited.\" />\r\n    <MESSAGE value=\"the last commits before checkpoint 1 ...\" />\r\n    <MESSAGE value=\"Repair added to Building controller.\" />\r\n    <MESSAGE value=\"some features added to Government and its controller&#10;try for creating template maps\" />\r\n    <MESSAGE value=\"Map 1 (400*400) created.\" />\r\n    <MESSAGE value=\"Show preview map (Trial)\" />\r\n    <MESSAGE value=\"add defaults castles to Show preview map (Trial)\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add defaults castles to Show preview map (Trial)\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic\" NAME=\"UserControllerTest.changeEmailTest Coverage Results\" MODIFIED=\"1681944150811\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>controller.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/Project_Phase_1$UserControllerTest.ic\" NAME=\"UserControllerTest Coverage Results\" MODIFIED=\"1681942420279\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>controller.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision c0a44e906e1a927d708f4044707a0809bcda5b24)
++++ b/.idea/workspace.xml	(date 1682948762609)
+@@ -5,8 +5,10 @@
+   </component>
+   <component name="ChangeListManager">
+     <list default="true" id="48940bc5-fa6d-4a81-b88a-cb236d4b61a3" name="Changes" comment="">
+-      <change afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/PixelCanvas.java" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/Main.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/MapController.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/MapController.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/PixelCanvas.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/PixelCanvas.java" afterDir="false" />
+       <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/gamestructure/GameMaps.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/gamestructure/GameMaps.java" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+@@ -70,7 +72,7 @@
+       <recent name="D:\Sharif\Term2\AP\Project\Project-Phase-1\crusader\src\test\java\menu" />
+     </key>
+   </component>
+-  <component name="RunManager" selected="Application.PixelCanvas">
++  <component name="RunManager" selected="Application.Main">
+     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+       <option name="MAIN_CLASS_NAME" value="Main" />
+       <module name="StrongholdCrusader" />
+@@ -140,8 +142,8 @@
+     </configuration>
+     <recent_temporary>
+       <list>
+-        <item itemvalue="Application.PixelCanvas" />
+         <item itemvalue="Application.Main" />
++        <item itemvalue="Application.PixelCanvas" />
+         <item itemvalue="JUnit.UserControllerTest.changeEmailTest" />
+         <item itemvalue="JUnit.UserControllerTest" />
+         <item itemvalue="JUnit.UserControllerTest.removeSloganTest" />
+@@ -408,7 +410,14 @@
+       <option name="project" value="LOCAL" />
+       <updated>1682935784161</updated>
+     </task>
+-    <option name="localTasksCounter" value="33" />
++    <task id="LOCAL-00033" summary="preview map pixel">
++      <created>1682946743429</created>
++      <option name="number" value="00033" />
++      <option name="presentableId" value="LOCAL-00033" />
++      <option name="project" value="LOCAL" />
++      <updated>1682946743429</updated>
++    </task>
++    <option name="localTasksCounter" value="34" />
+     <servers />
+   </component>
+   <component name="TypeScriptGeneratedFilesManager">
+@@ -426,7 +435,6 @@
+     </option>
+   </component>
+   <component name="VcsManagerConfiguration">
+-    <MESSAGE value="Humans are added. (final)" />
+     <MESSAGE value="stay logged in." />
+     <MESSAGE value="Storage and producer buildings..." />
+     <MESSAGE value="Texture passable conditions ..." />
+@@ -451,7 +459,8 @@
+     <MESSAGE value="Map 1 (400*400) created." />
+     <MESSAGE value="Show preview map (Trial)" />
+     <MESSAGE value="add defaults castles to Show preview map (Trial)" />
+-    <option name="LAST_COMMIT_MESSAGE" value="add defaults castles to Show preview map (Trial)" />
++    <MESSAGE value="preview map pixel" />
++    <option name="LAST_COMMIT_MESSAGE" value="preview map pixel" />
+   </component>
+   <component name="XSLT-Support.FileAssociations.UIState">
+     <expand />
Index: ../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_15_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_15_PM_[Changes]/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_15_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1682934358000)
+++ b/../.idea/shelf/Uncommitted_changes_before_Update_at_5_1_2023_1_15_PM_[Changes]/shelved.patch	(date 1682934358000)
@@ -0,0 +1,900 @@
+Index: crusader/src/main/java/enumeration/commands/UnitMenuCommands.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package enumeration.commands;\r\n\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic enum UnitMenuCommands {\r\n    MOVE_UNIT(\"move unit to(?<items>.+)\"),\r\n    PATROL_UNIT(\"patrol unit(?<items>.+)\"),\r\n    SET_UNIT_STATE(\"set(?<items>.+)\"),\r\n    ATTACK(\"attack(?<items>.+)\"),\r\n    POUR_OIL(\"pour oil -d (?<direction>(\\\"[^\\\"]\\\"|\\\\S+))\"),\r\n    DIG_TUNNEL(\"dig tunnel(?<items>.+)\"),\r\n    BUILD(\"build\"),\r\n    DIG_MOAT(\"dig moat\"),\r\n    DISBAND_UNIT(\"disband unit\"),\r\n    X_ITEM(\" -x (?<x>\\\\d+)\"),\r\n    Y_ITEM(\" -y (?<y>\\\\d+)\"),\r\n    X1_ITEM(\" -x1 (?<x1>\\\\d+)\"),\r\n    Y1_ITEM(\" -y1 (?<y1>\\\\d+\"),\r\n    X2_ITEM(\" -x2 (?<x2>\\\\d+)\"),\r\n    Y2_ITEM(\" -y2 (?<y2>\\\\d+\"),\r\n    S_ITEM(\" -s (?<state>(\\\"[^\\\"]\\\"|\\\\S+))\");\r\n    private final String regex;\r\n\r\n    UnitMenuCommands(String regex) {\r\n        this.regex = regex;\r\n    }\r\n\r\n    public static Matcher getMatcher(String input, UnitMenuCommands command) {\r\n        Pattern pattern = Pattern.compile(command.regex);\r\n        return pattern.matcher(input);\r\n    }\r\n\r\n    public String getRegex() {\r\n        return regex;\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/enumeration/commands/UnitMenuCommands.java b/crusader/src/main/java/enumeration/commands/UnitMenuCommands.java
+--- a/crusader/src/main/java/enumeration/commands/UnitMenuCommands.java	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/crusader/src/main/java/enumeration/commands/UnitMenuCommands.java	(date 1682930124325)
+@@ -4,22 +4,24 @@
+ import java.util.regex.Pattern;
+ 
+ public enum UnitMenuCommands {
+-    MOVE_UNIT("move unit to(?<items>.+)"),
+-    PATROL_UNIT("patrol unit(?<items>.+)"),
+-    SET_UNIT_STATE("set(?<items>.+)"),
+-    ATTACK("attack(?<items>.+)"),
+-    POUR_OIL("pour oil -d (?<direction>(\"[^\"]\"|\\S+))"),
+-    DIG_TUNNEL("dig tunnel(?<items>.+)"),
++    MOVE_UNIT("move unit to(?<items>.*)"),
++    PATROL_UNIT("patrol unit(?<items>.*)"),
++    DEACTIVATE_PATROL("deactivate patrol"),
++    SET_UNIT_STATE("set(?<items>.*)"),
++    ATTACK_ENEMY("attack enemy"),
++    ATTACK("attack(?<items>.*)"),
++    POUR_OIL("pour oil -d (?<direction>(\"[^\"]*\"|\\S*))"),
++    DIG_TUNNEL("dig tunnel(?<items>.*)"),
+     BUILD("build"),
+     DIG_MOAT("dig moat"),
+     DISBAND_UNIT("disband unit"),
+-    X_ITEM(" -x (?<x>\\d+)"),
+-    Y_ITEM(" -y (?<y>\\d+)"),
+-    X1_ITEM(" -x1 (?<x1>\\d+)"),
+-    Y1_ITEM(" -y1 (?<y1>\\d+"),
+-    X2_ITEM(" -x2 (?<x2>\\d+)"),
+-    Y2_ITEM(" -y2 (?<y2>\\d+"),
+-    S_ITEM(" -s (?<state>(\"[^\"]\"|\\S+))");
++    X_ITEM(" -x (?<x>\\d*)"),
++    Y_ITEM(" -y (?<y>\\d*)"),
++    X1_ITEM(" -x1 (?<x1>\\d*)"),
++    Y1_ITEM(" -y1 (?<y1>\\d*"),
++    X2_ITEM(" -x2 (?<x2>\\d*)"),
++    Y2_ITEM(" -y2 (?<y2>\\d*"),
++    S_ITEM(" -s (?<state>(\"[^\"]*\"|\\S*))");
+     private final String regex;
+ 
+     UnitMenuCommands(String regex) {
+Index: crusader/src/main/java/view/UnitMenu.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package view;\r\n\r\nimport controller.EngineerController;\r\nimport controller.GameController;\r\nimport controller.ViewController;\r\nimport enumeration.answers.Answers;\r\nimport enumeration.commands.Commands;\r\nimport enumeration.commands.UnitMenuCommands;\r\nimport model.human.military.Engineer;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\n\r\npublic class UnitMenu {\r\n    public static void run(Scanner scanner) {\r\n\r\n        String input, output;\r\n        System.out.println(\"<< Unit Menu >>\");\r\n        while (true) {\r\n\r\n            input = scanner.nextLine();\r\n            Matcher moveUnitMenuMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.MOVE_UNIT);\r\n            Matcher patrolUnitMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.PATROL_UNIT);\r\n            Matcher setUnitStateMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.SET_UNIT_STATE);\r\n            Matcher attackMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.ATTACK);\r\n            Matcher pourOilMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.POUR_OIL);\r\n            Matcher digTunnelMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.DIG_TUNNEL);\r\n            Matcher buildMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.BUILD);\r\n            Matcher digMoatMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.DIG_MOAT);\r\n            Matcher disbandUnitMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.DISBAND_UNIT);\r\n            Matcher backMatcher = Commands.getMatcher(input, Commands.BACK);\r\n\r\n\r\n            if (moveUnitMenuMatcher.matches()) {\r\n                String items = moveUnitMenuMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(UnitMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.Y_ITEM.getRegex());\r\n                if (ViewController.isItemMatch(items, itemsPattern)) {\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    output = GameController.moveUnit(x, y);\r\n                    System.out.println(output);\r\n\r\n                    if(output.equals(\"unit(s) moved successfully!\")){\r\n                        return;\r\n                    }\r\n                }\r\n            } else if (patrolUnitMatcher.matches()) {\r\n                String items = patrolUnitMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(UnitMenuCommands.X1_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.Y1_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.X2_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.Y2_ITEM.getRegex());\r\n                if (ViewController.isItemMatch(items, itemsPattern)) {\r\n                    int x1 = Integer.parseInt(ViewController.resultMatcher.group(\"x1\"));\r\n                    int y1 = Integer.parseInt(ViewController.resultMatcher.group(\"y1\"));\r\n                    int x2 = Integer.parseInt(ViewController.resultMatcher.group(\"x2\"));\r\n                    int y2 = Integer.parseInt(ViewController.resultMatcher.group(\"y2\"));\r\n                    output = GameController.patrolUnit(x1, y1, x2, y2);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (setUnitStateMatcher.matches()) {\r\n                String items = setUnitStateMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(UnitMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.Y_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.S_ITEM.getRegex());\r\n                if (ViewController.isItemMatch(items, itemsPattern)) {\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    String state = ViewController.resultMatcher.group(\"state\");\r\n                    state = ViewController.editItem(state);\r\n                    output = GameController.setStateOfMilitary(x, y, state);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (attackMatcher.matches()) {\r\n                String items = attackMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(UnitMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.Y_ITEM.getRegex());\r\n                if (ViewController.isItemMatch(items, itemsPattern)) {\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    output = GameController.attackEnemy(x, y);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (pourOilMatcher.matches()) {\r\n                String direction = pourOilMatcher.group(\"direction\");\r\n                output = GameController.pourOil(direction);\r\n                System.out.println(output);\r\n            } else if (digTunnelMatcher.matches()) {\r\n                String items = digTunnelMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(UnitMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(UnitMenuCommands.Y_ITEM.getRegex());\r\n                if (ViewController.isItemMatch(items, itemsPattern)) {\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    output = GameController.digTunnel(x, y);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (buildMatcher.matches()) {\r\n                runBuild(scanner);\r\n            } else if (digMoatMatcher.matches()) {\r\n//                TODO: return \"invalid command\" if the selected unit is not an engineer\r\n//                TODO: call digMoat()\r\n            } else if (disbandUnitMatcher.matches()) {\r\n                output = GameController.disbandUnit();\r\n                System.out.println(output);\r\n            } else if (backMatcher.matches()) {\r\n                System.out.println(\"<< Game Menu >>\");\r\n                return;\r\n            } else {\r\n                System.out.println(Answers.INVALID_COMMAND.getValue());\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void runBuild(Scanner scanner) {\r\n//        TODO: return \"invalid command\" if the selected unit is not an engineer\r\n        String message = \"select one of the following tools:\\n\";\r\n        message += \"1.Catapult\\n\";\r\n        message += \"2.Trebuchet\\n\";\r\n        message += \"3.Siege Tower\\n\";\r\n        message += \"4.Battering Ram\\n\";\r\n        message += \"5.Portable Shield\\n\";\r\n        message += \"6.Fire Ballista\\n\";\r\n        message += \"7.back\";\r\n        System.out.println(message);\r\n\r\n        boolean back = false;\r\n        int number = 0, x = 0, y = 0;\r\n        while (true) {\r\n            try {\r\n                number = Integer.parseInt(scanner.nextLine());\r\n            } catch (Exception e) {\r\n                System.out.println(\"enter a number:\");\r\n                continue;\r\n            }\r\n            if (number < 1 || number > 7) {\r\n                System.out.println(\"invalid number\\nreenter a number:\");\r\n                continue;\r\n            }\r\n            if (number == 7) back = true;\r\n            break;\r\n        }\r\n\r\n        if (back) return;\r\n\r\n        while (true) {\r\n            System.out.println(\"enter the x and y coordinates:\");\r\n            String coords = scanner.nextLine();\r\n            Matcher xMatcher = UnitMenuCommands.getMatcher(coords, UnitMenuCommands.X_ITEM);\r\n            Matcher yMatcher = UnitMenuCommands.getMatcher(coords, UnitMenuCommands.Y_ITEM);\r\n\r\n            if (!xMatcher.find() || !yMatcher.find()) {\r\n                System.out.println(\"invalid command\");\r\n                continue;\r\n            }\r\n            x = Integer.parseInt(xMatcher.group(\"x\"));\r\n            y = Integer.parseInt(yMatcher.group(\"y\"));\r\n            break;\r\n        }\r\n\r\n        GameController.buildEquipment(number, x, y);\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/view/UnitMenu.java b/crusader/src/main/java/view/UnitMenu.java
+--- a/crusader/src/main/java/view/UnitMenu.java	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/crusader/src/main/java/view/UnitMenu.java	(date 1682931964038)
+@@ -2,11 +2,13 @@
+ 
+ import controller.EngineerController;
+ import controller.GameController;
++import controller.MapController;
+ import controller.ViewController;
+ import enumeration.answers.Answers;
+ import enumeration.commands.Commands;
+ import enumeration.commands.UnitMenuCommands;
+ import model.human.military.Engineer;
++import model.human.military.Military;
+ 
+ import java.util.ArrayList;
+ import java.util.HashMap;
+@@ -14,6 +16,9 @@
+ import java.util.regex.Matcher;
+ 
+ public class UnitMenu {
++    public static int x;
++    public static int y;
++
+     public static void run(Scanner scanner) {
+ 
+         String input, output;
+@@ -23,11 +28,11 @@
+             input = scanner.nextLine();
+             Matcher moveUnitMenuMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.MOVE_UNIT);
+             Matcher patrolUnitMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.PATROL_UNIT);
+-            Matcher setUnitStateMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.SET_UNIT_STATE);
+             Matcher attackMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.ATTACK);
+             Matcher pourOilMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.POUR_OIL);
+             Matcher digTunnelMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.DIG_TUNNEL);
+             Matcher buildMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.BUILD);
++            Matcher attachEnemyMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.ATTACK_ENEMY);
+             Matcher digMoatMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.DIG_MOAT);
+             Matcher disbandUnitMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.DISBAND_UNIT);
+             Matcher backMatcher = Commands.getMatcher(input, Commands.BACK);
+@@ -39,8 +44,8 @@
+                 itemsPattern.add(UnitMenuCommands.X_ITEM.getRegex());
+                 itemsPattern.add(UnitMenuCommands.Y_ITEM.getRegex());
+                 if (ViewController.isItemMatch(items, itemsPattern)) {
+-                    int x = Integer.parseInt(ViewController.resultMatcher.group("x"));
+-                    int y = Integer.parseInt(ViewController.resultMatcher.group("y"));
++                    int x = ViewController.getNumberOfRegex("x");
++                    int y = ViewController.getNumberOfRegex("y");
+                     output = GameController.moveUnit(x, y);
+                     System.out.println(output);
+ 
+@@ -56,35 +61,23 @@
+                 itemsPattern.add(UnitMenuCommands.X2_ITEM.getRegex());
+                 itemsPattern.add(UnitMenuCommands.Y2_ITEM.getRegex());
+                 if (ViewController.isItemMatch(items, itemsPattern)) {
+-                    int x1 = Integer.parseInt(ViewController.resultMatcher.group("x1"));
+-                    int y1 = Integer.parseInt(ViewController.resultMatcher.group("y1"));
+-                    int x2 = Integer.parseInt(ViewController.resultMatcher.group("x2"));
+-                    int y2 = Integer.parseInt(ViewController.resultMatcher.group("y2"));
++                    int x1 = ViewController.getNumberOfRegex("x1");
++                    int y1 = ViewController.getNumberOfRegex("y1");
++                    int x2 = ViewController.getNumberOfRegex("x2");
++                    int y2 = ViewController.getNumberOfRegex("y2");
+                     output = GameController.patrolUnit(x1, y1, x2, y2);
+                     System.out.println(output);
+                 }
+-            } else if (setUnitStateMatcher.matches()) {
+-                String items = setUnitStateMatcher.group("items");
+-                ArrayList<String> itemsPattern = new ArrayList<>();
+-                itemsPattern.add(UnitMenuCommands.X_ITEM.getRegex());
+-                itemsPattern.add(UnitMenuCommands.Y_ITEM.getRegex());
+-                itemsPattern.add(UnitMenuCommands.S_ITEM.getRegex());
+-                if (ViewController.isItemMatch(items, itemsPattern)) {
+-                    int x = Integer.parseInt(ViewController.resultMatcher.group("x"));
+-                    int y = Integer.parseInt(ViewController.resultMatcher.group("y"));
+-                    String state = ViewController.resultMatcher.group("state");
+-                    state = ViewController.editItem(state);
+-                    output = GameController.setStateOfMilitary(x, y, state);
+-                    System.out.println(output);
+-                }
+-            } else if (attackMatcher.matches()) {
++            }  else if (attachEnemyMatcher.matches()) {
++                Military military = getEnemy(scanner);
++            }else if (attackMatcher.matches()) {
+                 String items = attackMatcher.group("items");
+                 ArrayList<String> itemsPattern = new ArrayList<>();
+                 itemsPattern.add(UnitMenuCommands.X_ITEM.getRegex());
+                 itemsPattern.add(UnitMenuCommands.Y_ITEM.getRegex());
+                 if (ViewController.isItemMatch(items, itemsPattern)) {
+-                    int x = Integer.parseInt(ViewController.resultMatcher.group("x"));
+-                    int y = Integer.parseInt(ViewController.resultMatcher.group("y"));
++                    int x = ViewController.getNumberOfRegex("x");
++                    int y = ViewController.getNumberOfRegex("y");
+                     output = GameController.attackEnemy(x, y);
+                     System.out.println(output);
+                 }
+@@ -168,4 +161,15 @@
+ 
+         GameController.buildEquipment(number, x, y);
+     }
++
++
++    public static Military getEnemy(Scanner scanner){
++        ArrayList<Military> militaries = MapController.getMilitariesOfOtherGovernment(x,y,GameController.getGame().getCurrentGovernment());
++        if(militaries.size() == 0){
++            return null;
++        }
++        System.out.println("Choose one of the following troop:");
++
++        return null;
++    }
+ }
+Index: .gitignore
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>/crusader/src/main/java/controller/\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.gitignore b/.gitignore
+--- a/.gitignore	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/.gitignore	(date 1682922791676)
+@@ -1,1 +1,1 @@
+-/crusader/src/main/java/controller/
++/crusader/src/main/java/controller/DeletedController.java
+Index: crusader/src/main/java/controller/GameController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package controller;\r\n\r\nimport controller.human.HumanController;\r\nimport javafx.util.Pair;\r\nimport model.building.Building;\r\nimport model.building.castlebuildings.Wall;\r\nimport model.game.Game;\r\nimport model.game.Map;\r\nimport model.game.Tile;\r\nimport model.human.military.Military;\r\nimport view.UnitMenu;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\n\r\npublic class GameController {\r\n    private static Game game;\r\n\r\n    public static Game getGame() {\r\n        return game;\r\n    }\r\n\r\n    public static void setGame(Game game) {\r\n        GameController.game = game;\r\n    }\r\n\r\n    //TODO handel empty field\r\n    public static String selectUnit(int x, int y, Scanner scanner) {\r\n        Map map = game.getMap();\r\n        if(x < 1 || x > map.getWidth()){\r\n            return \"invalid x!\";\r\n        }\r\n        if(y < 1 || y > map.getLength()){\r\n            return \"invalid y!\";\r\n        }\r\n        ArrayList<Military> militaries = MapController.getMilitariesOfGovernment(x,y,game.getCurrentGovernment());\r\n        if(militaries.size() == 0){\r\n            return \"There is no troop in this place!\";\r\n        }\r\n        HumanController.militaries = militaries;\r\n        UnitMenu.run(scanner);\r\n        return \"\";\r\n    }\r\n\r\n    public static String moveUnit(int x, int y) {\r\n        Map map = game.getMap();\r\n        if(x < 1 || x > map.getWidth()){\r\n            return \"invalid x!\";\r\n        }\r\n        if(y < 1 || y > map.getLength()){\r\n            return \"invalid y!\";\r\n        }\r\n        Pair<Integer,Integer> destination = new Pair<>(y,x);\r\n        boolean check =HumanController.move(destination);\r\n        if(!check){\r\n            return \"can't move unit no path to destination!\";\r\n        }\r\n        return \"unit(s) moved successfully!\";\r\n    }\r\n\r\n    public static String patrolUnit(int x1, int y1, int x2, int y2) {\r\n        Map map = game.getMap();\r\n        if(x1 < 1 || x1 > map.getWidth()){\r\n            return \"invalid x1!\";\r\n        }\r\n        if(y1 < 1 || y1 > map.getLength()){\r\n            return \"invalid y1!\";\r\n        }\r\n        if(x2 < 1 || x2 > map.getWidth()){\r\n            return \"invalid x2!\";\r\n        }\r\n        if(y2 < 1 || y2 > map.getLength()){\r\n            return \"invalid y2!\";\r\n        }\r\n        boolean check = HumanController.patrolUnit(x1,y1,x2,y2);\r\n        if(!check){\r\n            return \"can't start patrol, no path to destination!\";\r\n        }\r\n        return \"patrol started successfully!\";\r\n    }\r\n\r\n    public static String setStateOfMilitary(int x, int y, String state) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String attackEnemy(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String airAttack(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String pourOil(String direction) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String digTunnel(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String buildEquipment(int equipmentNumber, int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String disbandUnit() {\r\n        return \"\";\r\n    }\r\n\r\n    public static String dropBuilding(int x, int y, String type) {\r\n        return \"\";\r\n    }\r\n\r\n    public static String selectBuilding(int x, int y) {\r\n        return \"\";\r\n    }\r\n\r\n\r\n    public static String changeTurn() {\r\n        return \"\";\r\n    }\r\n\r\n    public static String dropBuilding(String x, String y, String type) {\r\n//        int xCoord, yCoord;\r\n//        try {\r\n//            xCoord = Integer.parseInt(x);\r\n//        } catch (NumberFormatException e) {\r\n//            return BuildingAnswers.getMessage(BuildingAnswers.INVALID_X_COORD_ERROR);\r\n//        }\r\n//        try {\r\n//            yCoord = Integer.parseInt(x);\r\n//        } catch (NumberFormatException e) {\r\n//            return BuildingAnswers.getMessage(BuildingAnswers.INVALID_Y_COORD_ERROR);\r\n//        }\r\n//        Building building = getInstanceOfBuilding(xCoord, yCoord, type); // TODO: get instance of supposed building.\r\n//        if (building == null)\r\n//            return BuildingAnswers.getMessage(BuildingAnswers.ERROR_FOR_DROP_BUILDING);\r\n//        GameController.getGame().getMap().getTile(xCoord, yCoord).setBuilding(building);\r\n//        return BuildingAnswers.getMessage(BuildingAnswers.DROP_BUILDING_SUCCESSFULLY_DONE);\r\n        return null;\r\n    }\r\n\r\n    public static Building getInstanceOfBuilding(int x, int y, String typeOfBuilding) {\r\n        return null;\r\n        // TODO: this method must check (x, y) and typeOfBuilding and returned correct value.\r\n    }\r\n\r\n    public static String dropCastleBuildings(int x, int y, String type) {\r\n        return \"\"; // *********************************\r\n    }\r\n\r\n    public static String dropUnit(int x, int y, String type, int count) {\r\n        return \"\"; // *********************************\r\n    }\r\n\r\n    public static String showMap(int x, int y) {\r\n        Map map = game.getMap();\r\n        if (y - 3 < 0) y = 3;\r\n        else if (y + 3 >= map.getLength()) y = map.getLength() - 1;\r\n        if (x - 9 < 0) x = 9;\r\n        else if (x + 9 >= map.getWidth()) x = map.getWidth() - 1;\r\n        game.setCurrentMapX(x);\r\n        game.setCurrentMapY(y);\r\n\r\n        String result = \"\";\r\n        result += \"-\";\r\n        for (int i = 0; i < 19 * 6; i++) {\r\n            result += \"-\";\r\n        }\r\n        result += \"\\n\";\r\n        for (int i = y - 3; i <= y + 3; i++) {\r\n            for (int j = 0; j < 2; j++) {\r\n                result += \"|\";\r\n                for (int k = x - 9; k <= x + 9; k++) {\r\n                    for (int l = 0; l < 5; l++) {\r\n                        Tile tile = map.getTile(i, k);\r\n                        String sign = \" \";\r\n                        if (tile.getMilitaries().size() != 0) sign = \"\\uE54E\";\r\n                        else if (tile.getBuilding() != null && !(tile.getBuilding() instanceof Wall)) sign = \"B\";\r\n                        else if (tile.getBuilding() != null && tile.getBuilding() instanceof Wall) sign = \"W\";\r\n                        else if (tile.getTree() != null) sign = \"T\";\r\n                        else if (tile.getRockDirection() != null) sign = \"R\";\r\n                        result += tile.getTexture().getColor() + sign + \"\\u001B[0m\";\r\n                    }\r\n                    result += \"|\";\r\n                }\r\n                result += \"\\n\";\r\n            }\r\n            result += \"-\";\r\n            for (int j = 0; j < 19 * 6; j++) {\r\n                result += \"-\";\r\n            }\r\n            result += \"\\n\";\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static String moveMap(int up, int left, int down, int right) {\r\n        int y = down - up;\r\n        int x = right - left;\r\n        return showMap(GameController.getGame().getCurrentMapX() + x, GameController.game.getCurrentMapY() + y);\r\n    }\r\n\r\n    public static String showDetailsOfTile(int x, int y) {\r\n        Tile tile = GameController.getGame().getMap().getTile(x, y);\r\n\r\n        String details = \"tile (\" + x + \", \" + y + \") details:\\n\";\r\n//        details += \"texture type: \" + tile.getTexture().getTextureName();\r\n//\r\n//        if (tile.getBuilding() != null) {\r\n//            details += \"building \" + tile.getBuilding().getName() + \" from government \" + tile.getBuilding().getGovernment() +\r\n//                    \" | HP: \" + tile.getBuilding().getHp() + \"/\" + tile.getBuilding().getMaxHp() + \"\\n\";\r\n//        } else details += \"there is no building on this tile\\n\";\r\n//\r\n//        for (int i = 0; i < tile.getHuman().size(); i++) {\r\n//            Human human = tile.getHuman().get(i);\r\n////            TODO: add human type and government\r\n//        }\r\n//        if (tile.getHuman().size() > 0) details += \"total number of humans: \" + tile.getHuman().size();\r\n//        else details += \"there are no humans on this tile\";\r\n\r\n        return details;\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/controller/GameController.java b/crusader/src/main/java/controller/GameController.java
+--- a/crusader/src/main/java/controller/GameController.java	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/crusader/src/main/java/controller/GameController.java	(date 1682930124317)
+@@ -1,6 +1,7 @@
+ package controller;
+ 
+ import controller.human.HumanController;
++import enumeration.HumanStates;
+ import javafx.util.Pair;
+ import model.building.Building;
+ import model.building.castlebuildings.Wall;
+@@ -11,6 +12,7 @@
+ import view.UnitMenu;
+ 
+ import java.util.ArrayList;
++import java.util.Objects;
+ import java.util.Scanner;
+ 
+ public class GameController {
+@@ -26,29 +28,25 @@
+ 
+     //TODO handel empty field
+     public static String selectUnit(int x, int y, Scanner scanner) {
+-        Map map = game.getMap();
+-        if(x < 1 || x > map.getWidth()){
+-            return "invalid x!";
+-        }
+-        if(y < 1 || y > map.getLength()){
+-            return "invalid y!";
++        String message = validateXAndY(x,y);
++        if(message != null){
++            return message;
+         }
+         ArrayList<Military> militaries = MapController.getMilitariesOfGovernment(x,y,game.getCurrentGovernment());
+         if(militaries.size() == 0){
+             return "There is no troop in this place!";
+         }
+         HumanController.militaries = militaries;
++        UnitMenu.x = x;
++        UnitMenu.y = y;
+         UnitMenu.run(scanner);
+         return "";
+     }
+ 
+     public static String moveUnit(int x, int y) {
+-        Map map = game.getMap();
+-        if(x < 1 || x > map.getWidth()){
+-            return "invalid x!";
+-        }
+-        if(y < 1 || y > map.getLength()){
+-            return "invalid y!";
++        String message = validateXAndY(x,y);
++        if(message != null){
++            return message;
+         }
+         Pair<Integer,Integer> destination = new Pair<>(y,x);
+         boolean check =HumanController.move(destination);
+@@ -59,19 +57,11 @@
+     }
+ 
+     public static String patrolUnit(int x1, int y1, int x2, int y2) {
+-        Map map = game.getMap();
+-        if(x1 < 1 || x1 > map.getWidth()){
+-            return "invalid x1!";
+-        }
+-        if(y1 < 1 || y1 > map.getLength()){
+-            return "invalid y1!";
++        String message = validatePatrol(x1,y1,x2,y2);
++        if(message != null){
++            return message;
+         }
+-        if(x2 < 1 || x2 > map.getWidth()){
+-            return "invalid x2!";
+-        }
+-        if(y2 < 1 || y2 > map.getLength()){
+-            return "invalid y2!";
+-        }
++
+         boolean check = HumanController.patrolUnit(x1,y1,x2,y2);
+         if(!check){
+             return "can't start patrol, no path to destination!";
+@@ -80,10 +70,37 @@
+     }
+ 
+     public static String setStateOfMilitary(int x, int y, String state) {
+-        return "";
++        String message = validateXAndY(x,y);
++        if(message != null){
++            return message;
++        }
++
++        ArrayList<Military> militaries = MapController.getMilitariesOfGovernment(x,y,game.getCurrentGovernment());
++        if(militaries.size() == 0){
++            return "There is no troop in this place!";
++        }
++
++
++        if(state.equals(HumanStates.STAND_GROUND.getState())){
++            HumanController.setState(HumanStates.STAND_GROUND.getState(),militaries);
++        }
++
++        if(state.equals(HumanStates.DEFENSIVE_STANCE.getState())){
++            HumanController.setState(HumanStates.DEFENSIVE_STANCE.getState(),militaries);
++        }
++
++        if(state.equals(HumanStates.AGGRESSIVE_STANCE.getState())){
++            HumanController.setState(HumanStates.AGGRESSIVE_STANCE.getState(),militaries);
++        }
++
++        return "invalid state!";
+     }
+ 
+     public static String attackEnemy(int x, int y) {
++        String message = validateXAndY(x,y);
++        if(message != null){
++            return message;
++        }
+         return "";
+     }
+ 
+@@ -222,4 +239,59 @@
+ 
+         return details;
+     }
++
++    public static String validateXAndY(int x, int y){
++        Map map = game.getMap();
++        if(checkNullFields(x)){
++            return "x is required!";
++        }
++        if(checkNullFields(y)){
++            return "y is required!";
++        }
++        if(x < 1 || x > map.getWidth()){
++            return "invalid x!";
++        }
++        if(y < 1 || y > map.getLength()){
++            return "invalid y!";
++        }
++        return null;
++    }
++
++    public static String validatePatrol(int x1, int y1,int x2, int y2){
++        Map map = game.getMap();
++        if(checkNullFields(x1)){
++            return "x1 is required!";
++        }
++        if(checkNullFields(y1)){
++            return "y1 is required!";
++        }
++        if(x1 < 1 || x1 > map.getWidth()){
++            return "invalid x1!";
++        }
++        if(y1 < 1 || y1 > map.getLength()){
++            return "invalid y!";
++        }
++
++        if(checkNullFields(x2)){
++            return "x2 is required!";
++        }
++        if(checkNullFields(y2)){
++            return "y2 is required!";
++        }
++        if(x2 < 1 || x2 > map.getWidth()){
++            return "invalid x2!";
++        }
++        if(y2 < 1 || y2 > map.getLength()){
++            return "invalid y2!";
++        }
++        return null;
++    }
++
++    private static boolean checkNullFields(String input) {
++        return input == null || input.length() == 0;
++    }
++
++    private static boolean checkNullFields(int input) {
++        return input == -1;
++    }
+ }
+Index: crusader/src/main/java/controller/MapController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package controller;\r\n\r\nimport controller.gamestructure.GameBuildings;\r\nimport controller.gamestructure.GameHumans;\r\nimport enumeration.Textures;\r\nimport enumeration.dictionary.RockDirections;\r\nimport enumeration.dictionary.Trees;\r\nimport model.Government;\r\nimport model.building.Building;\r\nimport model.building.castlebuildings.CastleBuilding;\r\nimport model.building.castlebuildings.Wall;\r\nimport model.building.storagebuildings.StorageBuilding;\r\nimport model.buildinghandler.BuildingCounter;\r\nimport model.game.Map;\r\nimport model.game.Tile;\r\nimport model.human.Human;\r\nimport model.human.civilian.Civilian;\r\nimport model.human.military.Military;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\npublic class MapController {\r\n    private static Map map;\r\n\r\n    public static String setTexture(int x, int y, Textures type) {\r\n        map.getTile(x, y).setTexture(type);\r\n        return \"texture of tile (\" + x + \", \" + y + \") changed to \" + type.getTextureName() + \" successfully\";\r\n    }\r\n\r\n    public static String setTexture(int x1, int x2, int y1, int y2, Textures type) {\r\n        for (int i = y1; i <= y2; i++) {\r\n            for (int j = x1; j <= x2; j++) {\r\n                map.getTile(i, j).setTexture(type);\r\n            }\r\n        }\r\n        return \"texture of tiles from (\" + x1 + \", \" + y1 + \") to (\" + x2 + \", \" + y2 + \") changed to \" + type.getTextureName() + \"successfully\";\r\n    }\r\n\r\n    public static String clearTile(int x, int y) {\r\n        Tile tile = map.getTile(x, y);\r\n        tile.clearCivilian();\r\n        tile.clearMilitary();\r\n        tile.setTexture(Textures.EARTH);\r\n        if (tile.getBuilding() != null) {\r\n            Building building = tile.getBuilding();\r\n            deleteBuilding(building);\r\n        }\r\n\r\n        return \"tile (\" + x + \", \" + y + \") cleared successfully\";\r\n    }\r\n\r\n    public static String dropRock(int x, int y, RockDirections direction) {\r\n        map.getTile(x, y).setRockDirection(direction);\r\n\r\n        return \"rock added in (\" + x + \", \" + y + \") with \" + direction.getDirection() + \" direction\";\r\n    }\r\n\r\n    public static String dropTree(int x, int y, Trees tree) {\r\n        map.getTile(x, y).setTree(tree);\r\n\r\n        return tree.getTreeName() + \" added to (\" + x + \", \" + y + \") successfully\";\r\n    }\r\n\r\n\r\n    public static boolean checkCanPutBuilding(int x, int y, String type, Government government) {\r\n        Building building = GameBuildings.getBuilding(type, government, x, y);\r\n        if (building == null) {\r\n            return false;\r\n        }\r\n\r\n        if (x + building.getWidth() >= map.getWidth()) {\r\n            return false;\r\n        }\r\n        if (y + building.getLength() >= map.getLength()) {\r\n            return false;\r\n        }\r\n        if (building instanceof StorageBuilding && !checkCanPutStorage(x, y, (StorageBuilding) building)) {\r\n            return false;\r\n        }\r\n        for (int i = y - 1; i < y + building.getLength(); i++) {\r\n            for (int j = x - 1; j < x + building.getWidth(); j++) {\r\n                if (building instanceof CastleBuilding) {\r\n                    if (!canPutCastleBuilding(x, y, (CastleBuilding) building)) {\r\n                        return false;\r\n                    }\r\n                } else if (!map.getTile(i, j).getCanPutBuilding()) {\r\n                    return false;\r\n                }\r\n                if (building.getHasSpecialTexture()) {\r\n                    if (!building.getSuitableTextures().contains(map.getTile(i, j).getTexture())) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static void dropBuilding(int x, int y, String type, Government government) {\r\n        Building building = GameBuildings.getBuilding(type, government, x, y);\r\n        for (int i = y - 1; i < y + Objects.requireNonNull(building).getLength(); i++) {\r\n            for (int j = x - 1; j < x + building.getWidth(); j++) {\r\n                Tile tile = map.getTile(j, i);\r\n\r\n                if(building.isShouldBeOne()){\r\n                    deleteOtherBuildingWithThisType(building);\r\n                }\r\n\r\n\r\n                tile.setCanPutBuilding(false);\r\n                Textures textures = Textures.EARTH_AND_SAND;\r\n                if (building.getHasSpecialTexture()) {\r\n                    textures = building.getSuitableTextures().get(0);\r\n                }\r\n                tile.setBuilding(building);\r\n                if (building.getBuildingImpassableLength() != -1) {\r\n                    if (i >= building.getBuildingImpassableLength() || j >= building.getBuildingImpassableLength()) {\r\n                        tile.setPassable(true);\r\n                    } else {\r\n                        tile.setPassable(false);\r\n                        tile.setTexture(textures);\r\n                    }\r\n                } else {\r\n                    tile.setPassable(false);\r\n                    tile.setTexture(textures);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static ArrayList<Military> getMilitariesOfGovernment(int x, int y, Government government) {\r\n        ArrayList<Military> militaries = new ArrayList<>();\r\n        Tile tile = map.getTile(x, y);\r\n        for (Military military : tile.getMilitaries()) {\r\n            if (military.getGovernment().getColor().equals(government.getColor())) {\r\n                militaries.add(military);\r\n            }\r\n        }\r\n        return militaries;\r\n    }\r\n\r\n    public static boolean checkCanPutMilitary(int x, int y, String type, Government government) {\r\n        Military military = GameHumans.getUnit(type, government, x, y);\r\n        Tile tile = map.getTile(x - 1, y - 1);\r\n        return tile.isPassable();\r\n    }\r\n\r\n    public static void dropMilitary(int x, int y, String type, Government government) {\r\n        Military military = GameHumans.getUnit(type, government, x, y);\r\n        Tile tile = map.getTile(x - 1, y - 1);\r\n        government.addMilitary(military);\r\n        tile.addMilitary(military);\r\n    }\r\n\r\n    public static void deleteMilitary(int x, int y, Military military) {\r\n        Tile tile = map.getTile(x, y);\r\n        military.getGovernment().removeMilitary(military);\r\n        tile.removeMilitary(military);\r\n    }\r\n\r\n    public static void addMilitary(int x, int y, Military military) {\r\n        Tile tile = map.getTile(x, y);\r\n        military.getGovernment().addMilitary(military);\r\n        tile.addMilitary(military);\r\n    }\r\n\r\n    public static void moveMilitary(int x, int y,Military military){\r\n        deleteMilitary(military.getX(), military.getY(), military);\r\n        addMilitary(x,y, military);\r\n        military.setX(x);\r\n        military.setY(y);\r\n    }\r\n\r\n    public static void deleteHuman(int x, int y, Civilian civilian) {\r\n        Tile tile = map.getTile(x, y);\r\n        civilian.getGovernment().removeHuman(civilian);\r\n        tile.removeHuman(civilian);\r\n    }\r\n\r\n    public static void addHuman(int x, int y, Civilian civilian) {\r\n        Tile tile = map.getTile(x, y);\r\n        civilian.getGovernment().addHuman(civilian);\r\n        tile.addHuman(civilian);\r\n    }\r\n\r\n\r\n    public static void moveHuman(int x, int y, Civilian civilian){\r\n        deleteHuman(civilian.getX(), civilian.getY(), civilian);\r\n        addHuman(x,y, civilian);\r\n        civilian.setX(x);\r\n        civilian.setY(y);\r\n    }\r\n    public static boolean checkCanPutStorage(int x, int y, StorageBuilding storageBuilding) {\r\n        int startX = x - 1;\r\n        int startY = y - 1;\r\n        int endX = x + storageBuilding.getWidth() - 1;\r\n        int endY = y + storageBuilding.getLength() - 1;\r\n\r\n\r\n        if (startY != 0) {\r\n            for (int j = startX; j <= endX; j++) {\r\n                Tile tile = map.getTile(j, startY - 1);\r\n                if (tile.getBuilding() != null && tile.getBuilding().getName().equals(storageBuilding.getName())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (startX != 0) {\r\n            for (int i = startY; i <= endY; i++) {\r\n                Tile tile = map.getTile(startX - 1, i);\r\n                if (tile.getBuilding() != null && tile.getBuilding().getName().equals(storageBuilding.getName())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if (endX != map.getWidth() - 1) {\r\n            for (int i = startY; i <= endY; i++) {\r\n                Tile tile = map.getTile(endX + 1, i);\r\n                if (tile.getBuilding() != null && tile.getBuilding().getName().equals(storageBuilding.getName())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (endY != map.getLength() - 1) {\r\n            for (int j = startX; j <= endX; j++) {\r\n                Tile tile = map.getTile(j, endY + 1);\r\n                if (tile.getBuilding() != null && tile.getBuilding().getName().equals(storageBuilding.getName())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static boolean canPutCastleBuilding(int x, int y, CastleBuilding building) {\r\n        Tile tile = map.getTile(x, y);\r\n        if (tile.getCanPutBuilding()) {\r\n            return true;\r\n        } else return tile.getBuilding() instanceof Wall;\r\n    }\r\n\r\n    public static void deleteOtherBuildingWithThisType(Building building) {\r\n        Government government = GameController.getGame().getCurrentGovernment();\r\n        BuildingCounter buildingCounter = government.getBuildingData(building.getName());\r\n        if (buildingCounter.getNumber() == 0) {\r\n            return;\r\n        }\r\n\r\n        Building shouldDelete = buildingCounter.getBuildings().get(0);\r\n        buildingCounter.deleteBuilding(shouldDelete);\r\n        deleteBuilding(shouldDelete);\r\n    }\r\n\r\n    public static void deleteBuilding(Building building) {\r\n        int xx = building.getStartX();\r\n        int yy = building.getStartY();\r\n        for (int i = yy - 1; i < yy + building.getLength(); i++) {\r\n            for (int j = xx - 1; j < xx + building.getWidth(); j++) {\r\n                Tile tileOfBuilding = map.getTile(j, i);\r\n                tileOfBuilding.setCanPutBuilding(true);\r\n                tileOfBuilding.setPassable(true);\r\n                tileOfBuilding.setBuilding(null);\r\n            }\r\n        }\r\n        BuildingCounter buildingCounter = building.getGovernment().getBuildingData(building.getName());\r\n        buildingCounter.deleteBuilding(building);\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/controller/MapController.java b/crusader/src/main/java/controller/MapController.java
+--- a/crusader/src/main/java/controller/MapController.java	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/crusader/src/main/java/controller/MapController.java	(date 1682923000910)
+@@ -139,7 +139,16 @@
+         }
+         return militaries;
+     }
+-
++    public static ArrayList<Military> getMilitariesOfOtherGovernment(int x, int y, Government government) {
++        ArrayList<Military> militaries = new ArrayList<>();
++        Tile tile = map.getTile(x, y);
++        for (Military military : tile.getMilitaries()) {
++            if (!military.getGovernment().getColor().equals(government.getColor())) {
++                militaries.add(military);
++            }
++        }
++        return militaries;
++    }
+     public static boolean checkCanPutMilitary(int x, int y, String type, Government government) {
+         Military military = GameHumans.getUnit(type, government, x, y);
+         Tile tile = map.getTile(x - 1, y - 1);
+Index: crusader/src/main/java/controller/human/MoveController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package controller.human;\r\n\r\nimport controller.GameController;\r\nimport javafx.util.Pair;\r\nimport model.game.Map;\r\nimport model.human.Human;\r\n\r\nimport java.util.HashSet;\r\nimport java.util.LinkedList;\r\nimport java.util.Objects;\r\n\r\npublic class MoveController extends HumanController{\r\n    public static LinkedList<Pair<Integer, Integer>> getPath(Pair<Integer, Integer> startPair, Pair<Integer, Integer> endPair, Human human) {\r\n        Map map = GameController.getGame().getMap();\r\n        int[][] wave = new int[map.getLength()][map.getWidth()];\r\n        boolean[][] checkArray = new boolean[map.getLength()][map.getWidth()];\r\n\r\n        HashSet<Pair<Integer, Integer>> firstPairs = new HashSet<>();\r\n        HashSet<Pair<Integer, Integer>> secondPairs;\r\n        firstPairs.add(startPair);\r\n\r\n        int depth = 2;\r\n        int y = startPair.getKey();\r\n        int x = startPair.getValue();\r\n        wave[y][x] = 1;\r\n        checkArray[y][x] = true;\r\n\r\n        boolean receiveEnd = false;\r\n\r\n        while (firstPairs.size() != 0 || receiveEnd) {\r\n            secondPairs = makeNextPairs(wave, checkArray, firstPairs, human);\r\n            firstPairs = new HashSet<>(secondPairs);\r\n\r\n            for (Pair<Integer, Integer> pair : secondPairs) {\r\n                y = pair.getKey();\r\n                x = pair.getValue();\r\n                if (checkArray[y][x]) {\r\n                    firstPairs.remove(pair);\r\n                    continue;\r\n                }\r\n                wave[y][x] = depth;\r\n                checkArray[y][x] = true;\r\n                if (y == endPair.getKey() && x == startPair.getValue()) {\r\n                    receiveEnd = true;\r\n                }\r\n            }\r\n            depth++;\r\n        }\r\n        return makePath(wave, startPair, endPair);\r\n    }\r\n\r\n    public static LinkedList<Pair<Integer, Integer>> makePath(int[][] wave, Pair<Integer, Integer> start, Pair<Integer, Integer> end) {\r\n        LinkedList<Pair<Integer, Integer>> result = new LinkedList<>();\r\n        Pair<Integer, Integer> nextPair = new Pair<>(end.getKey(), end.getValue());\r\n        while (!Objects.equals(nextPair.getValue(), start.getValue()) || !Objects.equals(nextPair.getKey(), start.getKey())) {\r\n            nextPair = findNextNode(nextPair, wave, end);\r\n            if (nextPair == null) {\r\n                return null;\r\n            }\r\n            result.addFirst(nextPair);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public static double getDistance(int x1, int y1, int x2, int y2) {\r\n        return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\r\n    }\r\n\r\n    public static Pair<Integer, Integer> findNextNode(Pair<Integer, Integer> nextPair, int[][] wave, Pair<Integer, Integer> end) {\r\n        int x = nextPair.getValue();\r\n        int y = nextPair.getKey();\r\n\r\n        int minDepth = 10000;\r\n        double minDistance = 10000;\r\n        if (y != 0) {\r\n            double distance = getDistance(end.getValue(), end.getKey(), x, y - 1);\r\n            if (wave[y - 1][x] > 0 && (wave[y - 1][x] < minDepth || (wave[y - 1][x] == minDepth && distance < minDistance))) {\r\n                nextPair = new Pair<>(y - 1, x);\r\n                minDepth = wave[y - 1][x];\r\n                minDistance = distance;\r\n            }\r\n        }\r\n\r\n        if (x != 0) {\r\n            double distance = getDistance(end.getValue(), end.getKey(), x - 1, y);\r\n            if (wave[y][x - 1] > 0 && (wave[y][x - 1] < minDepth || (wave[y][x - 1] == minDepth && distance < minDistance))) {\r\n                nextPair = new Pair<>(y, x - 1);\r\n                minDepth = wave[y][x - 1];\r\n                minDistance = distance;\r\n            }\r\n        }\r\n        if (x != 0 && y != 0) {\r\n            double distance = getDistance(end.getValue(), end.getKey(), x - 1, y - 1);\r\n            if (wave[y - 1][x - 1] > 0 && (wave[y - 1][x - 1] < minDepth || (wave[y - 1][x - 1] == minDepth && distance < minDistance))) {\r\n                nextPair = new Pair<>(y - 1, x - 1);\r\n                minDepth = wave[y - 1][x - 1];\r\n                minDistance = distance;\r\n            }\r\n        }\r\n        if (x != wave.length - 1) {\r\n            double distance = getDistance(end.getValue(), end.getKey(), x + 1, y);\r\n            if (wave[y][x + 1] > 0 && (wave[y][x + 1] < minDepth || (wave[y][x + 1] == minDepth && distance < minDistance))) {\r\n                nextPair = new Pair<>(y, x + 1);\r\n                minDepth = wave[y][x + 1];\r\n                minDistance = distance;\r\n            }\r\n        }\r\n        if (y != wave.length - 1) {\r\n            double distance = getDistance(end.getValue(), end.getKey(), x, y + 1);\r\n            if (wave[y + 1][x] > 0 && (wave[y + 1][x] < minDepth || (wave[y + 1][x] == minDepth && distance < minDistance))) {\r\n                nextPair = new Pair<>(y + 1, x);\r\n                minDepth = wave[y + 1][x];\r\n                minDistance = distance;\r\n            }\r\n        }\r\n        if (y != wave.length - 1 && x != wave.length - 1) {\r\n\r\n            double distance = getDistance(end.getValue(), end.getKey(), x + 1, y + 1);\r\n            if (wave[y + 1][x + 1] > 0 && (wave[y + 1][x + 1] < minDepth || (wave[y + 1][x + 1] == minDepth && distance < minDistance))) {\r\n                nextPair = new Pair<>(y + 1, x + 1);\r\n                minDepth = wave[y + 1][x + 1];\r\n                minDistance = distance;\r\n\r\n            }\r\n        }\r\n        if (y != wave.length - 1 && x != 0) {\r\n            double distance = getDistance(end.getValue(), end.getKey(), x - 1, y + 1);\r\n            if (wave[y + 1][x - 1] > 0 && (wave[y + 1][x - 1] < minDepth || (wave[y + 1][x - 1] == minDepth && distance < minDistance))) {\r\n                nextPair = new Pair<>(y + 1, x - 1);\r\n                minDepth = wave[y + 1][x - 1];\r\n                minDistance = distance;\r\n            }\r\n        }\r\n        if (y != 0 && x != wave.length - 1) {\r\n            double distance = getDistance(end.getValue(), end.getKey(), x + 1, y - 1);\r\n            if (wave[y - 1][x + 1] > 0 && (wave[y - 1][x + 1] < minDepth || (wave[y - 1][x + 1] == minDepth && distance < minDistance))) {\r\n                nextPair = new Pair<>(y - 1, x + 1);\r\n                minDepth = wave[y - 1][x + 1];\r\n                minDistance = distance;\r\n            }\r\n        }\r\n\r\n        if (minDepth == 0) {\r\n            return null;\r\n        }\r\n        return nextPair;\r\n    }\r\n\r\n    public static HashSet<Pair<Integer, Integer>> makeNextPairs(int[][] wave, boolean[][] checkArray, HashSet<Pair<Integer, Integer>> firstPairs, Human human) {\r\n        Map map = GameController.getGame().getMap();\r\n        HashSet<Pair<Integer, Integer>> secondPairs = new HashSet<>();\r\n        for (Pair<Integer, Integer> pair : firstPairs) {\r\n            int y = pair.getKey();\r\n            int x = pair.getValue();\r\n\r\n            if (y != 0) {\r\n                if (map.getTile(x, y - 1).isPassable(human) && !checkArray[y - 1][x]) {\r\n                    secondPairs.add(new Pair<>(y - 1, x));\r\n                }\r\n            }\r\n\r\n            if (x != 0 && !checkArray[y][x - 1]) {\r\n                if (map.getTile(x - 1, y).isPassable(human)) {\r\n                    secondPairs.add(new Pair<>(y, x - 1));\r\n                }\r\n            }\r\n            if (x != 0 && y != 0) {\r\n                if (map.getTile(x - 1, y - 1).isPassable(human) && !checkArray[y - 1][x - 1]) {\r\n                    secondPairs.add(new Pair<>(y - 1, x - 1));\r\n                }\r\n            }\r\n            if (x != wave.length - 1) {\r\n                if (map.getTile(x + 1, y).isPassable(human) && !checkArray[y][x + 1]) {\r\n                    secondPairs.add(new Pair<>(y, x + 1));\r\n                }\r\n            }\r\n            if (y != wave.length - 1) {\r\n                if (map.getTile(x, y + 1).isPassable(human) && !checkArray[y + 1][x]) {\r\n                    secondPairs.add(new Pair<>(y + 1, x));\r\n                }\r\n            }\r\n            if (y != wave.length - 1 && x != wave.length - 1) {\r\n                if (map.getTile(x + 1, y + 1).isPassable(human) && !checkArray[y + 1][x + 1]) {\r\n                    secondPairs.add(new Pair<>(y + 1, x + 1));\r\n                }\r\n            }\r\n            if (y != wave.length - 1 && x != 0) {\r\n                if (map.getTile(x - 1, y + 1).isPassable(human) && !checkArray[y + 1][x - 1]) {\r\n                    secondPairs.add(new Pair<>(y + 1, x - 1));\r\n                }\r\n            }\r\n            if (y != 0 && x != wave.length - 1) {\r\n                if (map.getTile(x + 1, y - 1).isPassable(human) && !checkArray[y - 1][x + 1]) {\r\n                    secondPairs.add(new Pair<>(y - 1, x + 1));\r\n                }\r\n            }\r\n        }\r\n        return secondPairs;\r\n    }\r\n\r\n    public static LinkedList<Pair<Integer, Integer>> checkHasPath(Pair<Integer, Integer> startPair,Pair<Integer, Integer> endPair){\r\n        return getPath(startPair, endPair, null);\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/controller/human/MoveController.java b/crusader/src/main/java/controller/human/MoveController.java
+--- a/crusader/src/main/java/controller/human/MoveController.java	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/crusader/src/main/java/controller/human/MoveController.java	(date 1682923881780)
+@@ -4,6 +4,7 @@
+ import javafx.util.Pair;
+ import model.game.Map;
+ import model.human.Human;
++import model.human.military.Military;
+ 
+ import java.util.HashSet;
+ import java.util.LinkedList;
+@@ -201,4 +202,42 @@
+     public static LinkedList<Pair<Integer, Integer>> checkHasPath(Pair<Integer, Integer> startPair,Pair<Integer, Integer> endPair){
+         return getPath(startPair, endPair, null);
+     }
++    public static LinkedList<Pair<Integer, Integer>> checkHasLadderPath(Pair<Integer, Integer> startPair, Pair<Integer, Integer> endPair, LinkedList<Pair<Integer, Integer>> path) {
++        if (path != null) {
++            return path;
++        }
++        for (Military military : militaries) {
++            if (military.isUsesLadder()) {
++                return MoveController.getPath(startPair, endPair, military);
++            }
++        }
++        return null;
++    }
++
++    public static LinkedList<Pair<Integer, Integer>> checkAssassinPath(Pair<Integer, Integer> startPair, Pair<Integer, Integer> endPair, LinkedList<Pair<Integer, Integer>> path) {
++        if (path != null) {
++            return path;
++        }
++        for (Military military : militaries) {
++            if (military.getName().equals("assassin")) {
++                return MoveController.getPath(startPair, endPair, military);
++            }
++        }
++        return null;
++    }
++
++    public static Pair<Integer, Integer> getStartPair() {
++        Military firstMilitary = militaries.get(0);
++        return new Pair<>(firstMilitary.getX(), firstMilitary.getY());
++    }
++
++    public static boolean checkPatrolPath(Pair<Integer, Integer> startPair, Pair<Integer, Integer> endPair) {
++        LinkedList<Pair<Integer, Integer>> path = MoveController.checkHasPath(startPair, endPair);
++        LinkedList<Pair<Integer, Integer>> assassinPath = checkHasLadderPath(startPair, endPair, path);
++        LinkedList<Pair<Integer, Integer>> ladderPath = checkAssassinPath(startPair, endPair, path);
++        if (path == null && assassinPath == null && ladderPath == null) {
++            return false;
++        }
++        return true;
++    }
+ }
+Index: crusader/src/main/java/controller/ViewController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package controller;\r\n\r\nimport enumeration.answers.Answers;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class ViewController {\r\n\r\n    public static Matcher resultMatcher;\r\n    public static String editItem(String input){\r\n        if(input.length() != 0 && input.charAt(0) == '\"' && input.charAt(input.length() - 1) == '\"'){\r\n            input = input.substring(1,input.length() - 1);\r\n        }\r\n        return input;\r\n    }\r\n\r\n    public static boolean permute(String input,ArrayList<String> arr, int k){\r\n\r\n        for(int i = k; i < arr.size(); i++){\r\n            java.util.Collections.swap(arr, i, k);\r\n            boolean result = permute(input,arr, k+1);\r\n            if(result){\r\n                return true;\r\n            }\r\n            java.util.Collections.swap(arr, k, i);\r\n        }\r\n\r\n        if (k == arr.size() -1){\r\n            StringBuilder patternString = new StringBuilder();\r\n            for (String str : arr){\r\n                patternString.append(str);\r\n            }\r\n            Pattern pattern = Pattern.compile(patternString.toString());\r\n            Matcher matcher = pattern.matcher(input);\r\n            if(matcher.matches()){\r\n                resultMatcher = matcher;\r\n                return true;\r\n            }\r\n\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static boolean isItemMatch(String input, ArrayList<String> arr){\r\n        if(!permute(input,arr,0)){\r\n            System.out.println(Answers.INVALID_COMMAND.getValue());\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/controller/ViewController.java b/crusader/src/main/java/controller/ViewController.java
+--- a/crusader/src/main/java/controller/ViewController.java	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/crusader/src/main/java/controller/ViewController.java	(date 1682929171430)
+@@ -51,4 +51,14 @@
+         return true;
+     }
+ 
++    public static int getNumberOfRegex(String groupName){
++        int x;
++        try {
++            x = Integer.parseInt(ViewController.resultMatcher.group(groupName));
++        } catch (Exception e) {
++            x = -1;
++        }
++        return x;
++    }
++
+ }
+\ No newline at end of file
+Index: crusader/src/main/java/model/activity/Move.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package model.activity;\r\n\r\nimport controller.GameController;\r\nimport controller.human.HumanController;\r\nimport controller.MapController;\r\nimport controller.human.MoveController;\r\nimport enumeration.MoveStates;\r\nimport javafx.util.Pair;\r\nimport model.game.Map;\r\nimport model.game.Tile;\r\nimport model.human.Human;\r\nimport model.human.civilian.Civilian;\r\nimport model.human.military.Military;\r\n\r\nimport java.util.Collections;\r\nimport java.util.LinkedList;\r\nimport java.util.Objects;\r\n\r\npublic class Move {\r\n    private Pair<Integer, Integer> startPair;\r\n    private Pair<Integer, Integer> endPair;\r\n    private Pair<Integer, Integer> patrolPair;\r\n    private boolean isDestinationConstant;\r\n    Human human;\r\n\r\n\r\n    private boolean isPatrolStart = false;\r\n    private String moveState;\r\n    private LinkedList<Pair<Integer, Integer>> path;\r\n\r\n    int indexOfPath = 0;\r\n    Military enemy;\r\n\r\n    public void setPath(LinkedList<Pair<Integer, Integer>> path) {\r\n        this.path = path;\r\n        if(path == null){\r\n            moveState = MoveStates.STOP.getState();\r\n        }\r\n    }\r\n\r\n    public Move(int startX, int startY, Pair<Integer, Integer> endPair, boolean isDestinationConstant, Human human) {\r\n        this.startPair = new Pair<>(startY, startX);\r\n        this.endPair = endPair;\r\n        this.isDestinationConstant = isDestinationConstant;\r\n        this.human = human;\r\n    }\r\n\r\n    public Move(int startX, int startY, Military enemy, boolean isDestinationConstant, Human human) {\r\n        this.startPair = new Pair<>(startY, startX);\r\n        this.endPair = new Pair<>(enemy.getY(), enemy.getX());\r\n        this.enemy = enemy;\r\n        this.isDestinationConstant = isDestinationConstant;\r\n        this.human = human;\r\n        path = MoveController.getPath(startPair, endPair, human);\r\n        setMoveState();\r\n    }\r\n\r\n    public int getStartX() {\r\n        return startPair.getValue();\r\n    }\r\n\r\n    public int getStartY() {\r\n        return startPair.getKey();\r\n    }\r\n\r\n    public int getEndX() {\r\n        return endPair.getValue();\r\n    }\r\n\r\n\r\n    public int getEndY() {\r\n        return endPair.getKey();\r\n    }\r\n\r\n    public void setMoveState() {\r\n        if (path == null) {\r\n            moveState = MoveStates.STOP.getState();\r\n            return;\r\n        }\r\n        moveState = MoveStates.MOVING.getState();\r\n    }\r\n\r\n    public void setMovePatrol(Pair<Integer, Integer> patrolPair) {\r\n        moveState = MoveStates.PATROL.getState();\r\n        this.patrolPair = patrolPair;\r\n        indexOfPath = 0;\r\n    }\r\n\r\n    public Pair<Integer, Integer> getPatrolPair() {\r\n        return patrolPair;\r\n    }\r\n\r\n    public void setPatrolPair(Pair<Integer, Integer> patrolPair) {\r\n        this.patrolPair = patrolPair;\r\n    }\r\n\r\n    public boolean checkIsPathValid() {\r\n        Map map = GameController.getGame().getMap();\r\n        for (int i = indexOfPath; i < indexOfPath + human.getSpeed() + 1; i++) {\r\n            Pair<Integer, Integer> pair = path.get(i);\r\n            Tile tile = map.getTile(pair.getValue(), pair.getKey());\r\n            if (!tile.isPassable(human)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public boolean checkDestination() {\r\n        if (!isDestinationConstant) {\r\n            if (endPair.getValue() != enemy.getX() && endPair.getKey() != enemy.getY()) {\r\n                endPair = new Pair<>(enemy.getY(), enemy.getX());\r\n                return true;\r\n            }\r\n        }\r\n        Pair<Integer, Integer> lastPair = path.getLast();\r\n        if (!Objects.equals(endPair.getValue(), lastPair.getValue()) && !Objects.equals(endPair.getKey(), lastPair.getKey())) {\r\n            endPair = new Pair<>(enemy.getY(), enemy.getX());\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public void moveOneTurn() {\r\n        if (moveState.equals(MoveStates.STOP.getState())) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (checkDestination() || !checkIsPathValid()) {\r\n            updatePath();\r\n        }\r\n\r\n        if (MoveStates.MOVING.getState().equals(moveState) || MoveStates.PATROL.getState().equals(moveState)) {\r\n            if (indexOfPath + human.getSpeed() < path.size() - 1) {\r\n                moveBeforeDestination();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (MoveStates.MOVING.getState().equals(moveState)) {\r\n            indexOfPath = 0;\r\n            if (human instanceof Military) {\r\n                MapController.moveMilitary(endPair.getValue(), endPair.getKey(), (Military) human);\r\n            } else {\r\n                MapController.moveHuman(endPair.getValue(), endPair.getKey(), (Civilian) human);\r\n            }\r\n            moveState = MoveStates.STOP.getState();\r\n        }\r\n\r\n        if (MoveStates.PATROL.getState().equals(moveState) && isPatrolStart) {\r\n            indexOfPath = 0;\r\n            if (human instanceof Military) {\r\n                MapController.moveMilitary(endPair.getValue(), endPair.getKey(), (Military) human);\r\n            } else {\r\n                MapController.moveHuman(endPair.getValue(), endPair.getKey(), (Civilian) human);\r\n            }\r\n            Collections.reverse(path);\r\n            Pair<Integer, Integer> temp = new Pair<>(endPair.getKey(), endPair.getValue());\r\n            endPair = new Pair<>(startPair.getKey(), startPair.getValue());\r\n            startPair = new Pair<>(temp.getKey(), temp.getValue());\r\n        }\r\n\r\n        if (MoveStates.PATROL.getState().equals(moveState) && !isPatrolStart) {\r\n            indexOfPath = 0;\r\n            if (human instanceof Military) {\r\n                MapController.moveMilitary(endPair.getValue(), endPair.getKey(), (Military) human);\r\n            } else {\r\n                MapController.moveHuman(endPair.getValue(), endPair.getKey(), (Civilian) human);\r\n            }\r\n\r\n            startPair = new Pair<>(endPair.getKey(), endPair.getValue());\r\n            endPair = new Pair<>(patrolPair.getKey(), patrolPair.getValue());\r\n            isPatrolStart = true;\r\n        }\r\n    }\r\n\r\n\r\n    public void updatePath() {\r\n        Pair<Integer, Integer> startPair = new Pair<>(human.getX(), human.getY());\r\n        path = MoveController.getPath(startPair, endPair, human);\r\n        indexOfPath = 0;\r\n        if (path == null) {\r\n            moveState = MoveStates.STOP.getState();\r\n        }\r\n    }\r\n\r\n    public void moveBeforeDestination() {\r\n        Pair<Integer, Integer> pair = path.get(indexOfPath + human.getSpeed());\r\n        indexOfPath += human.getSpeed();\r\n        if (human instanceof Military) {\r\n            MapController.moveMilitary(pair.getValue(), pair.getKey(), (Military) human);\r\n        } else {\r\n            MapController.moveHuman(pair.getValue(), pair.getKey(), (Civilian) human);\r\n        }\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/model/activity/Move.java b/crusader/src/main/java/model/activity/Move.java
+--- a/crusader/src/main/java/model/activity/Move.java	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/crusader/src/main/java/model/activity/Move.java	(date 1682929171417)
+@@ -185,6 +185,10 @@
+         }
+     }
+ 
++    public String getMoveState() {
++        return moveState;
++    }
++
+     public void moveBeforeDestination() {
+         Pair<Integer, Integer> pair = path.get(indexOfPath + human.getSpeed());
+         indexOfPath += human.getSpeed();
+@@ -194,4 +198,10 @@
+             MapController.moveHuman(pair.getValue(), pair.getKey(), (Civilian) human);
+         }
+     }
++
++
++    public void stopMove(){
++        moveState = MoveStates.STOP.getState();
++        indexOfPath = 0;
++    }
+ }
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"48940bc5-fa6d-4a81-b88a-cb236d4b61a3\" name=\"Changes\" comment=\"some features added to Government and its controller&#10;try for creating template maps\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"MitraGh\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OeZJGtSER9mrxhoyWb8D0vXmSP\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Sharif/Term2/AP/Project/Project-Phase-1&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"model\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\test\\java\\controller\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\main\\java\" />\r\n      <recent name=\"D:\\Sharif\\Term2\\AP\\Project\\Project-Phase-1\\crusader\\src\\test\\java\\menu\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"StrongholdCrusader\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.changeEmailTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"changeEmailTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.isStrongPasswordTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"isStrongPasswordTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"UserControllerTest.removeSloganTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"StrongholdCrusader\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"controller.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"controller\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"controller.UserControllerTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"removeSloganTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.changeEmailTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.removeSloganTest\" />\r\n        <item itemvalue=\"JUnit.UserControllerTest.isStrongPasswordTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"48940bc5-fa6d-4a81-b88a-cb236d4b61a3\" name=\"Changes\" comment=\"\" />\r\n      <created>1681922938440</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681922938440</updated>\r\n      <workItem from=\"1681922940573\" duration=\"1143000\" />\r\n      <workItem from=\"1681937070375\" duration=\"893000\" />\r\n      <workItem from=\"1681941196344\" duration=\"7452000\" />\r\n      <workItem from=\"1681984358797\" duration=\"16524000\" />\r\n      <workItem from=\"1682023951191\" duration=\"511000\" />\r\n      <workItem from=\"1682056344653\" duration=\"7886000\" />\r\n      <workItem from=\"1682067403104\" duration=\"102000\" />\r\n      <workItem from=\"1682073593485\" duration=\"1034000\" />\r\n      <workItem from=\"1682087981704\" duration=\"15062000\" />\r\n      <workItem from=\"1682116199375\" duration=\"2705000\" />\r\n      <workItem from=\"1682149028155\" duration=\"14217000\" />\r\n      <workItem from=\"1682174575839\" duration=\"72000\" />\r\n      <workItem from=\"1682174654488\" duration=\"103000\" />\r\n      <workItem from=\"1682174764146\" duration=\"99000\" />\r\n      <workItem from=\"1682180160196\" duration=\"2544000\" />\r\n      <workItem from=\"1682202541014\" duration=\"27766000\" />\r\n      <workItem from=\"1682333857238\" duration=\"49000\" />\r\n      <workItem from=\"1682334932839\" duration=\"1014000\" />\r\n      <workItem from=\"1682353770879\" duration=\"1777000\" />\r\n      <workItem from=\"1682371298142\" duration=\"130000\" />\r\n      <workItem from=\"1682411331249\" duration=\"72000\" />\r\n      <workItem from=\"1682438061345\" duration=\"1337000\" />\r\n      <workItem from=\"1682442721294\" duration=\"11971000\" />\r\n      <workItem from=\"1682681015033\" duration=\"40000\" />\r\n      <workItem from=\"1682872449211\" duration=\"20055000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"...\">\r\n      <created>1681925358549</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681925358549</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"some tests added.\">\r\n      <created>1681944373098</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681944373098</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"some enums are edited.\">\r\n      <created>1681995637116</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681995637116</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Resources added.\">\r\n      <created>1681999798822</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681999798822</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Foods\">\r\n      <created>1682000666231</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682000666231</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Foods are added.\">\r\n      <created>1682001101623</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682001101623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Humans are added.\">\r\n      <created>1682001707158</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682001707158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Humans are added. (final)\">\r\n      <created>1682002807377</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682002807377</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"stay logged in.\">\r\n      <created>1682021001755</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682021001755</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Storage and producer buildings...\">\r\n      <created>1682062460681</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682062460681</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Texture passable conditions ...\">\r\n      <created>1682063924968</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682063924968</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Main castle added.\">\r\n      <created>1682103062158</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682103062158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Walls, Draw bridge and gatehouses are added.\">\r\n      <created>1682115730401</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682115730401</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Towers added.\">\r\n      <created>1682165652089</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682165652089</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"castle buildings changed.\">\r\n      <created>1682168093012</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682168093012</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"castle buildings final change.\">\r\n      <created>1682172406877</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682172406877</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"method convertPasswordToHash() edited.\">\r\n      <created>1682189114122</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682189114122</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"a bug solved.\">\r\n      <created>1682237172223</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682237172223</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Building menu and Buildings dictionary. (first try)\">\r\n      <created>1682255351548</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682255351548</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Building menu (second try)\">\r\n      <created>1682289033211</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682289033211</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Building menu (second try)\">\r\n      <created>1682289065083</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682289065083</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"a commit to solve a problem.\">\r\n      <created>1682353891980</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682353891980</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"building menu edited.\">\r\n      <created>1682354296419</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682354296419</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"adding tree to Tile class\">\r\n      <created>1682439002928</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682439002928</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"just commit\">\r\n      <created>1682447586540</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682447586540</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Building menu updated&#10;and some enums edited.\">\r\n      <created>1682451476656</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682451476656</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"the last commits before checkpoint 1 ...\">\r\n      <created>1682453168189</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682453168189</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Repair added to Building controller.\">\r\n      <created>1682454117656</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682454117656</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"some features added to Government and its controller&#10;try for creating template maps\">\r\n      <created>1682898170788</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682898170788</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"30\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Foods\" />\r\n    <MESSAGE value=\"Foods are added.\" />\r\n    <MESSAGE value=\"Humans are added.\" />\r\n    <MESSAGE value=\"Humans are added. (final)\" />\r\n    <MESSAGE value=\"stay logged in.\" />\r\n    <MESSAGE value=\"Storage and producer buildings...\" />\r\n    <MESSAGE value=\"Texture passable conditions ...\" />\r\n    <MESSAGE value=\"Main castle added.\" />\r\n    <MESSAGE value=\"Walls, Draw bridge and gatehouses are added.\" />\r\n    <MESSAGE value=\"Towers added.\" />\r\n    <MESSAGE value=\"castle buildings changed.\" />\r\n    <MESSAGE value=\"castle buildings final change.\" />\r\n    <MESSAGE value=\"method convertPasswordToHash() edited.\" />\r\n    <MESSAGE value=\"a bug solved.\" />\r\n    <MESSAGE value=\"Building menu and Buildings dictionary. (first try)\" />\r\n    <MESSAGE value=\"Building menu (second try)\" />\r\n    <MESSAGE value=\"a commit to sove a problem.\" />\r\n    <MESSAGE value=\"a commit to solve a problem.\" />\r\n    <MESSAGE value=\"building menu edited.\" />\r\n    <MESSAGE value=\"adding tree to Tile class\" />\r\n    <MESSAGE value=\"just commit\" />\r\n    <MESSAGE value=\"Building menu updated&#10;and some enums edited.\" />\r\n    <MESSAGE value=\"the last commits before checkpoint 1 ...\" />\r\n    <MESSAGE value=\"Repair added to Building controller.\" />\r\n    <MESSAGE value=\"some features added to Government and its controller&#10;try for creating template maps\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"some features added to Government and its controller&#10;try for creating template maps\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Project_Phase_1$UserControllerTest.ic\" NAME=\"UserControllerTest Coverage Results\" MODIFIED=\"1681942420279\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>controller.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic\" NAME=\"UserControllerTest.changeEmailTest Coverage Results\" MODIFIED=\"1681944150811\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>controller.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/.idea/workspace.xml	(date 1682929171842)
+@@ -4,7 +4,21 @@
+     <option name="autoReloadType" value="SELECTIVE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="48940bc5-fa6d-4a81-b88a-cb236d4b61a3" name="Changes" comment="some features added to Government and its controller&#10;try for creating template maps" />
++    <list default="true" id="48940bc5-fa6d-4a81-b88a-cb236d4b61a3" name="Changes" comment="push problem test">
++      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/GameController.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/GameController.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/MapController.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/MapController.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/ViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/ViewController.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/human/HumanController.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/human/HumanController.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/controller/human/MoveController.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/controller/human/MoveController.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/enumeration/HumanStates.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/enumeration/HumanStates.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/enumeration/commands/UnitMenuCommands.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/enumeration/commands/UnitMenuCommands.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/model/activity/Move.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/model/activity/Move.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/model/human/Human.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/model/human/Human.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/view/GameMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/view/GameMenu.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/crusader/src/main/java/view/UnitMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/crusader/src/main/java/view/UnitMenu.java" afterDir="false" />
++    </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+@@ -176,9 +190,7 @@
+       <workItem from="1682371298142" duration="130000" />
+       <workItem from="1682411331249" duration="72000" />
+       <workItem from="1682438061345" duration="1337000" />
+-      <workItem from="1682442721294" duration="11971000" />
+-      <workItem from="1682681015033" duration="40000" />
+-      <workItem from="1682872449211" duration="20055000" />
++      <workItem from="1682442721294" duration="10440000" />
+     </task>
+     <task id="LOCAL-00001" summary="...">
+       <created>1681925358549</created>
+@@ -369,21 +381,7 @@
+       <option name="project" value="LOCAL" />
+       <updated>1682453168189</updated>
+     </task>
+-    <task id="LOCAL-00028" summary="Repair added to Building controller.">
+-      <created>1682454117656</created>
+-      <option name="number" value="00028" />
+-      <option name="presentableId" value="LOCAL-00028" />
+-      <option name="project" value="LOCAL" />
+-      <updated>1682454117656</updated>
+-    </task>
+-    <task id="LOCAL-00029" summary="some features added to Government and its controller&#10;try for creating template maps">
+-      <created>1682898170788</created>
+-      <option name="number" value="00029" />
+-      <option name="presentableId" value="LOCAL-00029" />
+-      <option name="project" value="LOCAL" />
+-      <updated>1682898170788</updated>
+-    </task>
+-    <option name="localTasksCounter" value="30" />
++    <option name="localTasksCounter" value="28" />
+     <servers />
+   </component>
+   <component name="TypeScriptGeneratedFilesManager">
+@@ -401,6 +399,8 @@
+     </option>
+   </component>
+   <component name="VcsManagerConfiguration">
++    <MESSAGE value="some enums are edited." />
++    <MESSAGE value="Resources added." />
+     <MESSAGE value="Foods" />
+     <MESSAGE value="Foods are added." />
+     <MESSAGE value="Humans are added." />
+@@ -424,15 +424,13 @@
+     <MESSAGE value="just commit" />
+     <MESSAGE value="Building menu updated&#10;and some enums edited." />
+     <MESSAGE value="the last commits before checkpoint 1 ..." />
+-    <MESSAGE value="Repair added to Building controller." />
+-    <MESSAGE value="some features added to Government and its controller&#10;try for creating template maps" />
+-    <option name="LAST_COMMIT_MESSAGE" value="some features added to Government and its controller&#10;try for creating template maps" />
++    <option name="LAST_COMMIT_MESSAGE" value="the last commits before checkpoint 1 ..." />
+   </component>
+   <component name="com.intellij.coverage.CoverageDataManagerImpl">
+-    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest.ic" NAME="UserControllerTest Coverage Results" MODIFIED="1681942420279" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
++    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic" NAME="UserControllerTest.changeEmailTest Coverage Results" MODIFIED="1681944150811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+       <FILTER>controller.*</FILTER>
+     </SUITE>
+-    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest_changeEmailTest.ic" NAME="UserControllerTest.changeEmailTest Coverage Results" MODIFIED="1681944150811" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
++    <SUITE FILE_PATH="coverage/Project_Phase_1$UserControllerTest.ic" NAME="UserControllerTest Coverage Results" MODIFIED="1681942420279" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+       <FILTER>controller.*</FILTER>
+     </SUITE>
+   </component>
+Index: crusader/src/main/java/model/human/Human.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package model.human;\r\n\r\n\r\nimport controller.GameController;\r\nimport enumeration.HumanStates;\r\nimport javafx.util.Pair;\r\nimport model.Government;\r\nimport model.activity.Move;\r\nimport model.game.Map;\r\nimport model.game.Tile;\r\n\r\nimport java.util.List;\r\n\r\npublic abstract class Human implements Cloneable {\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n\r\n    private String name;\r\n    private Government government = null;\r\n    private int speed;\r\n    private int x, y;\r\n    private int defenseRating;\r\n    private int health;\r\n    private HumanStates state;\r\n    private int shootingRange;\r\n    private boolean isInvisible = false;\r\n    private Move move;\r\n\r\n    public Human(int speed, int defenseRating, int shootingRange) {\r\n        this.speed = speed;\r\n        this.defenseRating = defenseRating;\r\n        this.health = defenseRating;\r\n        this.shootingRange = shootingRange;\r\n    }\r\n\r\n    public HumanStates getState() {\r\n        return state;\r\n    }\r\n\r\n    public void setState(HumanStates state) {\r\n        this.state = state;\r\n    }\r\n\r\n    public boolean isInvisible() {\r\n        return isInvisible;\r\n    }\r\n\r\n    public void setInvisible(boolean invisible) {\r\n        isInvisible = invisible;\r\n    }\r\n\r\n    public Move getMove() {\r\n        return move;\r\n    }\r\n\r\n    public void setMove(Move move) {\r\n        this.move = move;\r\n    }\r\n\r\n\r\n    public void enableInvisible() {\r\n        this.isInvisible = true;\r\n    }\r\n\r\n    public Government getGovernment() {\r\n        return government;\r\n    }\r\n\r\n    public void setGovernment(Government government) {\r\n        this.government = government;\r\n    }\r\n\r\n    public int getHealth() {\r\n        return health;\r\n    }\r\n\r\n    public void setHealth(int health) {\r\n        this.health = health;\r\n    }\r\n\r\n    public int getShootingRange() {\r\n        return shootingRange;\r\n    }\r\n\r\n    public void setShootingRange(int shootingRange) {\r\n        this.shootingRange = shootingRange;\r\n    }\r\n\r\n    public int getSpeed() {\r\n        return speed;\r\n    }\r\n\r\n    public void setSpeed(int speed) {\r\n        this.speed = speed;\r\n    }\r\n\r\n    public int getX() {\r\n        return x;\r\n    }\r\n\r\n    public void setX(int x) {\r\n        this.x = x;\r\n    }\r\n\r\n    public int getY() {\r\n        return y;\r\n    }\r\n\r\n    public void setY(int y) {\r\n        this.y = y;\r\n    }\r\n\r\n    public int getDefenseRating() {\r\n        return defenseRating;\r\n    }\r\n\r\n    public void setDefenseRating(int defenseRating) {\r\n        this.defenseRating = defenseRating;\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public Human clone() throws CloneNotSupportedException {\r\n        return (Human) super.clone();\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/model/human/Human.java b/crusader/src/main/java/model/human/Human.java
+--- a/crusader/src/main/java/model/human/Human.java	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/crusader/src/main/java/model/human/Human.java	(date 1682929171403)
+@@ -2,7 +2,7 @@
+ 
+ 
+ import controller.GameController;
+-import enumeration.HumanStates;
++import java.lang.String;
+ import javafx.util.Pair;
+ import model.Government;
+ import model.activity.Move;
+@@ -27,7 +27,7 @@
+     private int x, y;
+     private int defenseRating;
+     private int health;
+-    private HumanStates state;
++    private String state;
+     private int shootingRange;
+     private boolean isInvisible = false;
+     private Move move;
+@@ -39,11 +39,11 @@
+         this.shootingRange = shootingRange;
+     }
+ 
+-    public HumanStates getState() {
++    public String getState() {
+         return state;
+     }
+ 
+-    public void setState(HumanStates state) {
++    public void setState(String state) {
+         this.state = state;
+     }
+ 
+Index: crusader/src/main/java/controller/human/HumanController.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package controller.human;\r\n\r\n\r\nimport javafx.util.Pair;\r\nimport model.activity.Move;\r\nimport model.human.military.Military;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.LinkedList;\r\n\r\n\r\npublic class HumanController {\r\n    public static ArrayList<Military> militaries;\r\n\r\n    public static boolean move(Pair<Integer, Integer> endPair) {\r\n\r\n        Pair<Integer, Integer> startPair = getStartPair();\r\n        LinkedList<Pair<Integer, Integer>> path = MoveController.checkHasPath(startPair, endPair);\r\n        LinkedList<Pair<Integer, Integer>> assassinPath = checkHasLadderPath(startPair, endPair, path);\r\n        LinkedList<Pair<Integer, Integer>> ladderPath = checkAssassinPath(startPair, endPair, path);\r\n\r\n\r\n        if (path == null && assassinPath == null && ladderPath == null) {\r\n            return false;\r\n        }\r\n        if (path == null) {\r\n            for (Military military : militaries) {\r\n                if (military.isUsesLadder()) {\r\n                    Move move = new Move(military.getX(), military.getY(), endPair, true, military);\r\n                    move.setPath(ladderPath);\r\n                    military.setMove(move);\r\n\r\n                }\r\n\r\n                if (military.isUsesLadder()) {\r\n                    Move move = new Move(military.getX(), military.getY(), endPair, true, military);\r\n                    move.setPath(assassinPath);\r\n                    military.setMove(move);\r\n\r\n                }\r\n            }\r\n        } else {\r\n            for (Military military : militaries) {\r\n                Move move = new Move(military.getX(), military.getY(), endPair, true, military);\r\n                move.setPath(path);\r\n                military.setMove(move);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static boolean attack(Military enemy) {\r\n        Pair<Integer, Integer> startPair = getStartPair();\r\n        Pair<Integer, Integer> endPair = new Pair<>(enemy.getY(), enemy.getX());\r\n        LinkedList<Pair<Integer, Integer>> path = MoveController.checkHasPath(startPair, endPair);\r\n        LinkedList<Pair<Integer, Integer>> assassinPath = checkHasLadderPath(startPair, endPair, path);\r\n        LinkedList<Pair<Integer, Integer>> ladderPath = checkAssassinPath(startPair, endPair, path);\r\n\r\n        if (path == null && assassinPath == null && ladderPath == null) {\r\n            return false;\r\n        }\r\n\r\n        if (path == null) {\r\n            for (Military military : militaries) {\r\n                if (military.isUsesLadder()) {\r\n                    Move move = new Move(military.getX(), military.getY(), enemy, false, military);\r\n                    move.setPath(ladderPath);\r\n                    military.setMove(move);\r\n\r\n                }\r\n\r\n                if (military.isUsesLadder()) {\r\n                    Move move = new Move(military.getX(), military.getY(), enemy, false, military);\r\n                    move.setPath(assassinPath);\r\n                    military.setMove(move);\r\n\r\n                }\r\n            }\r\n        } else {\r\n            for (Military military : militaries) {\r\n                Move move = new Move(military.getX(), military.getY(), enemy, false, military);\r\n                move.setPath(path);\r\n                military.setMove(move);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static boolean patrolUnit(int x1, int y1, int x2, int y2) {\r\n\r\n        Pair<Integer, Integer> patrolPair = new Pair<>(x2, y2);\r\n        Pair<Integer, Integer> endPair = new Pair<>(x1, y1);\r\n        Pair<Integer, Integer> startPair = getStartPair();\r\n        LinkedList<Pair<Integer, Integer>> path = MoveController.checkHasPath(startPair, endPair);\r\n        LinkedList<Pair<Integer, Integer>> assassinPath = checkHasLadderPath(startPair, endPair, path);\r\n        LinkedList<Pair<Integer, Integer>> ladderPath = checkAssassinPath(startPair, endPair, path);\r\n\r\n        if (path == null && assassinPath == null && ladderPath == null) {\r\n            return false;\r\n        }\r\n\r\n        if (!checkPatrolPath(endPair, patrolPair)) {\r\n            return false;\r\n        }\r\n        if (path == null) {\r\n            for (Military military : militaries) {\r\n                if (military.isUsesLadder()) {\r\n                    Move move = new Move(military.getX(), military.getY(), endPair, true, military);\r\n                    move.setPath(ladderPath);\r\n                    move.setMovePatrol(patrolPair);\r\n                    military.setMove(move);\r\n                }\r\n\r\n                if (military.isUsesLadder()) {\r\n                    Move move = new Move(military.getX(), military.getY(), endPair, true, military);\r\n                    move.setPath(assassinPath);\r\n                    move.setMovePatrol(patrolPair);\r\n                    military.setMove(move);\r\n\r\n                }\r\n            }\r\n        } else {\r\n            for (Military military : militaries) {\r\n                Move move = new Move(military.getX(), military.getY(), endPair, true, military);\r\n                move.setPath(path);\r\n                move.setMovePatrol(patrolPair);\r\n                military.setMove(move);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static LinkedList<Pair<Integer, Integer>> checkHasLadderPath(Pair<Integer, Integer> startPair, Pair<Integer, Integer> endPair, LinkedList<Pair<Integer, Integer>> path) {\r\n        if (path != null) {\r\n            return path;\r\n        }\r\n        for (Military military : militaries) {\r\n            if (military.isUsesLadder()) {\r\n                return MoveController.getPath(startPair, endPair, military);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static LinkedList<Pair<Integer, Integer>> checkAssassinPath(Pair<Integer, Integer> startPair, Pair<Integer, Integer> endPair, LinkedList<Pair<Integer, Integer>> path) {\r\n        if (path != null) {\r\n            return path;\r\n        }\r\n        for (Military military : militaries) {\r\n            if (military.getName().equals(\"assassin\")) {\r\n                return MoveController.getPath(startPair, endPair, military);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static Pair<Integer, Integer> getStartPair() {\r\n        Military firstMilitary = militaries.get(0);\r\n        return new Pair<>(firstMilitary.getX(), firstMilitary.getY());\r\n    }\r\n\r\n    public static boolean checkPatrolPath(Pair<Integer, Integer> startPair, Pair<Integer, Integer> endPair) {\r\n        LinkedList<Pair<Integer, Integer>> path = MoveController.checkHasPath(startPair, endPair);\r\n        LinkedList<Pair<Integer, Integer>> assassinPath = checkHasLadderPath(startPair, endPair, path);\r\n        LinkedList<Pair<Integer, Integer>> ladderPath = checkAssassinPath(startPair, endPair, path);\r\n        if (path == null && assassinPath == null && ladderPath == null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/controller/human/HumanController.java b/crusader/src/main/java/controller/human/HumanController.java
+--- a/crusader/src/main/java/controller/human/HumanController.java	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/crusader/src/main/java/controller/human/HumanController.java	(date 1682929171374)
+@@ -1,6 +1,7 @@
+ package controller.human;
+ 
+ 
++import enumeration.MoveStates;
+ import javafx.util.Pair;
+ import model.activity.Move;
+ import model.human.military.Military;
+@@ -14,10 +15,10 @@
+ 
+     public static boolean move(Pair<Integer, Integer> endPair) {
+ 
+-        Pair<Integer, Integer> startPair = getStartPair();
++        Pair<Integer, Integer> startPair = MoveController.getStartPair();
+         LinkedList<Pair<Integer, Integer>> path = MoveController.checkHasPath(startPair, endPair);
+-        LinkedList<Pair<Integer, Integer>> assassinPath = checkHasLadderPath(startPair, endPair, path);
+-        LinkedList<Pair<Integer, Integer>> ladderPath = checkAssassinPath(startPair, endPair, path);
++        LinkedList<Pair<Integer, Integer>> assassinPath = MoveController.checkHasLadderPath(startPair, endPair, path);
++        LinkedList<Pair<Integer, Integer>> ladderPath = MoveController.checkAssassinPath(startPair, endPair, path);
+ 
+ 
+         if (path == null && assassinPath == null && ladderPath == null) {
+@@ -50,11 +51,11 @@
+     }
+ 
+     public static boolean attack(Military enemy) {
+-        Pair<Integer, Integer> startPair = getStartPair();
++        Pair<Integer, Integer> startPair = MoveController.getStartPair();
+         Pair<Integer, Integer> endPair = new Pair<>(enemy.getY(), enemy.getX());
+         LinkedList<Pair<Integer, Integer>> path = MoveController.checkHasPath(startPair, endPair);
+-        LinkedList<Pair<Integer, Integer>> assassinPath = checkHasLadderPath(startPair, endPair, path);
+-        LinkedList<Pair<Integer, Integer>> ladderPath = checkAssassinPath(startPair, endPair, path);
++        LinkedList<Pair<Integer, Integer>> assassinPath = MoveController.checkHasLadderPath(startPair, endPair, path);
++        LinkedList<Pair<Integer, Integer>> ladderPath = MoveController.checkAssassinPath(startPair, endPair, path);
+ 
+         if (path == null && assassinPath == null && ladderPath == null) {
+             return false;
+@@ -90,16 +91,16 @@
+ 
+         Pair<Integer, Integer> patrolPair = new Pair<>(x2, y2);
+         Pair<Integer, Integer> endPair = new Pair<>(x1, y1);
+-        Pair<Integer, Integer> startPair = getStartPair();
++        Pair<Integer, Integer> startPair = MoveController.getStartPair();
+         LinkedList<Pair<Integer, Integer>> path = MoveController.checkHasPath(startPair, endPair);
+-        LinkedList<Pair<Integer, Integer>> assassinPath = checkHasLadderPath(startPair, endPair, path);
+-        LinkedList<Pair<Integer, Integer>> ladderPath = checkAssassinPath(startPair, endPair, path);
++        LinkedList<Pair<Integer, Integer>> assassinPath = MoveController.checkHasLadderPath(startPair, endPair, path);
++        LinkedList<Pair<Integer, Integer>> ladderPath = MoveController.checkAssassinPath(startPair, endPair, path);
+ 
+         if (path == null && assassinPath == null && ladderPath == null) {
+             return false;
+         }
+ 
+-        if (!checkPatrolPath(endPair, patrolPair)) {
++        if (!MoveController.checkPatrolPath(endPair, patrolPair)) {
+             return false;
+         }
+         if (path == null) {
+@@ -129,44 +130,21 @@
+         }
+         return true;
+     }
+-
+-    public static LinkedList<Pair<Integer, Integer>> checkHasLadderPath(Pair<Integer, Integer> startPair, Pair<Integer, Integer> endPair, LinkedList<Pair<Integer, Integer>> path) {
+-        if (path != null) {
+-            return path;
+-        }
++    public static boolean deactivatePatrol(int x1, int y1, int x2, int y2) {
++        int counter = 0;
+         for (Military military : militaries) {
+-            if (military.isUsesLadder()) {
+-                return MoveController.getPath(startPair, endPair, military);
++            if (military.getMove().getMoveState().equals(MoveStates.PATROL.getState())){
++                counter++;
++                military.getMove().stopMove();
+             }
+         }
+-        return null;
++        return counter != 0;
+     }
+-
+-    public static LinkedList<Pair<Integer, Integer>> checkAssassinPath(Pair<Integer, Integer> startPair, Pair<Integer, Integer> endPair, LinkedList<Pair<Integer, Integer>> path) {
+-        if (path != null) {
+-            return path;
+-        }
++    public static void setState(String state,ArrayList<Military> militaries){
+         for (Military military : militaries) {
+-            if (military.getName().equals("assassin")) {
+-                return MoveController.getPath(startPair, endPair, military);
++            if (military.getMove().getMoveState().equals(MoveStates.PATROL.getState())){
++                military.setState(state);
+             }
+         }
+-        return null;
+     }
+-
+-    public static Pair<Integer, Integer> getStartPair() {
+-        Military firstMilitary = militaries.get(0);
+-        return new Pair<>(firstMilitary.getX(), firstMilitary.getY());
+-    }
+-
+-    public static boolean checkPatrolPath(Pair<Integer, Integer> startPair, Pair<Integer, Integer> endPair) {
+-        LinkedList<Pair<Integer, Integer>> path = MoveController.checkHasPath(startPair, endPair);
+-        LinkedList<Pair<Integer, Integer>> assassinPath = checkHasLadderPath(startPair, endPair, path);
+-        LinkedList<Pair<Integer, Integer>> ladderPath = checkAssassinPath(startPair, endPair, path);
+-        if (path == null && assassinPath == null && ladderPath == null) {
+-            return false;
+-        }
+-        return true;
+-    }
+-
+ }
+Index: crusader/src/main/java/enumeration/HumanStates.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package enumeration;\r\n\r\npublic enum HumanStates {\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/enumeration/HumanStates.java b/crusader/src/main/java/enumeration/HumanStates.java
+--- a/crusader/src/main/java/enumeration/HumanStates.java	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/crusader/src/main/java/enumeration/HumanStates.java	(date 1682923881798)
+@@ -1,4 +1,17 @@
+ package enumeration;
+ 
+ public enum HumanStates {
++
++    STAND_GROUND("standing"),
++    DEFENSIVE_STANCE("defensive"),
++    AGGRESSIVE_STANCE("offensive");
++    private final String state;
++
++    private HumanStates(String state) {
++        this.state = state;
++    }
++
++    public String getState() {
++        return state;
++    }
+ }
+Index: crusader/src/main/java/view/GameMenu.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package view;\r\n\r\nimport controller.GameController;\r\nimport controller.MainController;\r\nimport controller.ViewController;\r\nimport enumeration.answers.Answers;\r\nimport enumeration.commands.Commands;\r\nimport enumeration.commands.GameMenuCommands;\r\nimport model.game.Game;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\n\r\npublic class GameMenu {\r\n\r\n    public static void run(Scanner scanner, Game game) {\r\n        String input, output;\r\n        System.out.println(\"<< Game Menu >>\");\r\n        //TODO add try catch of parseInt\r\n        while (true) {\r\n            input = scanner.nextLine();\r\n            Matcher dropBuildingMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.DROP_BUILDING);\r\n            Matcher selectBuildingMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.SELECT_BUILDING);\r\n            Matcher selectUnitMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.SELECT_UNIT);\r\n            Matcher governmentMenuMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.GOVERNMENT_MENU);\r\n            Matcher tradeMenuMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.TRADE_MENU);\r\n            Matcher nextTurnMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.NEXT_TURN);\r\n            Matcher showPlayerMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.SHOW_PLAYER);\r\n            Matcher showRoundMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.SHOW_ROUND);\r\n            Matcher backMatcher = Commands.getMatcher(input, Commands.BACK);\r\n            Matcher exitMatcher = Commands.getMatcher(input, Commands.EXIT_CRUSADER);\r\n            // to be continued.?\r\n            if (dropBuildingMatcher.matches()) {\r\n                String items = dropBuildingMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(GameMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(GameMenuCommands.Y_ITEM.getRegex());\r\n                itemsPattern.add(GameMenuCommands.TYPE_ITEM.getRegex());\r\n                if(ViewController.isItemMatch(items,itemsPattern)){\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    String type = ViewController.resultMatcher.group(\"type\");\r\n                    type = ViewController.editItem(type);\r\n                    output = GameController.dropBuilding(x,y,type);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (selectBuildingMatcher.matches()) {\r\n                String items = selectBuildingMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(GameMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(GameMenuCommands.Y_ITEM.getRegex());\r\n                if(ViewController.isItemMatch(items,itemsPattern)){\r\n                    int x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    int y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    output = GameController.selectBuilding(x,y);\r\n                    System.out.println(output);\r\n                }\r\n\r\n            } else if (selectUnitMatcher.matches()) {\r\n                String items = selectUnitMatcher.group(\"items\");\r\n                ArrayList<String> itemsPattern = new ArrayList<>();\r\n                itemsPattern.add(GameMenuCommands.X_ITEM.getRegex());\r\n                itemsPattern.add(GameMenuCommands.Y_ITEM.getRegex());\r\n                if(ViewController.isItemMatch(items,itemsPattern)){\r\n                    int x;\r\n                    int y;\r\n                    try {\r\n                        x = Integer.parseInt(ViewController.resultMatcher.group(\"x\"));\r\n                    }catch (Exception e){\r\n                        x = -1;\r\n                    }\r\n\r\n                    try {\r\n                        y = Integer.parseInt(ViewController.resultMatcher.group(\"y\"));\r\n                    }catch (Exception e){\r\n                        y = -1;\r\n                    }\r\n                    output = GameController.selectUnit(x,y,scanner);\r\n                    System.out.println(output);\r\n                }\r\n            } else if (governmentMenuMatcher.matches()) {\r\n                GovernmentMenu.run(scanner);\r\n            } else if (tradeMenuMatcher.matches()) {\r\n                TradeMenu.run(scanner);\r\n            } else if (nextTurnMatcher.matches()) {\r\n                output = GameController.changeTurn();\r\n                System.out.println(output);\r\n            } else if (showPlayerMatcher.matches()) {\r\n                output = GameController.changeTurn();\r\n                System.out.println(output);\r\n            } else if (showRoundMatcher.matches()) {\r\n                output = GameController.changeTurn();\r\n                System.out.println(output);\r\n            } else if (backMatcher.matches()) {\r\n                break;\r\n            } else if (exitMatcher.matches()) {\r\n                MainController.exitCrusader();\r\n            } else {\r\n                System.out.println(Answers.INVALID_COMMAND.getValue());\r\n            }\r\n        }\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/crusader/src/main/java/view/GameMenu.java b/crusader/src/main/java/view/GameMenu.java
+--- a/crusader/src/main/java/view/GameMenu.java	(revision b95fd36669ade3b3398cb686d491372b61b6c5d9)
++++ b/crusader/src/main/java/view/GameMenu.java	(date 1682929171385)
+@@ -6,6 +6,7 @@
+ import enumeration.answers.Answers;
+ import enumeration.commands.Commands;
+ import enumeration.commands.GameMenuCommands;
++import enumeration.commands.UnitMenuCommands;
+ import model.game.Game;
+ 
+ import java.util.ArrayList;
+@@ -25,6 +26,7 @@
+             Matcher selectUnitMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.SELECT_UNIT);
+             Matcher governmentMenuMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.GOVERNMENT_MENU);
+             Matcher tradeMenuMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.TRADE_MENU);
++            Matcher setUnitStateMatcher = UnitMenuCommands.getMatcher(input, UnitMenuCommands.SET_UNIT_STATE);
+             Matcher nextTurnMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.NEXT_TURN);
+             Matcher showPlayerMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.SHOW_PLAYER);
+             Matcher showRoundMatcher = GameMenuCommands.getMatcher(input, GameMenuCommands.SHOW_ROUND);
+@@ -37,12 +39,12 @@
+                 itemsPattern.add(GameMenuCommands.X_ITEM.getRegex());
+                 itemsPattern.add(GameMenuCommands.Y_ITEM.getRegex());
+                 itemsPattern.add(GameMenuCommands.TYPE_ITEM.getRegex());
+-                if(ViewController.isItemMatch(items,itemsPattern)){
+-                    int x = Integer.parseInt(ViewController.resultMatcher.group("x"));
+-                    int y = Integer.parseInt(ViewController.resultMatcher.group("y"));
++                if (ViewController.isItemMatch(items, itemsPattern)) {
++                    int x = ViewController.getNumberOfRegex("x");
++                    int y = ViewController.getNumberOfRegex("y");
+                     String type = ViewController.resultMatcher.group("type");
+                     type = ViewController.editItem(type);
+-                    output = GameController.dropBuilding(x,y,type);
++                    output = GameController.dropBuilding(x, y, type);
+                     System.out.println(output);
+                 }
+             } else if (selectBuildingMatcher.matches()) {
+@@ -50,10 +52,10 @@
+                 ArrayList<String> itemsPattern = new ArrayList<>();
+                 itemsPattern.add(GameMenuCommands.X_ITEM.getRegex());
+                 itemsPattern.add(GameMenuCommands.Y_ITEM.getRegex());
+-                if(ViewController.isItemMatch(items,itemsPattern)){
+-                    int x = Integer.parseInt(ViewController.resultMatcher.group("x"));
+-                    int y = Integer.parseInt(ViewController.resultMatcher.group("y"));
+-                    output = GameController.selectBuilding(x,y);
++                if (ViewController.isItemMatch(items, itemsPattern)) {
++                    int x = ViewController.getNumberOfRegex("x");
++                    int y = ViewController.getNumberOfRegex("y");
++                    output = GameController.selectBuilding(x, y);
+                     System.out.println(output);
+                 }
+ 
+@@ -62,22 +64,25 @@
+                 ArrayList<String> itemsPattern = new ArrayList<>();
+                 itemsPattern.add(GameMenuCommands.X_ITEM.getRegex());
+                 itemsPattern.add(GameMenuCommands.Y_ITEM.getRegex());
+-                if(ViewController.isItemMatch(items,itemsPattern)){
+-                    int x;
+-                    int y;
+-                    try {
+-                        x = Integer.parseInt(ViewController.resultMatcher.group("x"));
+-                    }catch (Exception e){
+-                        x = -1;
+-                    }
+-
+-                    try {
+-                        y = Integer.parseInt(ViewController.resultMatcher.group("y"));
+-                    }catch (Exception e){
+-                        y = -1;
+-                    }
+-                    output = GameController.selectUnit(x,y,scanner);
++                if (ViewController.isItemMatch(items, itemsPattern)) {
++                    int x = ViewController.getNumberOfRegex("x");
++                    int y = ViewController.getNumberOfRegex("y");
++                    output = GameController.selectUnit(x, y, scanner);
+                     System.out.println(output);
++                }
++            } else if (setUnitStateMatcher.matches()) {
++                String items = setUnitStateMatcher.group("items");
++                ArrayList<String> itemsPattern = new ArrayList<>();
++                itemsPattern.add(UnitMenuCommands.X_ITEM.getRegex());
++                itemsPattern.add(UnitMenuCommands.Y_ITEM.getRegex());
++                itemsPattern.add(UnitMenuCommands.S_ITEM.getRegex());
++                if (ViewController.isItemMatch(items, itemsPattern)) {
++                    int x = ViewController.getNumberOfRegex("x");
++                    int y = ViewController.getNumberOfRegex("y");
++                    String state = ViewController.resultMatcher.group("state");
++                    state = ViewController.editItem(state);
++                    output = GameController.setStateOfMilitary(x, y, state);
++                    System.out.println(output);
+                 }
+             } else if (governmentMenuMatcher.matches()) {
+                 GovernmentMenu.run(scanner);
